//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Linq;
using System.Data.Linq;
using System.Linq.Expressions;
using System.Data.Linq.Mapping;
using System.Collections;
using System.Collections.Generic;
using Acme.Northwind.EFDAL;
using nHydrate.EFCore.DataAccess;

namespace Acme.Northwind.EFDAL
{
	#region CategoryQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the Category collection.
	/// </summary>
	[Serializable]
	[Table(Name = "Categories")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.1.2")]
	public partial class CategoryQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'Categories.CategoryID' database field)
		/// </summary>
		[Column(Name = "CategoryID", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int CategoryID { get; set; }
		/// <summary>
		/// (Maps to the 'Categories.CategoryName' database field)
		/// </summary>
		[Column(Name = "CategoryName", DbType = "NVarChar (15)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CategoryName { get; set; }
		/// <summary>
		/// (Maps to the 'Categories.Description' database field)
		/// </summary>
		[Column(Name = "Description", DbType = "NText", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Description { get; set; }
		/// <summary>
		/// (Maps to the 'Categories.Picture' database field)
		/// </summary>
		[Column(Name = "Picture", DbType = "Image", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual System.Byte[] Picture { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual byte[] Timestamp { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the Product entity.
		/// </summary>
		[Association(ThisKey = "CategoryID", OtherKey = "CategoryID")]
		public Acme.Northwind.EFDAL.ProductQuery ProductList { get; private set; }

		#endregion

	}

	#endregion

	#region CustomerCustomerDemoQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the CustomerCustomerDemo collection.
	/// </summary>
	[Serializable]
	[Table(Name = "CustomerCustomerDemo")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.1.2")]
	public partial class CustomerCustomerDemoQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'CustomerCustomerDemo.CustomerID' database field)
		/// </summary>
		[Column(Name = "CustomerID", DbType = "NChar (5)", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CustomerID { get; set; }
		/// <summary>
		/// (Maps to the 'CustomerCustomerDemo.CustomerTypeID' database field)
		/// </summary>
		[Column(Name = "CustomerTypeID", DbType = "NChar (10)", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CustomerTypeID { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual byte[] Timestamp { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the CustomerDemographic entity. (Role: 'customercustomerdemo')
		/// </summary>
		[Association(ThisKey = "CustomerTypeID", OtherKey = "CustomerTypeID")]
		public Acme.Northwind.EFDAL.CustomerDemographicQuery CustomercustomerdemoCustomerDemographic { get; private set; }
		/// <summary>
		/// This is a mapping of the relationship with the Customer entity.
		/// </summary>
		[Association(ThisKey = "CustomerID", OtherKey = "CustomerID")]
		public Acme.Northwind.EFDAL.CustomerQuery Customer { get; private set; }

		#endregion

	}

	#endregion

	#region CustomerDemographicQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the CustomerDemographic collection.
	/// </summary>
	[Serializable]
	[Table(Name = "CustomerDemographics")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.1.2")]
	public partial class CustomerDemographicQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'CustomerDemographics.CustomerDesc' database field)
		/// </summary>
		[Column(Name = "CustomerDesc", DbType = "NText", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CustomerDesc { get; set; }
		/// <summary>
		/// (Maps to the 'CustomerDemographics.CustomerTypeID' database field)
		/// </summary>
		[Column(Name = "CustomerTypeID", DbType = "NChar (10)", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CustomerTypeID { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual byte[] Timestamp { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the CustomerCustomerDemo entity. (Role: 'customercustomerdemo')
		/// </summary>
		[Association(ThisKey = "CustomerTypeID", OtherKey = "CustomerTypeID")]
		public Acme.Northwind.EFDAL.CustomerCustomerDemoQuery CustomercustomerdemoCustomerCustomerDemoList { get; private set; }

		#endregion

	}

	#endregion

	#region CustomerQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the Customer collection.
	/// </summary>
	[Serializable]
	[Table(Name = "Customers")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.1.2")]
	public partial class CustomerQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'Customers.Address' database field)
		/// </summary>
		[Column(Name = "Address", DbType = "NVarChar (60)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Address { get; set; }
		/// <summary>
		/// (Maps to the 'Customers.City' database field)
		/// </summary>
		[Column(Name = "City", DbType = "NVarChar (15)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string City { get; set; }
		/// <summary>
		/// (Maps to the 'Customers.CompanyName' database field)
		/// </summary>
		[Column(Name = "CompanyName", DbType = "NVarChar (40)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CompanyName { get; set; }
		/// <summary>
		/// (Maps to the 'Customers.ContactName' database field)
		/// </summary>
		[Column(Name = "ContactName", DbType = "NVarChar (30)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ContactName { get; set; }
		/// <summary>
		/// (Maps to the 'Customers.ContactTitle' database field)
		/// </summary>
		[Column(Name = "ContactTitle", DbType = "NVarChar (30)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ContactTitle { get; set; }
		/// <summary>
		/// (Maps to the 'Customers.Country' database field)
		/// </summary>
		[Column(Name = "Country", DbType = "NVarChar (15)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Country { get; set; }
		/// <summary>
		/// (Maps to the 'Customers.CustomerID' database field)
		/// </summary>
		[Column(Name = "CustomerID", DbType = "NChar (5)", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CustomerID { get; set; }
		/// <summary>
		/// (Maps to the 'Customers.Fax' database field)
		/// </summary>
		[Column(Name = "Fax", DbType = "NVarChar (24)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Fax { get; set; }
		/// <summary>
		/// (Maps to the 'Customers.Phone' database field)
		/// </summary>
		[Column(Name = "Phone", DbType = "NVarChar (24)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Phone { get; set; }
		/// <summary>
		/// (Maps to the 'Customers.PostalCode' database field)
		/// </summary>
		[Column(Name = "PostalCode", DbType = "NVarChar (10)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string PostalCode { get; set; }
		/// <summary>
		/// (Maps to the 'Customers.Region' database field)
		/// </summary>
		[Column(Name = "Region", DbType = "NVarChar (15)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Region { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual byte[] Timestamp { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the CustomerCustomerDemo entity.
		/// </summary>
		[Association(ThisKey = "CustomerID", OtherKey = "CustomerID")]
		public Acme.Northwind.EFDAL.CustomerCustomerDemoQuery CustomerCustomerDemoList { get; private set; }
		/// <summary>
		/// This is a mapping of the relationship with the Order entity.
		/// </summary>
		[Association(ThisKey = "CustomerID", OtherKey = "CustomerID")]
		public Acme.Northwind.EFDAL.OrderQuery OrderList { get; private set; }

		#endregion

	}

	#endregion

	#region EmployeeQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the Employee collection.
	/// </summary>
	[Serializable]
	[Table(Name = "Employees")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.1.2")]
	public partial class EmployeeQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'Employees.Address' database field)
		/// </summary>
		[Column(Name = "Address", DbType = "NVarChar (60)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Address { get; set; }
		/// <summary>
		/// (Maps to the 'Employees.BirthDate' database field)
		/// </summary>
		[Column(Name = "BirthDate", DbType = "DateTime", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? BirthDate { get; set; }
		/// <summary>
		/// (Maps to the 'Employees.City' database field)
		/// </summary>
		[Column(Name = "City", DbType = "NVarChar (15)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string City { get; set; }
		/// <summary>
		/// (Maps to the 'Employees.Country' database field)
		/// </summary>
		[Column(Name = "Country", DbType = "NVarChar (15)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Country { get; set; }
		/// <summary>
		/// (Maps to the 'Employees.EmployeeID' database field)
		/// </summary>
		[Column(Name = "EmployeeID", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int EmployeeID { get; set; }
		/// <summary>
		/// (Maps to the 'Employees.Extension' database field)
		/// </summary>
		[Column(Name = "Extension", DbType = "NVarChar (4)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Extension { get; set; }
		/// <summary>
		/// (Maps to the 'Employees.FirstName' database field)
		/// </summary>
		[Column(Name = "FirstName", DbType = "NVarChar (10)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string FirstName { get; set; }
		/// <summary>
		/// (Maps to the 'Employees.HireDate' database field)
		/// </summary>
		[Column(Name = "HireDate", DbType = "DateTime", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? HireDate { get; set; }
		/// <summary>
		/// (Maps to the 'Employees.HomePhone' database field)
		/// </summary>
		[Column(Name = "HomePhone", DbType = "NVarChar (24)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string HomePhone { get; set; }
		/// <summary>
		/// (Maps to the 'Employees.LastName' database field)
		/// </summary>
		[Column(Name = "LastName", DbType = "NVarChar (20)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string LastName { get; set; }
		/// <summary>
		/// (Maps to the 'Employees.Notes' database field)
		/// </summary>
		[Column(Name = "Notes", DbType = "NText", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Notes { get; set; }
		/// <summary>
		/// (Maps to the 'Employees.Photo' database field)
		/// </summary>
		[Column(Name = "Photo", DbType = "Image", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual System.Byte[] Photo { get; set; }
		/// <summary>
		/// (Maps to the 'Employees.PhotoPath' database field)
		/// </summary>
		[Column(Name = "PhotoPath", DbType = "NVarChar (255)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string PhotoPath { get; set; }
		/// <summary>
		/// (Maps to the 'Employees.PostalCode' database field)
		/// </summary>
		[Column(Name = "PostalCode", DbType = "NVarChar (10)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string PostalCode { get; set; }
		/// <summary>
		/// (Maps to the 'Employees.Region' database field)
		/// </summary>
		[Column(Name = "Region", DbType = "NVarChar (15)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Region { get; set; }
		/// <summary>
		/// (Maps to the 'Employees.ReportsTo' database field)
		/// </summary>
		[Column(Name = "ReportsTo", DbType = "Int", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int? ReportsTo { get; set; }
		/// <summary>
		/// (Maps to the 'Employees.Title' database field)
		/// </summary>
		[Column(Name = "Title", DbType = "NVarChar (30)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Title { get; set; }
		/// <summary>
		/// (Maps to the 'Employees.TitleOfCourtesy' database field)
		/// </summary>
		[Column(Name = "TitleOfCourtesy", DbType = "NVarChar (25)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string TitleOfCourtesy { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual byte[] Timestamp { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the EmployeeTerritorie entity.
		/// </summary>
		[Association(ThisKey = "EmployeeID", OtherKey = "EmployeeID")]
		public Acme.Northwind.EFDAL.EmployeeTerritorieQuery EmployeeTerritorieList { get; private set; }
		/// <summary>
		/// This is a mapping of the relationship with the Order entity.
		/// </summary>
		[Association(ThisKey = "EmployeeID", OtherKey = "EmployeeID")]
		public Acme.Northwind.EFDAL.OrderQuery OrderList { get; private set; }

		#endregion

	}

	#endregion

	#region EmployeeTerritorieQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the EmployeeTerritorie collection.
	/// </summary>
	[Serializable]
	[Table(Name = "EmployeeTerritories")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.1.2")]
	public partial class EmployeeTerritorieQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'EmployeeTerritories.EmployeeID' database field)
		/// </summary>
		[Column(Name = "EmployeeID", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int EmployeeID { get; set; }
		/// <summary>
		/// (Maps to the 'EmployeeTerritories.TerritoryID' database field)
		/// </summary>
		[Column(Name = "TerritoryID", DbType = "NVarChar (20)", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string TerritoryID { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual byte[] Timestamp { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the Employee entity.
		/// </summary>
		[Association(ThisKey = "EmployeeID", OtherKey = "EmployeeID")]
		public Acme.Northwind.EFDAL.EmployeeQuery Employee { get; private set; }
		/// <summary>
		/// This is a mapping of the relationship with the Territory entity.
		/// </summary>
		[Association(ThisKey = "TerritoryID", OtherKey = "TerritoryID")]
		public Acme.Northwind.EFDAL.TerritoryQuery Territory { get; private set; }

		#endregion

	}

	#endregion

	#region OrderDetailQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the OrderDetail collection.
	/// </summary>
	[Serializable]
	[Table(Name = "Order Details")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.1.2")]
	public partial class OrderDetailQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'Order Details.Discount' database field)
		/// </summary>
		[Column(Name = "Discount", DbType = "Real", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual System.Single Discount { get; set; }
		/// <summary>
		/// (Maps to the 'Order Details.OrderID' database field)
		/// </summary>
		[Column(Name = "OrderID", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int OrderID { get; set; }
		/// <summary>
		/// (Maps to the 'Order Details.ProductID' database field)
		/// </summary>
		[Column(Name = "ProductID", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int ProductID { get; set; }
		/// <summary>
		/// (Maps to the 'Order Details.Quantity' database field)
		/// </summary>
		[Column(Name = "Quantity", DbType = "SmallInt", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual short Quantity { get; set; }
		/// <summary>
		/// (Maps to the 'Order Details.UnitPrice' database field)
		/// </summary>
		[Column(Name = "UnitPrice", DbType = "Money", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual decimal UnitPrice { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual byte[] Timestamp { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the Order entity. (Role: 'order_details_orders')
		/// </summary>
		[Association(ThisKey = "OrderID", OtherKey = "OrderID")]
		public Acme.Northwind.EFDAL.OrderQuery Order_details_ordersOrder { get; private set; }
		/// <summary>
		/// This is a mapping of the relationship with the Product entity. (Role: 'order_details_products')
		/// </summary>
		[Association(ThisKey = "ProductID", OtherKey = "ProductID")]
		public Acme.Northwind.EFDAL.ProductQuery Order_details_productsProduct { get; private set; }

		#endregion

	}

	#endregion

	#region OrderQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the Order collection.
	/// </summary>
	[Serializable]
	[Table(Name = "Orders")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.1.2")]
	public partial class OrderQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'Orders.CustomerID' database field)
		/// </summary>
		[Column(Name = "CustomerID", DbType = "NChar (5)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CustomerID { get; set; }
		/// <summary>
		/// (Maps to the 'Orders.EmployeeID' database field)
		/// </summary>
		[Column(Name = "EmployeeID", DbType = "Int", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int? EmployeeID { get; set; }
		/// <summary>
		/// (Maps to the 'Orders.Freight' database field)
		/// </summary>
		[Column(Name = "Freight", DbType = "Money", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual decimal? Freight { get; set; }
		/// <summary>
		/// (Maps to the 'Orders.OrderDate' database field)
		/// </summary>
		[Column(Name = "OrderDate", DbType = "DateTime", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? OrderDate { get; set; }
		/// <summary>
		/// (Maps to the 'Orders.OrderID' database field)
		/// </summary>
		[Column(Name = "OrderID", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int OrderID { get; set; }
		/// <summary>
		/// (Maps to the 'Orders.RequiredDate' database field)
		/// </summary>
		[Column(Name = "RequiredDate", DbType = "DateTime", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? RequiredDate { get; set; }
		/// <summary>
		/// (Maps to the 'Orders.ShipAddress' database field)
		/// </summary>
		[Column(Name = "ShipAddress", DbType = "NVarChar (60)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ShipAddress { get; set; }
		/// <summary>
		/// (Maps to the 'Orders.ShipCity' database field)
		/// </summary>
		[Column(Name = "ShipCity", DbType = "NVarChar (15)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ShipCity { get; set; }
		/// <summary>
		/// (Maps to the 'Orders.ShipCountry' database field)
		/// </summary>
		[Column(Name = "ShipCountry", DbType = "NVarChar (15)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ShipCountry { get; set; }
		/// <summary>
		/// (Maps to the 'Orders.ShipName' database field)
		/// </summary>
		[Column(Name = "ShipName", DbType = "NVarChar (40)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ShipName { get; set; }
		/// <summary>
		/// (Maps to the 'Orders.ShippedDate' database field)
		/// </summary>
		[Column(Name = "ShippedDate", DbType = "DateTime", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? ShippedDate { get; set; }
		/// <summary>
		/// (Maps to the 'Orders.ShipPostalCode' database field)
		/// </summary>
		[Column(Name = "ShipPostalCode", DbType = "NVarChar (10)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ShipPostalCode { get; set; }
		/// <summary>
		/// (Maps to the 'Orders.ShipRegion' database field)
		/// </summary>
		[Column(Name = "ShipRegion", DbType = "NVarChar (15)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ShipRegion { get; set; }
		/// <summary>
		/// (Maps to the 'Orders.ShipVia' database field)
		/// </summary>
		[Column(Name = "ShipVia", DbType = "Int", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int? ShipVia { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual byte[] Timestamp { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the OrderDetail entity. (Role: 'order_details_orders')
		/// </summary>
		[Association(ThisKey = "OrderID", OtherKey = "OrderID")]
		public Acme.Northwind.EFDAL.OrderDetailQuery Order_details_ordersOrderDetailList { get; private set; }
		/// <summary>
		/// This is a mapping of the relationship with the Customer entity.
		/// </summary>
		[Association(ThisKey = "CustomerID", OtherKey = "CustomerID")]
		public Acme.Northwind.EFDAL.CustomerQuery Customer { get; private set; }
		/// <summary>
		/// This is a mapping of the relationship with the Employee entity.
		/// </summary>
		[Association(ThisKey = "EmployeeID", OtherKey = "EmployeeID")]
		public Acme.Northwind.EFDAL.EmployeeQuery Employee { get; private set; }
		/// <summary>
		/// This is a mapping of the relationship with the Shipper entity.
		/// </summary>
		[Association(ThisKey = "ShipVia", OtherKey = "ShipperID")]
		public Acme.Northwind.EFDAL.ShipperQuery Shipper { get; private set; }

		#endregion

	}

	#endregion

	#region ProductQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the Product collection.
	/// </summary>
	[Serializable]
	[Table(Name = "Products")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.1.2")]
	public partial class ProductQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'Products.CategoryID' database field)
		/// </summary>
		[Column(Name = "CategoryID", DbType = "Int", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int? CategoryID { get; set; }
		/// <summary>
		/// (Maps to the 'Products.Discontinued' database field)
		/// </summary>
		[Column(Name = "Discontinued", DbType = "Bit", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual bool Discontinued { get; set; }
		/// <summary>
		/// (Maps to the 'Products.ProductID' database field)
		/// </summary>
		[Column(Name = "ProductID", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int ProductID { get; set; }
		/// <summary>
		/// (Maps to the 'Products.ProductName' database field)
		/// </summary>
		[Column(Name = "ProductName", DbType = "NVarChar (40)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ProductName { get; set; }
		/// <summary>
		/// (Maps to the 'Products.QuantityPerUnit' database field)
		/// </summary>
		[Column(Name = "QuantityPerUnit", DbType = "NVarChar (20)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string QuantityPerUnit { get; set; }
		/// <summary>
		/// (Maps to the 'Products.ReorderLevel' database field)
		/// </summary>
		[Column(Name = "ReorderLevel", DbType = "SmallInt", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual short? ReorderLevel { get; set; }
		/// <summary>
		/// (Maps to the 'Products.SupplierID' database field)
		/// </summary>
		[Column(Name = "SupplierID", DbType = "Int", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int? SupplierID { get; set; }
		/// <summary>
		/// (Maps to the 'Products.UnitPrice' database field)
		/// </summary>
		[Column(Name = "UnitPrice", DbType = "Money", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual decimal? UnitPrice { get; set; }
		/// <summary>
		/// (Maps to the 'Products.UnitsInStock' database field)
		/// </summary>
		[Column(Name = "UnitsInStock", DbType = "SmallInt", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual short? UnitsInStock { get; set; }
		/// <summary>
		/// (Maps to the 'Products.UnitsOnOrder' database field)
		/// </summary>
		[Column(Name = "UnitsOnOrder", DbType = "SmallInt", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual short? UnitsOnOrder { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual byte[] Timestamp { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the OrderDetail entity. (Role: 'order_details_products')
		/// </summary>
		[Association(ThisKey = "ProductID", OtherKey = "ProductID")]
		public Acme.Northwind.EFDAL.OrderDetailQuery Order_details_productsOrderDetailList { get; private set; }
		/// <summary>
		/// This is a mapping of the relationship with the Category entity.
		/// </summary>
		[Association(ThisKey = "CategoryID", OtherKey = "CategoryID")]
		public Acme.Northwind.EFDAL.CategoryQuery Category { get; private set; }
		/// <summary>
		/// This is a mapping of the relationship with the Supplier entity.
		/// </summary>
		[Association(ThisKey = "SupplierID", OtherKey = "SupplierID")]
		public Acme.Northwind.EFDAL.SupplierQuery Supplier { get; private set; }

		#endregion

	}

	#endregion

	#region RegionQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the Region collection.
	/// </summary>
	[Serializable]
	[Table(Name = "Region")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.1.2")]
	public partial class RegionQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'Region.RegionDescription' database field)
		/// </summary>
		[Column(Name = "RegionDescription", DbType = "NChar (50)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string RegionDescription { get; set; }
		/// <summary>
		/// (Maps to the 'Region.RegionID' database field)
		/// </summary>
		[Column(Name = "RegionID", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int RegionID { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual byte[] Timestamp { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the Territory entity.
		/// </summary>
		[Association(ThisKey = "RegionID", OtherKey = "RegionID")]
		public Acme.Northwind.EFDAL.TerritoryQuery TerritoryList { get; private set; }

		#endregion

	}

	#endregion

	#region ShipperQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the Shipper collection.
	/// </summary>
	[Serializable]
	[Table(Name = "Shippers")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.1.2")]
	public partial class ShipperQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'Shippers.CompanyName' database field)
		/// </summary>
		[Column(Name = "CompanyName", DbType = "NVarChar (40)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CompanyName { get; set; }
		/// <summary>
		/// (Maps to the 'Shippers.Phone' database field)
		/// </summary>
		[Column(Name = "Phone", DbType = "NVarChar (24)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Phone { get; set; }
		/// <summary>
		/// (Maps to the 'Shippers.ShipperID' database field)
		/// </summary>
		[Column(Name = "ShipperID", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int ShipperID { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual byte[] Timestamp { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the Order entity.
		/// </summary>
		[Association(ThisKey = "ShipperID", OtherKey = "ShipVia")]
		public Acme.Northwind.EFDAL.OrderQuery OrderList { get; private set; }

		#endregion

	}

	#endregion

	#region SupplierQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the Supplier collection.
	/// </summary>
	[Serializable]
	[Table(Name = "Suppliers")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.1.2")]
	public partial class SupplierQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'Suppliers.Address' database field)
		/// </summary>
		[Column(Name = "Address", DbType = "NVarChar (60)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Address { get; set; }
		/// <summary>
		/// (Maps to the 'Suppliers.City' database field)
		/// </summary>
		[Column(Name = "City", DbType = "NVarChar (15)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string City { get; set; }
		/// <summary>
		/// (Maps to the 'Suppliers.CompanyName' database field)
		/// </summary>
		[Column(Name = "CompanyName", DbType = "NVarChar (40)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CompanyName { get; set; }
		/// <summary>
		/// (Maps to the 'Suppliers.ContactName' database field)
		/// </summary>
		[Column(Name = "ContactName", DbType = "NVarChar (30)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ContactName { get; set; }
		/// <summary>
		/// (Maps to the 'Suppliers.ContactTitle' database field)
		/// </summary>
		[Column(Name = "ContactTitle", DbType = "NVarChar (30)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ContactTitle { get; set; }
		/// <summary>
		/// (Maps to the 'Suppliers.Country' database field)
		/// </summary>
		[Column(Name = "Country", DbType = "NVarChar (15)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Country { get; set; }
		/// <summary>
		/// (Maps to the 'Suppliers.Fax' database field)
		/// </summary>
		[Column(Name = "Fax", DbType = "NVarChar (24)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Fax { get; set; }
		/// <summary>
		/// (Maps to the 'Suppliers.HomePage' database field)
		/// </summary>
		[Column(Name = "HomePage", DbType = "NText", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string HomePage { get; set; }
		/// <summary>
		/// (Maps to the 'Suppliers.Phone' database field)
		/// </summary>
		[Column(Name = "Phone", DbType = "NVarChar (24)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Phone { get; set; }
		/// <summary>
		/// (Maps to the 'Suppliers.PostalCode' database field)
		/// </summary>
		[Column(Name = "PostalCode", DbType = "NVarChar (10)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string PostalCode { get; set; }
		/// <summary>
		/// (Maps to the 'Suppliers.Region' database field)
		/// </summary>
		[Column(Name = "Region", DbType = "NVarChar (15)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Region { get; set; }
		/// <summary>
		/// (Maps to the 'Suppliers.SupplierID' database field)
		/// </summary>
		[Column(Name = "SupplierID", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int SupplierID { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual byte[] Timestamp { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the Product entity.
		/// </summary>
		[Association(ThisKey = "SupplierID", OtherKey = "SupplierID")]
		public Acme.Northwind.EFDAL.ProductQuery ProductList { get; private set; }

		#endregion

	}

	#endregion

	#region TerritoryQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the Territory collection.
	/// </summary>
	[Serializable]
	[Table(Name = "Territories")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.1.2")]
	public partial class TerritoryQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'Territories.RegionID' database field)
		/// </summary>
		[Column(Name = "RegionID", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int RegionID { get; set; }
		/// <summary>
		/// (Maps to the 'Territories.TerritoryDescription' database field)
		/// </summary>
		[Column(Name = "TerritoryDescription", DbType = "NChar (50)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string TerritoryDescription { get; set; }
		/// <summary>
		/// (Maps to the 'Territories.TerritoryID' database field)
		/// </summary>
		[Column(Name = "TerritoryID", DbType = "NVarChar (20)", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string TerritoryID { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual byte[] Timestamp { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the EmployeeTerritorie entity.
		/// </summary>
		[Association(ThisKey = "TerritoryID", OtherKey = "TerritoryID")]
		public Acme.Northwind.EFDAL.EmployeeTerritorieQuery EmployeeTerritorieList { get; private set; }
		/// <summary>
		/// This is a mapping of the relationship with the Region entity.
		/// </summary>
		[Association(ThisKey = "RegionID", OtherKey = "RegionID")]
		public Acme.Northwind.EFDAL.RegionQuery Region { get; private set; }

		#endregion

	}

	#endregion

}
