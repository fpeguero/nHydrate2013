<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cFfgYQX+BjUR9LZify7WAAAAAElFTkSuQmCC
</value>
  </data>
</root>