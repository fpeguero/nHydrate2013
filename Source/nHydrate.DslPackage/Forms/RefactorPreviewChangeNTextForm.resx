<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>