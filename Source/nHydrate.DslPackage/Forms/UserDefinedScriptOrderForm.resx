<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACi
        CgAAAk1TRnQBSQFMAgEBAwEAAUABAAFAAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAARADAAEBAQABCAYAAQQYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wEAC+oB7wQAAbQBtQq0
        ApEBtAEHBgABrQG0AbMDtAOzAa0QAAFmAfEI8wHvAfcEAAGtAbQEtQi0AYsBtAYAAbQB7AGRA9wD2wGt
        EAABZgH0AewBBwTwA/cBrgPvAQcBrQHdAfMBCQG8BwkB3QEJArQGAAG0AQkBrgGRAboBZgFsAYsB2wGz
        EAABZgH0Ae8BrgG8AfMB8gH3Ae0BvAG1Aa4BCQG8AQcB9wGtAd0BtQiLAc8CCQK0BgABtAHiAbQBrgHh
        AWwBDgG0AdsBsxAAAWYB9AHwAbwB8QLyArwB8QHvAa4B3QEZAbwB9wGtAd0B8wG8Ad0HCQHdAQkCtAYA
        AbQB4gGRAWYB3AG0AUMBtAHbAbMQAAFmAfQB8AH0Af8E9AHzAe8BrgIZAbwB9wGtARkB8AK1ARkBCQK1
        AfACGQLdArQB9wVmAbQB4gGRARUBtQK7AboBuwGzEAABZgH0AfAC9ALzAvQB8wHvAa4B3QEZAbwB9wGt
        ARkBCQLPAd0BCQLPAQkCGQLdArQB7wH/AvIB8QHwAbQB4gEZAWYBkQEZA9wBsxAAAWYB9AHxAe8B8QL0
        ArwB8wG1Aa4BGQHzAbwB9wGtARkC/wP0AvMDGQHdARkCtAHvAf8BvAEHAbsB9AG0AfQB4gG0AW0CGQEJ
        AeEBtBAAAWYB9AL3AfEC9AEHAfcBvAG1Aa4BGQHzAbwB9wHUARkE/wL0AfMB9AIZAfEBGQK0AbsE/wH0
        AbQBGQIJAdwCCQLcAbMQAAFmAfQB7QHzAfQC8wH/AbwC7wGuARkB9AG8AfcB1AEZAd0CtQEZAf8D9AQZ
        ArQBuwH/A7wB/wO7ARkBuwFmFAABZgEHAe8BBwW8AQcB9wHsAf8B9AG8AfcB1QEZAQkCzwHdAf8E9AHz
        AhkCtAG7Bv8C9AEZAQcBZhQAAu0BrgjsAfcB/wH0AbwB9wHVARkB9gb/A/QCGQK0AbsB/wO8Af8BvAEH
        AbsB9AEHAWYWAAHxAfQC/wj0ARkBtQLVAtYD1QW0As8BrQG0AbsH/wL0ARkBZhYAAd0FCQPcBdYBtAHV
        AtYI1QOtAbQD1gLVArQFrRYAAd0CGQPdBgkB3AHWAbQB1gLcAtYI1QGtAbQB1gEJBNwB1gTVAa0WAAHd
        BgkC3AHWAdwD1gG1AtUDtAGzAs4GrQG1BdYB1QO0A60UAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEB
        AQABAQUAAYAXAAP/AgABDwIAAfwEAAEPAgAB/AcAAfwHAAH8BwAB/CgAAQ8HAAEPBwABDwIAAcAEAAEP
        AgABwAQAAQ8CAAHABAABDwIAAcAEAAEPAgAL
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IN22QPN/AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>Once you have generated an Installer project you may add scripts to the 'User Defined' folders for Functions, Views, and Stored Procedures. You may setup an execution order for these scripts. The managed scripts have a built-in order that you can manipulate to control the execution order. If you add ordering to the user defined scripts, these will be available for ordering the precedence dialog. Choose the scripts you wish to include in the execution order and press the 'Add Precedence Order' button to automatically modify these scripts. Each user-defined script will have a comment added to it that allows the system to uniquely identify it.
</value>
  </data>
</root>