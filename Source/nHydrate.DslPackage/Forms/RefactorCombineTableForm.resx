<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>