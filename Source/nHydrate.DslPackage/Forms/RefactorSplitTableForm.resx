<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblFirstHeader.Text" xml:space="preserve">
    <value>This screen allows you to split an entity into two entities. First choose a name for the new entity. Then seelct the fields to move into the new entity. Finally choose whether to add a relation between the entities.</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>You may setup a relation from the source to the new Entity if desired. You must define a primary key above to use this option. If you select this option, there will be a one-to-one relation created from the source Entity's primary key to the new Entity's primary key.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="wizard1.HeaderImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>