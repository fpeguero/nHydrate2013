<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XdV83kVUHJ/A6//Z
</value>
  </data>
</root>