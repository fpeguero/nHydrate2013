<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>