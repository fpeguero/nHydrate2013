<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdFind.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAABGUlEQVQ4T43S8UnDQBTH8Y5w
        I1ShUqRiFKsUKQYVlVKVUqXiXxkhI3SEjpAROkJHuBEywm3w/D64QJrXJgY+JHnvd49LuF4vXquf3z4K
        BEikzxu4Knfw/vW9ShEg8FhH+qw17SUHFy8Wyz5ClDZD1HMIStidvH98FhCYxdUwennMrM0uZrN5gG/9
        RppkSmVyry9vAju5kSSz1awZ8PT4LOgcQGarWTMgfUgDWj+Bvjuam95PNxDkx/4DvSJmMpOZ3E0cSgj2
        hsReEXva91ozQ25vxglKCAJ2kb43eWp2yHVy5ZDDQ6Id96xR055m2o93fZuXowsHD6nR9/8PGQ3PHTyk
        pvMA7v2v4eDMwUMqXSfY9Acnpw4eguwPmkag+D3oyjwAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAQAAAAAAAoAQAAFgAAACgAAAAQAAAAIAAAAAEABAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD//wAA7/0AAMf/AADD+wAA4/cAAPHnAAD4zwAA/B8AAP4/AAD8HwAA+M8AAOHn
        AADD8wAAx/0AAP//AAD//wAA
</value>
  </data>
</root>