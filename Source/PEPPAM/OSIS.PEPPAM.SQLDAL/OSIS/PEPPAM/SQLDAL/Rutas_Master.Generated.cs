//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 6/19/2014 1:29:30 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     Autor: Francisco
//     Fecha: 6/19/2014 1:29:30 PM
// </auto-generated>
//------------------------------------------------------------------------------

 using System;
 using CodeFluent.Runtime;
 using CodeFluent.Runtime.Utilities;
  using System.Text.RegularExpressions;
  using System.Collections.Generic;
namespace OSIS.PEPPAM.BOM
{
	/// <summary>
	/// The collection to hold 'Rutas_Master' entities
	/// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MyWorkGenerators", "0.0.0.00000")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DataObjectAttribute()]
    [System.Diagnostics.DebuggerDisplayAttribute("EK={EntityKey},Ruta_Descripcion={Ruta_Descripcion}")]
    [System.ComponentModel.TypeConverterAttribute(typeof(CodeFluent.Runtime.Design.NameTypeConverter))]
	public partial class Rutas_Master :  System.ICloneable, System.IComparable, System.IComparable<OSIS.PEPPAM.BOM.Rutas_Master>, CodeFluent.Runtime.ICodeFluentEntity, System.ComponentModel.IDataErrorInfo, CodeFluent.Runtime.ICodeFluentMemberValidator, CodeFluent.Runtime.ICodeFluentSummaryValidator, System.IEquatable<OSIS.PEPPAM.BOM.Rutas_Master>

	{
		#region FieldNameConstants Enumeration

		/// <summary>
		/// Enumeration to define each property that maps to a database field for the 'Rutas_Master' table.
		/// </summary>
		public enum FieldNameConstants
		{
			/// <summary>
			/// Field mapping for the 'Registro_Estado' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Registro_Estado' property")]
			Registro_Estado,
			/// <summary>
			/// Field mapping for the 'Registro_Fecha' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Registro_Fecha' property")]
			Registro_Fecha,
			/// <summary>
			/// Field mapping for the 'Registro_Usuario' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Registro_Usuario' property")]
			Registro_Usuario,
			/// <summary>
			/// Field mapping for the 'Ruta_Carros_Cantidad' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Ruta_Carros_Cantidad' property")]
			Ruta_Carros_Cantidad,
			/// <summary>
			/// Field mapping for the 'Ruta_Descripcion' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Ruta_Descripcion' property")]
			Ruta_Descripcion,
			/// <summary>
			/// Field mapping for the 'Ruta_Mapa_Url' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Ruta_Mapa_Url' property")]
			Ruta_Mapa_Url,
			/// <summary>
			/// Field mapping for the 'Ruta_Persona_Auxiliar' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Ruta_Persona_Auxiliar' property")]
			Ruta_Persona_Auxiliar,
			/// <summary>
			/// Field mapping for the 'Ruta_Persona_Encargado' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Ruta_Persona_Encargado' property")]
			Ruta_Persona_Encargado,
			/// <summary>
			/// Field mapping for the 'Ruta_Publicadores_Cantidad' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Ruta_Publicadores_Cantidad' property")]
			Ruta_Publicadores_Cantidad,
			/// <summary>
			/// Field mapping for the 'Ruta_Secuencia' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Ruta_Secuencia' property")]
			Ruta_Secuencia,
			/// <summary>
			/// Field mapping for the 'Zona_Secuencia' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Zona_Secuencia' property")]
			Zona_Secuencia,
		}
		#endregion

        private bool _raisePropertyChangedEvents = true;
        
        private CodeFluent.Runtime.CodeFluentEntityState _entityState;
        
		#region Property Holders

		/// <summary />
		protected string _registro_Estado = string.Empty;
		/// <summary />
		protected DateTime _registro_Fecha = System.DateTime.MinValue;
		/// <summary />
		protected string _registro_Usuario = string.Empty;
		/// <summary />
		protected int _ruta_Carros_Cantidad = -1;
		/// <summary />
		protected string _ruta_Descripcion = string.Empty;
		/// <summary />
		protected string _ruta_Mapa_Url = string.Empty;
		/// <summary />
		protected int _ruta_Persona_Auxiliar = -1;
		/// <summary />
		protected int _ruta_Persona_Encargado = -1;
		/// <summary />
		protected int _ruta_Publicadores_Cantidad = -1;
		/// <summary />
		protected int _ruta_Secuencia = -1;
		/// <summary />
		protected int _zona_Secuencia = -1;

		#endregion

		#region Property Navigation Holders

		/// <summary>
		/// The back navigation definition for walking [Rutas_Master]->[Horarios_Master]
		/// Relationship Links: 
		/// [Rutas_Master.Ruta_Secuencia = Horarios_Master.Ruta_Secuencia] (Required)
		/// <summary />
		protected Horarios_MasterCollection _horarios_Master =  null;

		/// <summary>
		/// The back navigation definition for walking [Rutas_Master]->[Horario_Trans]
		/// Relationship Links: 
		/// [Rutas_Master.Ruta_Secuencia = Horario_Trans.Ruta_Secuencia] (Required)
		/// <summary />
		protected Horario_TransCollection _horario_Trans =  null;

		/// <summary>
		/// The back navigation definition for walking [Rutas_Master]->[Notificaciones_Objetivo_Trans]
		/// Relationship Links: 
		/// [Rutas_Master.Ruta_Secuencia = Notificaciones_Objetivo_Trans.Ruta_Secuencia] (Required)
		/// <summary />
		protected Notificaciones_Objetivo_TransCollection _notificaciones_Objetivo_Trans =  null;

		/// <summary>
		/// The back navigation definition for walking [Rutas_Master]->[Documentos_Objetivos_Trans]
		/// Relationship Links: 
		/// [Rutas_Master.Ruta_Secuencia = Documentos_Objetivos_Trans.Ruta_Secuencia] (Required)
		/// <summary />
		protected Documentos_Objetivos_TransCollection _documentos_Objetivos_Trans =  null;

		/// <summary>
		/// The navigation definition for walking [Rutas_Master]->[Personas_Master]
		/// Relationship Links: 
		/// [Personas_Master.Persona_Secuencia = Rutas_Master.Ruta_Persona_Encargado] (Required)
		protected OSIS.PEPPAM.BOM.Personas_Master _personas_Master = null;

		/// <summary>
		/// The navigation definition for walking [Rutas_Master]->[Personas_Master]
		/// Relationship Links: 
		/// [Personas_Master.Persona_Secuencia = Rutas_Master.Ruta_Persona_Auxiliar] (Required)
		protected OSIS.PEPPAM.BOM.Personas_Master _personas_Master_Ruta_Persona_Auxiliar = null;

		/// <summary>
		/// The navigation definition for walking [Rutas_Master]->[Zonas_Master]
		/// Relationship Links: 
		/// [Zonas_Master.Zona_Secuencia = Rutas_Master.Zona_Secuencia] (Required)
		protected OSIS.PEPPAM.BOM.Zonas_Master _zonas_Master = null;


		#endregion

		#region GetMaxLength

		/// <summary>
		/// Gets the maximum size of the field value.
		/// </summary>
		public static int GetMaxLength(FieldNameConstants field)
		{
			switch (field)
			{
				case FieldNameConstants.Registro_Estado:
					return 1;
				case FieldNameConstants.Registro_Fecha:
					return 0;
				case FieldNameConstants.Registro_Usuario:
					return 50;
				case FieldNameConstants.Ruta_Carros_Cantidad:
					return 0;
				case FieldNameConstants.Ruta_Descripcion:
					return 150;
				case FieldNameConstants.Ruta_Mapa_Url:
					return 50;
				case FieldNameConstants.Ruta_Persona_Auxiliar:
					return 0;
				case FieldNameConstants.Ruta_Persona_Encargado:
					return 0;
				case FieldNameConstants.Ruta_Publicadores_Cantidad:
					return 0;
				case FieldNameConstants.Ruta_Secuencia:
					return 0;
				case FieldNameConstants.Zona_Secuencia:
					return 0;
			}
			return 0;
		}


		#endregion

		#region GetFieldType

		/// <summary>
		/// Gets the system type of a field on this object
		/// </summary>
		public static System.Type GetFieldType(FieldNameConstants field)
		{
			if (field.GetType() != typeof(FieldNameConstants))
				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'OSIS.PEPPAM.BOM.Entity.Rutas_Master.FieldNameConstants'.");

			switch ((FieldNameConstants)field)
			{
				case FieldNameConstants.Registro_Estado: return typeof(string);
				case FieldNameConstants.Registro_Fecha: return typeof(DateTime);
				case FieldNameConstants.Registro_Usuario: return typeof(string);
				case FieldNameConstants.Ruta_Carros_Cantidad: return typeof(int);
				case FieldNameConstants.Ruta_Descripcion: return typeof(string);
				case FieldNameConstants.Ruta_Mapa_Url: return typeof(string);
				case FieldNameConstants.Ruta_Persona_Auxiliar: return typeof(int);
				case FieldNameConstants.Ruta_Persona_Encargado: return typeof(int);
				case FieldNameConstants.Ruta_Publicadores_Cantidad: return typeof(int);
				case FieldNameConstants.Ruta_Secuencia: return typeof(int);
				case FieldNameConstants.Zona_Secuencia: return typeof(int);
			}
			return null;
		}


		#endregion

		#region Get/Set Value


		#endregion

        public Rutas_Master()
        {
            this._entityState = CodeFluent.Runtime.CodeFluentEntityState.Created;
        }
        
		#region Properties

        [System.ComponentModel.BrowsableAttribute(false)]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual bool RaisePropertyChangedEvents
        {
            get
            {
                return this._raisePropertyChangedEvents;
            }
            set
            {
                this._raisePropertyChangedEvents = value;
            }
        }
        
		/// <summary>
		/// The property that maps back to the database 'Rutas_Master.Ruta_Secuencia' field.
		/// </summary>
		/// <remarks>Field: [Rutas_Master].[Ruta_Secuencia], Not Nullable, Primary Key, Unique, Indexed</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(int))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Ruta_Secuencia")]
		public virtual int Ruta_Secuencia
		{
			get { 
			return _ruta_Secuencia; }
			set
			{
				if (value == _ruta_Secuencia) return;
                this._ruta_Secuencia = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Ruta_Secuencia"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Rutas_Master.Zona_Secuencia' field.
		/// </summary>
		/// <remarks>Field: [Rutas_Master].[Zona_Secuencia], Not Nullable</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(int))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Zona_Secuencia")]
		public virtual int Zona_Secuencia
		{
			get { 
if (((this._zona_Secuencia == -1) 
                            && (this._zonas_Master != null)))
                {
                    this._zona_Secuencia = this._zonas_Master.Zona_Secuencia;
                }
			return _zona_Secuencia; }
			set
			{
				if (value == _zona_Secuencia) return;
                this._zonas_Master = null;
				_zona_Secuencia = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("ZonasMaster"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Zona_Secuencia"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Rutas_Master.Ruta_Descripcion' field.
		/// </summary>
		/// <remarks>Field: [Rutas_Master].[Ruta_Descripcion], Field Length: 150, Not Nullable</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(string))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Ruta_Descripcion")]
		public virtual string Ruta_Descripcion
		{
			get { 
			return _ruta_Descripcion; }
			set
			{
				if ((value != null) && (value.Length > GetMaxLength(FieldNameConstants.Ruta_Descripcion))) throw new Exception(string.Format(GlobalValues.ERROR_DATA_TOO_BIG, value, "Rutas_Master.Ruta_Descripcion", GetMaxLength(FieldNameConstants.Ruta_Descripcion)));
				if (value == _ruta_Descripcion) return;
                this._ruta_Descripcion = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Ruta_Descripcion"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Rutas_Master.Ruta_Persona_Encargado' field.
		/// </summary>
		/// <remarks>Field: [Rutas_Master].[Ruta_Persona_Encargado], Not Nullable</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(int))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Ruta_Persona_Encargado")]
		public virtual int Ruta_Persona_Encargado
		{
			get { 
if (((this._ruta_Persona_Encargado == -1) 
                            && (this._personas_Master != null)))
                {
                    this._ruta_Persona_Encargado = this._personas_Master.Persona_Secuencia;
                }
			return _ruta_Persona_Encargado; }
			set
			{
				if (value == _ruta_Persona_Encargado) return;
                this._personas_Master = null;
				_ruta_Persona_Encargado = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("PersonasMaster"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Ruta_Persona_Encargado"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Rutas_Master.Ruta_Persona_Auxiliar' field.
		/// </summary>
		/// <remarks>Field: [Rutas_Master].[Ruta_Persona_Auxiliar], Not Nullable</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(int))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Ruta_Persona_Auxiliar")]
		public virtual int Ruta_Persona_Auxiliar
		{
			get { 
if (((this._ruta_Persona_Auxiliar == -1) 
                            && (this._personas_Master_Ruta_Persona_Auxiliar != null)))
                {
                    this._ruta_Persona_Auxiliar = this._personas_Master_Ruta_Persona_Auxiliar.Persona_Secuencia;
                }
			return _ruta_Persona_Auxiliar; }
			set
			{
				if (value == _ruta_Persona_Auxiliar) return;
                this._personas_Master_Ruta_Persona_Auxiliar = null;
				_ruta_Persona_Auxiliar = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("PersonasMasterRutaPersonaAuxiliar"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Ruta_Persona_Auxiliar"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Rutas_Master.Ruta_Mapa_Url' field.
		/// </summary>
		/// <remarks>Field: [Rutas_Master].[Ruta_Mapa_Url], Field Length: 50, Nullable</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = true, Type=typeof(string))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Ruta_Mapa_Url")]
		public virtual string Ruta_Mapa_Url
		{
			get { 
			return _ruta_Mapa_Url; }
			set
			{
				if ((value != null) && (value.Length > GetMaxLength(FieldNameConstants.Ruta_Mapa_Url))) throw new Exception(string.Format(GlobalValues.ERROR_DATA_TOO_BIG, value, "Rutas_Master.Ruta_Mapa_Url", GetMaxLength(FieldNameConstants.Ruta_Mapa_Url)));
				if (value == _ruta_Mapa_Url) return;
                this._ruta_Mapa_Url = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Ruta_Mapa_Url"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Rutas_Master.Ruta_Carros_Cantidad' field.
		/// </summary>
		/// <remarks>Field: [Rutas_Master].[Ruta_Carros_Cantidad], Not Nullable</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(int))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Ruta_Carros_Cantidad")]
		public virtual int Ruta_Carros_Cantidad
		{
			get { 
			return _ruta_Carros_Cantidad; }
			set
			{
				if (value == _ruta_Carros_Cantidad) return;
                this._ruta_Carros_Cantidad = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Ruta_Carros_Cantidad"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Rutas_Master.Ruta_Publicadores_Cantidad' field.
		/// </summary>
		/// <remarks>Field: [Rutas_Master].[Ruta_Publicadores_Cantidad], Not Nullable</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(int))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Ruta_Publicadores_Cantidad")]
		public virtual int Ruta_Publicadores_Cantidad
		{
			get { 
			return _ruta_Publicadores_Cantidad; }
			set
			{
				if (value == _ruta_Publicadores_Cantidad) return;
                this._ruta_Publicadores_Cantidad = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Ruta_Publicadores_Cantidad"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Rutas_Master.Registro_Estado' field.
		/// </summary>
		/// <remarks>Field: [Rutas_Master].[Registro_Estado], Field Length: 1, Not Nullable</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(string))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Registro_Estado")]
		public virtual string Registro_Estado
		{
			get { 
			return _registro_Estado; }
			set
			{
				if ((value != null) && (value.Length > GetMaxLength(FieldNameConstants.Registro_Estado))) throw new Exception(string.Format(GlobalValues.ERROR_DATA_TOO_BIG, value, "Rutas_Master.Registro_Estado", GetMaxLength(FieldNameConstants.Registro_Estado)));
				if (value == _registro_Estado) return;
                this._registro_Estado = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Registro_Estado"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Rutas_Master.Registro_Fecha' field.
		/// </summary>
		/// <remarks>Field: [Rutas_Master].[Registro_Fecha], Not Nullable</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(DateTime))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Registro_Fecha")]
		public virtual DateTime Registro_Fecha
		{
			get { 
			return _registro_Fecha; }
			set
			{
				if ((value < GlobalValues.MIN_DATETIME)) throw new Exception("The DateTime value 'Registro_Fecha' (" + value.ToString("yyyy-MM-dd HH:mm:ss") + ") cannot be less than " + GlobalValues.MIN_DATETIME.ToString());
				if ((value > GlobalValues.MAX_DATETIME)) throw new Exception("The DateTime value 'Registro_Fecha' (" + value.ToString("yyyy-MM-dd HH:mm:ss") + ") cannot be greater than " + GlobalValues.MAX_DATETIME.ToString());
				if (value == _registro_Fecha) return;
                this._registro_Fecha = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Registro_Fecha"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Rutas_Master.Registro_Usuario' field.
		/// </summary>
		/// <remarks>Field: [Rutas_Master].[Registro_Usuario], Field Length: 50, Not Nullable</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(string))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Registro_Usuario")]
		public virtual string Registro_Usuario
		{
			get { 
			return _registro_Usuario; }
			set
			{
				if ((value != null) && (value.Length > GetMaxLength(FieldNameConstants.Registro_Usuario))) throw new Exception(string.Format(GlobalValues.ERROR_DATA_TOO_BIG, value, "Rutas_Master.Registro_Usuario", GetMaxLength(FieldNameConstants.Registro_Usuario)));
				if (value == _registro_Usuario) return;
                this._registro_Usuario = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Registro_Usuario"));
			}
		}


		#endregion

		#region Navigation Properties

		/// <summary>
		/// The back navigation definition for walking [Rutas_Master]->[Horarios_Master]
		/// Relationship Links: 
		/// [Rutas_Master.Ruta_Secuencia = Horarios_Master.Ruta_Secuencia] (Required)
		/// </summary>
		[System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual OSIS.PEPPAM.BOM.Horarios_MasterCollection HorariosMaster
        {
            get
            {
                if ((this._horarios_Master == null))
                {
                    if ((
                    (this.Ruta_Secuencia == -1)
                       )
                         || (this.EntityState.Equals(CodeFluent.Runtime.CodeFluentEntityState.Created) == true))
                    {
                        this._horarios_Master = new OSIS.PEPPAM.BOM.Horarios_MasterCollection(this);
                        return this._horarios_Master;
                    }
                    this._horarios_Master = OSIS.PEPPAM.BOM.Horarios_MasterCollection.LoadByRutasMaster(this);
                }
                return this._horarios_Master;
            }
        }

		/// <summary>
		/// The back navigation definition for walking [Rutas_Master]->[Horario_Trans]
		/// Relationship Links: 
		/// [Rutas_Master.Ruta_Secuencia = Horario_Trans.Ruta_Secuencia] (Required)
		/// </summary>
		[System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual OSIS.PEPPAM.BOM.Horario_TransCollection HorarioTrans
        {
            get
            {
                if ((this._horario_Trans == null))
                {
                    if ((
                    (this.Ruta_Secuencia == -1)
                       )
                         || (this.EntityState.Equals(CodeFluent.Runtime.CodeFluentEntityState.Created) == true))
                    {
                        this._horario_Trans = new OSIS.PEPPAM.BOM.Horario_TransCollection(null,this,null);
                        return this._horario_Trans;
                    }
                    this._horario_Trans = OSIS.PEPPAM.BOM.Horario_TransCollection.LoadByRutasMaster(this);
                }
                return this._horario_Trans;
            }
        }

		/// <summary>
		/// The back navigation definition for walking [Rutas_Master]->[Notificaciones_Objetivo_Trans]
		/// Relationship Links: 
		/// [Rutas_Master.Ruta_Secuencia = Notificaciones_Objetivo_Trans.Ruta_Secuencia] (Required)
		/// </summary>
		[System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual OSIS.PEPPAM.BOM.Notificaciones_Objetivo_TransCollection NotificacionesObjetivoTrans
        {
            get
            {
                if ((this._notificaciones_Objetivo_Trans == null))
                {
                    if ((
                    (this.Ruta_Secuencia == -1)
                       )
                         || (this.EntityState.Equals(CodeFluent.Runtime.CodeFluentEntityState.Created) == true))
                    {
                        this._notificaciones_Objetivo_Trans = new OSIS.PEPPAM.BOM.Notificaciones_Objetivo_TransCollection(null,null,this,null);
                        return this._notificaciones_Objetivo_Trans;
                    }
                    this._notificaciones_Objetivo_Trans = OSIS.PEPPAM.BOM.Notificaciones_Objetivo_TransCollection.LoadByRutasMaster(this);
                }
                return this._notificaciones_Objetivo_Trans;
            }
        }

		/// <summary>
		/// The back navigation definition for walking [Rutas_Master]->[Documentos_Objetivos_Trans]
		/// Relationship Links: 
		/// [Rutas_Master.Ruta_Secuencia = Documentos_Objetivos_Trans.Ruta_Secuencia] (Required)
		/// </summary>
		[System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection DocumentosObjetivosTrans
        {
            get
            {
                if ((this._documentos_Objetivos_Trans == null))
                {
                    if ((
                    (this.Ruta_Secuencia == -1)
                       )
                         || (this.EntityState.Equals(CodeFluent.Runtime.CodeFluentEntityState.Created) == true))
                    {
                        this._documentos_Objetivos_Trans = new OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection(null,null,this,null);
                        return this._documentos_Objetivos_Trans;
                    }
                    this._documentos_Objetivos_Trans = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.LoadByRutasMaster(this);
                }
                return this._documentos_Objetivos_Trans;
            }
        }

		/// <summary>
		/// The navigation definition for walking [Rutas_Master]->[Personas_Master]
		/// Relationship Links: 
		/// [Personas_Master.Persona_Secuencia = Rutas_Master.Ruta_Persona_Encargado] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.BOM.Personas_Master PersonasMaster
		{
			get
			{
                if ((this._personas_Master == null))
                {
                    this._personas_Master = OSIS.PEPPAM.BOM.Personas_Master.Load(Ruta_Persona_Encargado);
                }
                return this._personas_Master;
			}
			set
            {
                _ruta_Persona_Encargado = -1;
                this._personas_Master = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("PersonasMaster"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Ruta_Persona_Encargado"));
            }
		}

		/// <summary>
		/// The navigation definition for walking [Rutas_Master]->[Personas_Master]
		/// Relationship Links: 
		/// [Personas_Master.Persona_Secuencia = Rutas_Master.Ruta_Persona_Auxiliar] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.BOM.Personas_Master PersonasMasterRutaPersonaAuxiliar
		{
			get
			{
                if ((this._personas_Master_Ruta_Persona_Auxiliar == null))
                {
                    this._personas_Master_Ruta_Persona_Auxiliar = OSIS.PEPPAM.BOM.Personas_Master.Load(Ruta_Persona_Auxiliar);
                }
                return this._personas_Master_Ruta_Persona_Auxiliar;
			}
			set
            {
                _ruta_Persona_Auxiliar = -1;
                this._personas_Master_Ruta_Persona_Auxiliar = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("PersonasMasterRutaPersonaAuxiliar"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Ruta_Persona_Auxiliar"));
            }
		}

		/// <summary>
		/// The navigation definition for walking [Rutas_Master]->[Zonas_Master]
		/// Relationship Links: 
		/// [Zonas_Master.Zona_Secuencia = Rutas_Master.Zona_Secuencia] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.BOM.Zonas_Master ZonasMaster
		{
			get
			{
                if ((this._zonas_Master == null))
                {
                    this._zonas_Master = OSIS.PEPPAM.BOM.Zonas_Master.Load(Zona_Secuencia);
                }
                return this._zonas_Master;
			}
			set
            {
                _zona_Secuencia = -1;
                this._zonas_Master = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("ZonasMaster"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Zona_Secuencia"));
            }
		}

		#endregion

        public virtual string EntityKey
        {
            get
            {
                return this.Ruta_Secuencia.ToString();
            }
            set
            {
               this.Ruta_Secuencia = ((int)(ConvertUtilities.ChangeType(value, typeof(int), -1)));
            }
        }

        public virtual string EntityDisplayName
        {
            get
            {
                return this.Ruta_Descripcion.ToString();
            }
        }
        
        [field:System.NonSerializedAttribute()]
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        [field:System.NonSerializedAttribute()]
        public event CodeFluent.Runtime.CodeFluentEntityActionEventHandler EntityAction;

        protected virtual void OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs e)
        {
            if ((this.RaisePropertyChangedEvents == false))
            {
                return;
            }
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, e);
            }
        }

        protected virtual void OnEntityAction(CodeFluent.Runtime.CodeFluentEntityActionEventArgs e)
        {
            if ((this.EntityAction != null))
            {
                this.EntityAction(this, e);
            }
        }

        string System.ComponentModel.IDataErrorInfo.Error
        {
            get
            {
                return this.Validate(System.Globalization.CultureInfo.CurrentCulture);
            }
        }
        
        string System.ComponentModel.IDataErrorInfo.this[string columnName]
        {
            get
            {
                return CodeFluentPersistence.ValidateMember(System.Globalization.CultureInfo.CurrentCulture, this, columnName, null);
            }
        }
        
        public virtual CodeFluent.Runtime.CodeFluentEntityState EntityState
        {
            get
            {
                return this._entityState;
            }
            set
            {
                if ((System.Collections.Generic.EqualityComparer<CodeFluent.Runtime.CodeFluentEntityState>.Default.Equals(value, this.EntityState) == true))
                {
                    return;
                }
                this._entityState = value;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("EntityState"));
            }
        }
        
        public virtual bool Equals(OSIS.PEPPAM.BOM.Rutas_Master rutasMaster)
        {
            if ((rutasMaster == null))
            {
                return false;
            }

            if (
                    (this.Ruta_Secuencia == -1)
            )
            {
                return base.Equals(rutasMaster);
            }

 return ((
                    (this.Ruta_Secuencia.Equals(rutasMaster.Ruta_Secuencia))
                        )== true);
        }

        public override bool Equals(object obj)
        {
            OSIS.PEPPAM.BOM.Rutas_Master rutasMaster = null;
			 rutasMaster = obj as OSIS.PEPPAM.BOM.Rutas_Master;
            return this.Equals( rutasMaster);
        }

        public override int GetHashCode()
        {
            if ((this.EntityKey == null))
            {
                return base.GetHashCode();
            }
            return this.EntityKey.GetHashCode();
        }
        
        int System.IComparable.CompareTo(object value)
        {
            OSIS.PEPPAM.BOM.Rutas_Master rutasMaster = null;
             rutasMaster = value as OSIS.PEPPAM.BOM.Rutas_Master;
            if ((rutasMaster == null))
            {
                throw new System.ArgumentException("value");
            }
            int localCompareTo = this.CompareTo(rutasMaster);
            return localCompareTo;
        }

        public virtual int CompareTo(OSIS.PEPPAM.BOM.Rutas_Master rutasMaster)
        {
            if ((rutasMaster == null))
            {
                throw new System.ArgumentNullException("rutasMaster");
            }
            int localCompareTo = this.Ruta_Secuencia.CompareTo(rutasMaster.Ruta_Secuencia);
            return localCompareTo;
        }

        public virtual string Validate(System.Globalization.CultureInfo culture)
        {
            return CodeFluentPersistence.Validate(culture, this, null);
        }
        
        public virtual void Validate(System.Globalization.CultureInfo culture, System.Collections.Generic.IList<CodeFluent.Runtime.CodeFluentValidationException> results)
        {
            CodeFluent.Runtime.CodeFluentEntityActionEventArgs evt = new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Validating, true, results);
            evt.Culture = culture;
            this.OnEntityAction(evt);
            if ((evt.Cancel == true))
            {
                string externalValidate;
                if ((evt.Argument != null))
                {
                    externalValidate = evt.Argument.ToString();
                }
                else
                {
                    externalValidate = OSIS.PEPPAM.BOM.Resources.Manager.GetStringWithDefault(culture, "OSIS.PEPPAM.BOM.Rutas_Master.ExternalValidate", "Type 'OSIS.PEPPAM.BOM.Rutas_Master' cannot be validated.", null);
                }
                CodeFluentPersistence.AddValidationError(results, externalValidate);
            }
            CodeFluentPersistence.ValidateMember(culture, results, this, null);
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Validated, false, results));
        }
        
        public void Validate()
        {
            string var = this.Validate(System.Globalization.CultureInfo.CurrentCulture);
            if ((var != null))
            {
                throw new CodeFluent.Runtime.CodeFluentValidationException(var);
            }
        }
        
        string CodeFluent.Runtime.ICodeFluentValidator.Validate(System.Globalization.CultureInfo culture)
        {
            string localValidate = this.Validate(culture);
            return localValidate;
        }
        
        void CodeFluent.Runtime.ICodeFluentMemberValidator.Validate(System.Globalization.CultureInfo culture, string memberName, System.Collections.Generic.IList<CodeFluent.Runtime.CodeFluentValidationException> results)
        {
            this.ValidateMember(culture, memberName, results);
        }
        
        protected virtual void ValidateMember(System.Globalization.CultureInfo culture, string memberName, System.Collections.Generic.IList<CodeFluent.Runtime.CodeFluentValidationException> results)
        {
        }
        
        protected virtual void ReadRecord(System.Data.IDataReader reader, CodeFluent.Runtime.CodeFluentReloadOptions options)
        {
            if ((reader == null))
            {
                throw new System.ArgumentNullException("reader");
            }
            if ((((options & CodeFluent.Runtime.CodeFluentReloadOptions.Properties) 
                        == 0) 
                        == false))
            {
                this._registro_Estado = CodeFluentPersistence.GetReaderValue(reader, "Registro_Estado", (default(string)));
                this._registro_Fecha = CodeFluentPersistence.GetReaderValue(reader, "Registro_Fecha", (default(DateTime)));
                this._registro_Usuario = CodeFluentPersistence.GetReaderValue(reader, "Registro_Usuario", (default(string)));
                this._ruta_Carros_Cantidad = CodeFluentPersistence.GetReaderValue(reader, "Ruta_Carros_Cantidad", (default(int)));
                this._ruta_Descripcion = CodeFluentPersistence.GetReaderValue(reader, "Ruta_Descripcion", (default(string)));
                this._ruta_Mapa_Url = CodeFluentPersistence.GetReaderValue(reader, "Ruta_Mapa_Url", (default(string)));
                this._ruta_Persona_Auxiliar = CodeFluentPersistence.GetReaderValue(reader, "Ruta_Persona_Auxiliar", (default(int)));
                this._ruta_Persona_Encargado = CodeFluentPersistence.GetReaderValue(reader, "Ruta_Persona_Encargado", (default(int)));
                this._ruta_Publicadores_Cantidad = CodeFluentPersistence.GetReaderValue(reader, "Ruta_Publicadores_Cantidad", (default(int)));
                this._ruta_Secuencia = CodeFluentPersistence.GetReaderValue(reader, "Ruta_Secuencia", (default(int)));
                this._zona_Secuencia = CodeFluentPersistence.GetReaderValue(reader, "Zona_Secuencia", (default(int)));
            }
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecord, false, false));
        }

        void CodeFluent.Runtime.ICodeFluentEntity.ReadRecord(System.Data.IDataReader reader)
        {
            this.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.Default);
        }

        protected virtual void ReadRecordOnSave(System.Data.IDataReader reader)
        {
            if ((reader == null))
            {
                throw new System.ArgumentNullException("reader");
            }
            //TODO: Puede ser que solo sean los Identity y no todo los primary keys
            this._ruta_Secuencia = CodeFluentPersistence.GetReaderValue(reader, "Ruta_Secuencia", ((int)(-1)));
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecordOnSave, false, false));
        }

        void CodeFluent.Runtime.ICodeFluentEntity.ReadRecordOnSave(System.Data.IDataReader reader)
        {
            this.ReadRecordOnSave(reader);
        }
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Rutas_Master Load(int ruta_Secuencia)
        {
            if ((ruta_Secuencia == default(int)))
            {
                return null;
            }
            OSIS.PEPPAM.BOM.Rutas_Master rutasMaster = new OSIS.PEPPAM.BOM.Rutas_Master();
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Rutas_Master", null,  "Proc_Rutas_Master");
            persistence.AddRawParameter("@Ruta_Secuencia", ruta_Secuencia);
            System.Data.IDataReader reader = null;
            try
            {
                reader = persistence.ExecuteReader();
                if ((reader.Read() == true))
                {
                    rutasMaster.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.Default);
                    rutasMaster.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
                    return rutasMaster;
                }
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                persistence.CompleteCommand();
            }
            return null;
        }

        public virtual bool Reload(CodeFluent.Runtime.CodeFluentReloadOptions options)
        {
            bool ret = false;
            if (
            (this.Ruta_Secuencia == -1) 
              )
            {
                return ret;
            }
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Rutas_Master", null,  "Proc_Rutas_Master");
            persistence.AddRawParameter("@Ruta_Secuencia", this.Ruta_Secuencia);
            System.Data.IDataReader reader = null;
            try
            {
                reader = persistence.ExecuteReader();
                if ((reader.Read() == true))
                {
                    this.ReadRecord(reader, options);
                    this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
                    ret = true;
                }
                else
                {
                    this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted;
                }
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                persistence.CompleteCommand();
            }
            return ret;
        }

        protected virtual bool BaseSave(bool force)
        {
            if ((this.EntityState == CodeFluent.Runtime.CodeFluentEntityState.ToBeDeleted))
            {
                this.Delete();
                return false;
            }
            CodeFluent.Runtime.CodeFluentEntityActionEventArgs evt = new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Saving, true);
            this.OnEntityAction(evt);
            if ((evt.Cancel == true))
            {
                return false;
            }
            CodeFluentPersistence.ThrowIfDeleted(this);
            this.Validate();
            if (((force == false) 
                        && (this.EntityState == CodeFluent.Runtime.CodeFluentEntityState.Unchanged)))
            {
                return false;
            }
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Rutas_Master", "Editar");
            persistence.AddRawParameter("@Ruta_Secuencia", Ruta_Secuencia);
            persistence.AddRawParameter("@Zona_Secuencia", Zona_Secuencia);
            persistence.AddRawParameter("@Ruta_Descripcion", Ruta_Descripcion);
            persistence.AddRawParameter("@Ruta_Persona_Encargado", Ruta_Persona_Encargado);
            persistence.AddRawParameter("@Ruta_Persona_Auxiliar", Ruta_Persona_Auxiliar);
            persistence.AddRawParameter("@Ruta_Mapa_Url", Ruta_Mapa_Url);
            persistence.AddRawParameter("@Ruta_Carros_Cantidad", Ruta_Carros_Cantidad);
            persistence.AddRawParameter("@Ruta_Publicadores_Cantidad", Ruta_Publicadores_Cantidad);
            persistence.AddRawParameter("@Registro_Estado", Registro_Estado);
            persistence.AddRawParameter("@Registro_Fecha", Registro_Fecha);
            persistence.AddRawParameter("@Registro_Usuario", Registro_Usuario);
            System.Data.IDataReader reader = null;
            try
            {
                reader = persistence.ExecuteReader();
                if ((reader.Read() == true))
                {
                    this.ReadRecordOnSave(reader);
                }
                CodeFluentPersistence.NextResults(reader);
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                persistence.CompleteCommand();
            }
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Saved, false, false));
            this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
            return true;
        }
        
        public virtual bool Save()
        {
            bool localSave = this.BaseSave(false);
            return localSave;
        }
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public static bool Save(OSIS.PEPPAM.BOM.Rutas_Master rutasMaster)
        {
            if ((rutasMaster == null))
            {
                return false;
            }
            bool ret = rutasMaster.Save();
            return ret;
        }

        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public static bool Insert(OSIS.PEPPAM.BOM.Rutas_Master rutasMaster)
        {
            bool ret = OSIS.PEPPAM.BOM.Rutas_Master.Save(rutasMaster);
            return ret;
        }

        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public static bool Delete(OSIS.PEPPAM.BOM.Rutas_Master rutasMaster)
        {
            if ((rutasMaster == null))
            {
                return false;
            }
            bool ret = rutasMaster.Delete();
            return ret;
        }

        public virtual bool Delete()
        {
            bool ret = false;
            CodeFluent.Runtime.CodeFluentEntityActionEventArgs evt = new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Deleting, true);
            this.OnEntityAction(evt);
            if ((evt.Cancel == true))
            {
                return ret;
            }
            if ((this.EntityState == CodeFluent.Runtime.CodeFluentEntityState.Deleted))
            {
                return ret;
            }
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Rutas_Master", "Borrar");
            persistence.AddRawParameter("@Ruta_Secuencia", this.Ruta_Secuencia);
            persistence.ExecuteNonQuery();
            this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted;
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Deleted, false, false));
            ret = true;
            return ret;
        }

        public string Trace()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            System.IO.StringWriter stringWriter = new System.IO.StringWriter(stringBuilder, System.Globalization.CultureInfo.CurrentCulture);
            System.CodeDom.Compiler.IndentedTextWriter writer = new System.CodeDom.Compiler.IndentedTextWriter(stringWriter);
            this.BaseTrace(writer);
            writer.Flush();
            ((System.IDisposable)(writer)).Dispose();
            ((System.IDisposable)(stringWriter)).Dispose();
            string sr = stringBuilder.ToString();
            return sr;
        }

        void CodeFluent.Runtime.ICodeFluentObject.Trace(System.CodeDom.Compiler.IndentedTextWriter writer)
        {
            this.BaseTrace(writer);
        }

        protected virtual void BaseTrace(System.CodeDom.Compiler.IndentedTextWriter writer)
        {
            writer.Write("[");
            writer.Write("Registro_Estado=");
            writer.Write(this.Registro_Estado);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Registro_Fecha=");
            writer.Write(this.Registro_Fecha);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Registro_Usuario=");
            writer.Write(this.Registro_Usuario);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Ruta_Carros_Cantidad=");
            writer.Write(this.Ruta_Carros_Cantidad);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Ruta_Descripcion=");
            writer.Write(this.Ruta_Descripcion);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Ruta_Mapa_Url=");
            writer.Write(this.Ruta_Mapa_Url);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Ruta_Persona_Auxiliar=");
            writer.Write(this.Ruta_Persona_Auxiliar);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Ruta_Persona_Encargado=");
            writer.Write(this.Ruta_Persona_Encargado);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Ruta_Publicadores_Cantidad=");
            writer.Write(this.Ruta_Publicadores_Cantidad);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Ruta_Secuencia=");
            writer.Write(this.Ruta_Secuencia);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Zona_Secuencia=");
            writer.Write(this.Zona_Secuencia);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write(" PersonasMaster=");
            if ((this._personas_Master != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._personas_Master)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write(" PersonasMasterRutaPersonaAuxiliar=");
            if ((this._personas_Master_Ruta_Persona_Auxiliar != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._personas_Master_Ruta_Persona_Auxiliar)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write(" HorariosMaster=");
            if ((this._horarios_Master != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._horarios_Master)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write(" ZonasMaster=");
            if ((this._zonas_Master != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._zonas_Master)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write(" HorarioTrans=");
            if ((this._horario_Trans != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._horario_Trans)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write(" NotificacionesObjetivoTrans=");
            if ((this._notificaciones_Objetivo_Trans != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._notificaciones_Objetivo_Trans)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write(" DocumentosObjetivosTrans=");
            if ((this._documentos_Objetivos_Trans != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._documentos_Objetivos_Trans)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write(", EntityState=");
            writer.Write(this.EntityState);
            writer.Write("]");
        }

        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Rutas_Master LoadByEntityKey(string key)
        {
            if ((key == string.Empty))
            {
                return null;
            }
            OSIS.PEPPAM.BOM.Rutas_Master rutasMaster;
            System.Type[] types = new System.Type[] {
                    typeof(int)                    };
            object[] defaultValues = new object[] {
                    -1                    };
            object[] v = CodeFluentPersistence.ParseEntityKey(key, types, defaultValues);
                    int var0;            var0 = ((int)(v[0]));
            rutasMaster = OSIS.PEPPAM.BOM.Rutas_Master.Load( var0);
            return rutasMaster;
        }

        public  OSIS.PEPPAM.BOM.Rutas_Master Clone(bool deep)
        {
             OSIS.PEPPAM.BOM.Rutas_Master  rutasMaster = new  OSIS.PEPPAM.BOM.Rutas_Master();
            this.CopyTo(rutasMaster , deep);
            return rutasMaster ;
        }

        public OSIS.PEPPAM.BOM.Rutas_Master Clone()
        {
            OSIS.PEPPAM.BOM.Rutas_Master localClone = this.Clone(true);
            return localClone;
        }

        object System.ICloneable.Clone()
        {
            object localClone = this.Clone();
            return localClone;
        }

        public virtual void CopyFrom(System.Collections.IDictionary dict, bool deep)
        {
            if ((dict == null))
            {
                throw new System.ArgumentNullException("dict");
            }
            if ((dict.Contains("Registro_Estado") == true))
            {
                this.Registro_Estado = ((string)(ConvertUtilities.ChangeType(dict["Registro_Estado"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Registro_Fecha") == true))
            {
                this.Registro_Fecha = ((DateTime)(ConvertUtilities.ChangeType(dict["Registro_Fecha"], typeof(DateTime), System.DateTime.MinValue)));
            }
            if ((dict.Contains("Registro_Usuario") == true))
            {
                this.Registro_Usuario = ((string)(ConvertUtilities.ChangeType(dict["Registro_Usuario"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Ruta_Carros_Cantidad") == true))
            {
                this.Ruta_Carros_Cantidad = ((int)(ConvertUtilities.ChangeType(dict["Ruta_Carros_Cantidad"], typeof(int), -1)));
            }
            if ((dict.Contains("Ruta_Descripcion") == true))
            {
                this.Ruta_Descripcion = ((string)(ConvertUtilities.ChangeType(dict["Ruta_Descripcion"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Ruta_Mapa_Url") == true))
            {
                this.Ruta_Mapa_Url = ((string)(ConvertUtilities.ChangeType(dict["Ruta_Mapa_Url"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Ruta_Persona_Auxiliar") == true))
            {
                this.Ruta_Persona_Auxiliar = ((int)(ConvertUtilities.ChangeType(dict["Ruta_Persona_Auxiliar"], typeof(int), -1)));
            }
            if ((dict.Contains("Ruta_Persona_Encargado") == true))
            {
                this.Ruta_Persona_Encargado = ((int)(ConvertUtilities.ChangeType(dict["Ruta_Persona_Encargado"], typeof(int), -1)));
            }
            if ((dict.Contains("Ruta_Publicadores_Cantidad") == true))
            {
                this.Ruta_Publicadores_Cantidad = ((int)(ConvertUtilities.ChangeType(dict["Ruta_Publicadores_Cantidad"], typeof(int), -1)));
            }
            if ((dict.Contains("Ruta_Secuencia") == true))
            {
                this.Ruta_Secuencia = ((int)(ConvertUtilities.ChangeType(dict["Ruta_Secuencia"], typeof(int), -1)));
            }
            if ((dict.Contains("Zona_Secuencia") == true))
            {
                this.Zona_Secuencia = ((int)(ConvertUtilities.ChangeType(dict["Zona_Secuencia"], typeof(int), -1)));
            }
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.CopyFrom, false, dict));
        }

        public virtual void CopyTo( OSIS.PEPPAM.BOM.Rutas_Master  rutasMaster, bool deep)
        {
            if ((rutasMaster == null))
            {
                throw new System.ArgumentNullException("rutasMaster");
            }
            rutasMaster.Registro_Estado = this.Registro_Estado;
            rutasMaster.Registro_Fecha = this.Registro_Fecha;
            rutasMaster.Registro_Usuario = this.Registro_Usuario;
            rutasMaster.Ruta_Carros_Cantidad = this.Ruta_Carros_Cantidad;
            rutasMaster.Ruta_Descripcion = this.Ruta_Descripcion;
            rutasMaster.Ruta_Mapa_Url = this.Ruta_Mapa_Url;
            rutasMaster.Ruta_Persona_Auxiliar = this.Ruta_Persona_Auxiliar;
            rutasMaster.Ruta_Persona_Encargado = this.Ruta_Persona_Encargado;
            rutasMaster.Ruta_Publicadores_Cantidad = this.Ruta_Publicadores_Cantidad;
            rutasMaster.Ruta_Secuencia = this.Ruta_Secuencia;
            rutasMaster.Zona_Secuencia = this.Zona_Secuencia;
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.CopyTo, false, rutasMaster));
        }


// Metodos Definidos en el Modelo y las propiedades CollectionKey

         public static System.Collections.Generic.List<OSIS.PEPPAM.BOM.Proc_Rutas_Relacionados_Descripcion> RutaRelacionados(int rutaSecuencia,int zonaSecuencia)
        {
            System.Collections.Generic.List<OSIS.PEPPAM.BOM.Proc_Rutas_Relacionados_Descripcion> ruta_Relacionados = new System.Collections.Generic.List<OSIS.PEPPAM.BOM.Proc_Rutas_Relacionados_Descripcion>();
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Rutas_Relacionados_Descripcion", null, "Proc_Rutas_Relacionados_Descripcion");
            persistence.AddParameter("@Ruta_Secuencia", rutaSecuencia);
            persistence.AddParameter("@Zona_Secuencia", zonaSecuencia);
            System.Data.IDataReader reader = null;
            bool readerRead;
            try
            {
                reader = persistence.ExecuteReader();
                for (readerRead = reader.Read(); (readerRead == true); readerRead = reader.Read())
                {
                    OSIS.PEPPAM.BOM.Proc_Rutas_Relacionados_Descripcion _ruta_Relacionados = new OSIS.PEPPAM.BOM.Proc_Rutas_Relacionados_Descripcion();
                    CodeFluent.Runtime.CodeFluentLightWeightPersistence.ReadRecord(reader, ((CodeFluent.Runtime.ICodeFluentLightEntity)(_ruta_Relacionados)), null);
                    ruta_Relacionados.Add(_ruta_Relacionados);
                }
                return ruta_Relacionados;
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                persistence.CompleteCommand();
            }
            return null;
        }

	public static List<OSIS.PEPPAM.BOM.Proc_Rutas_Relacionados_Descripcion> Ruta_RelacionadosPageLoadAll(int pageIndex, int pageSize, int rutaSecuencia,int zonaSecuencia,	        string searchString, CodeFluent.Runtime.PageOptions pageOptions)
	    {
	        var pageLoadAll = OSIS.PEPPAM.BOM.Proc_Rutas_Relacionados_Descripcion.PageLoadAllPaging(pageIndex, pageSize, rutaSecuencia,zonaSecuencia,searchString, pageOptions);

	        if (pageLoadAll == null)
	        {
                return new List<OSIS.PEPPAM.BOM.Proc_Rutas_Relacionados_Descripcion>();
	        }


	        return pageLoadAll;
	    }

        public static List<OSIS.PEPPAM.BOM.Proc_Rutas_Relacionados_Descripcion> Ruta_RelacionadosLoadAll(int rutaSecuencia,int zonaSecuencia,	        string searchString)
        {
            var ret = OSIS.PEPPAM.BOM.Proc_Rutas_Relacionados_Descripcion.PageLoadAllPaging(1, 1000000, rutaSecuencia,zonaSecuencia,searchString, null);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.BOM.Proc_Rutas_Relacionados_Descripcion>();
            }


            return ret;
        }

		#region Static SQL Methods

		internal static string GetFieldAliasFromFieldNameSqlMapping(string alias)
		{
			alias = alias.Replace("[", string.Empty).Replace("]", string.Empty);
			switch (alias.ToLower())
			{
				case "registro_estado": return "registro_estado";
				case "registro_fecha": return "registro_fecha";
				case "registro_usuario": return "registro_usuario";
				case "ruta_carros_cantidad": return "ruta_carros_cantidad";
				case "ruta_descripcion": return "ruta_descripcion";
				case "ruta_mapa_url": return "ruta_mapa_url";
				case "ruta_persona_auxiliar": return "ruta_persona_auxiliar";
				case "ruta_persona_encargado": return "ruta_persona_encargado";
				case "ruta_publicadores_cantidad": return "ruta_publicadores_cantidad";
				case "ruta_secuencia": return "ruta_secuencia";
				case "zona_secuencia": return "zona_secuencia";
				default: throw new Exception("The select clause is not valid.");
			}
		}

		internal static string GetTableFromFieldAliasSqlMapping(string alias)
		{
			switch (alias.ToLower())
			{
				case "registro_estado": return "Rutas_Master";
				case "registro_fecha": return "Rutas_Master";
				case "registro_usuario": return "Rutas_Master";
				case "ruta_carros_cantidad": return "Rutas_Master";
				case "ruta_descripcion": return "Rutas_Master";
				case "ruta_mapa_url": return "Rutas_Master";
				case "ruta_persona_auxiliar": return "Rutas_Master";
				case "ruta_persona_encargado": return "Rutas_Master";
				case "ruta_publicadores_cantidad": return "Rutas_Master";
				case "ruta_secuencia": return "Rutas_Master";
				case "zona_secuencia": return "Rutas_Master";
				default: throw new Exception("The select clause is not valid.");
			}
		}

		internal static string GetTableFromFieldNameSqlMapping(string field)
		{
			switch (field.ToLower())
			{
				case "registro_estado": return "Rutas_Master";
				case "registro_fecha": return "Rutas_Master";
				case "registro_usuario": return "Rutas_Master";
				case "ruta_carros_cantidad": return "Rutas_Master";
				case "ruta_descripcion": return "Rutas_Master";
				case "ruta_mapa_url": return "Rutas_Master";
				case "ruta_persona_auxiliar": return "Rutas_Master";
				case "ruta_persona_encargado": return "Rutas_Master";
				case "ruta_publicadores_cantidad": return "Rutas_Master";
				case "ruta_secuencia": return "Rutas_Master";
				case "zona_secuencia": return "Rutas_Master";
				default: throw new Exception("The select clause is not valid.");
			}
		}

		internal static string GetRemappedLinqSql(string sql, string parentAlias, LinqSQLFromClauseCollection childTables)
		{
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[registro_estado\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Rutas_Master") + "].[registro_estado]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[registro_fecha\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Rutas_Master") + "].[registro_fecha]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[registro_usuario\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Rutas_Master") + "].[registro_usuario]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[ruta_carros_cantidad\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Rutas_Master") + "].[ruta_carros_cantidad]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[ruta_descripcion\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Rutas_Master") + "].[ruta_descripcion]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[ruta_mapa_url\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Rutas_Master") + "].[ruta_mapa_url]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[ruta_persona_auxiliar\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Rutas_Master") + "].[ruta_persona_auxiliar]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[ruta_persona_encargado\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Rutas_Master") + "].[ruta_persona_encargado]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[ruta_publicadores_cantidad\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Rutas_Master") + "].[ruta_publicadores_cantidad]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[ruta_secuencia\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Rutas_Master") + "].[ruta_secuencia]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[zona_secuencia\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Rutas_Master") + "].[zona_secuencia]", RegexOptions.IgnoreCase);
			return sql;
		}

		#endregion


	}

}

