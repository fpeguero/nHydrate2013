//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 6/19/2014 1:29:30 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     Autor: Francisco
//     Fecha: 6/19/2014 1:29:30 PM
// </auto-generated>
//------------------------------------------------------------------------------

 using System;
 using CodeFluent.Runtime;
 using CodeFluent.Runtime.Utilities;
  using System.Text.RegularExpressions;
  using System.Collections.Generic;
namespace OSIS.PEPPAM.BOM
{
	/// <summary>
	/// The collection to hold 'Sistemas_Funcionalidades_Master' entities
	/// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MyWorkGenerators", "0.0.0.00000")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DataObjectAttribute()]
    [System.Diagnostics.DebuggerDisplayAttribute("EK={EntityKey},Funcionalidad_Codigo={Funcionalidad_Codigo}")]
    [System.ComponentModel.TypeConverterAttribute(typeof(CodeFluent.Runtime.Design.NameTypeConverter))]
	public partial class Sistemas_Funcionalidades_Master :  System.ICloneable, System.IComparable, System.IComparable<OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master>, CodeFluent.Runtime.ICodeFluentEntity, System.ComponentModel.IDataErrorInfo, CodeFluent.Runtime.ICodeFluentMemberValidator, CodeFluent.Runtime.ICodeFluentSummaryValidator, System.IEquatable<OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master>

	{
		#region FieldNameConstants Enumeration

		/// <summary>
		/// Enumeration to define each property that maps to a database field for the 'Sistemas_Funcionalidades_Master' table.
		/// </summary>
		public enum FieldNameConstants
		{
			/// <summary>
			/// Field mapping for the 'Funcionalidad_Codigo' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Funcionalidad_Codigo' property")]
			Funcionalidad_Codigo,
			/// <summary>
			/// Field mapping for the 'Funcionalidad_Descripcion' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Funcionalidad_Descripcion' property")]
			Funcionalidad_Descripcion,
			/// <summary>
			/// Field mapping for the 'Funcionalidad_Explicacion' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Funcionalidad_Explicacion' property")]
			Funcionalidad_Explicacion,
			/// <summary>
			/// Field mapping for the 'Funcionalidad_Nombre' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Funcionalidad_Nombre' property")]
			Funcionalidad_Nombre,
			/// <summary>
			/// Field mapping for the 'Funcionalidad_Numero' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Funcionalidad_Numero' property")]
			Funcionalidad_Numero,
			/// <summary>
			/// Field mapping for the 'Funcionalidad_Orden' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Funcionalidad_Orden' property")]
			Funcionalidad_Orden,
			/// <summary>
			/// Field mapping for the 'Funcionalidad_Permiso_Descripcion' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Funcionalidad_Permiso_Descripcion' property")]
			Funcionalidad_Permiso_Descripcion,
			/// <summary>
			/// Field mapping for the 'Funcionalidad_Url' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Funcionalidad_Url' property")]
			Funcionalidad_Url,
			/// <summary>
			/// Field mapping for the 'Modulo_Numero' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Modulo_Numero' property")]
			Modulo_Numero,
			/// <summary>
			/// Field mapping for the 'Registro_Estado' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Registro_Estado' property")]
			Registro_Estado,
			/// <summary>
			/// Field mapping for the 'Registro_Fecha' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Registro_Fecha' property")]
			Registro_Fecha,
			/// <summary>
			/// Field mapping for the 'Registro_Usuario' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Registro_Usuario' property")]
			Registro_Usuario,
		}
		#endregion

        private bool _raisePropertyChangedEvents = true;
        
        private CodeFluent.Runtime.CodeFluentEntityState _entityState;
        
		#region Property Holders

		/// <summary />
		protected string _funcionalidad_Codigo = string.Empty;
		/// <summary />
		protected string _funcionalidad_Descripcion = string.Empty;
		/// <summary />
		protected string _funcionalidad_Explicacion = string.Empty;
		/// <summary />
		protected string _funcionalidad_Nombre = string.Empty;
		/// <summary />
		protected int _funcionalidad_Numero = -1;
		/// <summary />
		protected int _funcionalidad_Orden = -1;
		/// <summary />
		protected string _funcionalidad_Permiso_Descripcion = string.Empty;
		/// <summary />
		protected string _funcionalidad_Url = string.Empty;
		/// <summary />
		protected int _modulo_Numero = -1;
		/// <summary />
		protected string _registro_Estado = string.Empty;
		/// <summary />
		protected DateTime _registro_Fecha = System.DateTime.MinValue;
		/// <summary />
		protected string _registro_Usuario = string.Empty;

		#endregion

		#region Property Navigation Holders

		/// <summary>
		/// The back navigation definition for walking [Sistemas_Funcionalidades_Master]->[Sistemas_Funcionalidades_Acciones_Trans]
		/// Relationship Links: 
		/// [Sistemas_Funcionalidades_Master.Funcionalidad_Numero = Sistemas_Funcionalidades_Acciones_Trans.Funcionalidad_Numero] (Required)
		/// <summary />
		protected Sistemas_Funcionalidades_Acciones_TransCollection _sistemas_Funcionalidades_Acciones_Trans =  null;

		/// <summary>
		/// The navigation definition for walking [Sistemas_Funcionalidades_Master]->[Sistemas_Modulos_Master]
		/// Relationship Links: 
		/// [Sistemas_Modulos_Master.Modulo_Numero = Sistemas_Funcionalidades_Master.Modulo_Numero] (Required)
		protected OSIS.PEPPAM.BOM.Sistemas_Modulos_Master _sistemas_Modulos_Master = null;


		#endregion

		#region GetMaxLength

		/// <summary>
		/// Gets the maximum size of the field value.
		/// </summary>
		public static int GetMaxLength(FieldNameConstants field)
		{
			switch (field)
			{
				case FieldNameConstants.Funcionalidad_Codigo:
					return 150;
				case FieldNameConstants.Funcionalidad_Descripcion:
					return 500;
				case FieldNameConstants.Funcionalidad_Explicacion:
					return 8000;
				case FieldNameConstants.Funcionalidad_Nombre:
					return 150;
				case FieldNameConstants.Funcionalidad_Numero:
					return 0;
				case FieldNameConstants.Funcionalidad_Orden:
					return 0;
				case FieldNameConstants.Funcionalidad_Permiso_Descripcion:
					return 50;
				case FieldNameConstants.Funcionalidad_Url:
					return 150;
				case FieldNameConstants.Modulo_Numero:
					return 0;
				case FieldNameConstants.Registro_Estado:
					return 1;
				case FieldNameConstants.Registro_Fecha:
					return 0;
				case FieldNameConstants.Registro_Usuario:
					return 150;
			}
			return 0;
		}


		#endregion

		#region GetFieldType

		/// <summary>
		/// Gets the system type of a field on this object
		/// </summary>
		public static System.Type GetFieldType(FieldNameConstants field)
		{
			if (field.GetType() != typeof(FieldNameConstants))
				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'OSIS.PEPPAM.BOM.Entity.Sistemas_Funcionalidades_Master.FieldNameConstants'.");

			switch ((FieldNameConstants)field)
			{
				case FieldNameConstants.Funcionalidad_Codigo: return typeof(string);
				case FieldNameConstants.Funcionalidad_Descripcion: return typeof(string);
				case FieldNameConstants.Funcionalidad_Explicacion: return typeof(string);
				case FieldNameConstants.Funcionalidad_Nombre: return typeof(string);
				case FieldNameConstants.Funcionalidad_Numero: return typeof(int);
				case FieldNameConstants.Funcionalidad_Orden: return typeof(int);
				case FieldNameConstants.Funcionalidad_Permiso_Descripcion: return typeof(string);
				case FieldNameConstants.Funcionalidad_Url: return typeof(string);
				case FieldNameConstants.Modulo_Numero: return typeof(int);
				case FieldNameConstants.Registro_Estado: return typeof(string);
				case FieldNameConstants.Registro_Fecha: return typeof(DateTime);
				case FieldNameConstants.Registro_Usuario: return typeof(string);
			}
			return null;
		}


		#endregion

		#region Get/Set Value


		#endregion

        public Sistemas_Funcionalidades_Master()
        {
            this._entityState = CodeFluent.Runtime.CodeFluentEntityState.Created;
        }
        
		#region Properties

        [System.ComponentModel.BrowsableAttribute(false)]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual bool RaisePropertyChangedEvents
        {
            get
            {
                return this._raisePropertyChangedEvents;
            }
            set
            {
                this._raisePropertyChangedEvents = value;
            }
        }
        
		/// <summary>
		/// The property that maps back to the database 'Sistemas_Funcionalidades_Master.Funcionalidad_Numero' field.
		/// </summary>
		/// <remarks>Field: [Sistemas_Funcionalidades_Master].[Funcionalidad_Numero], Not Nullable, Primary Key, Unique, Indexed</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(int))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Funcionalidad_Numero")]
		public virtual int Funcionalidad_Numero
		{
			get { 
			return _funcionalidad_Numero; }
			set
			{
				if (value == _funcionalidad_Numero) return;
                this._funcionalidad_Numero = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Funcionalidad_Numero"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Sistemas_Funcionalidades_Master.Modulo_Numero' field.
		/// </summary>
		/// <remarks>Field: [Sistemas_Funcionalidades_Master].[Modulo_Numero], Not Nullable</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(int))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Modulo_Numero")]
		public virtual int Modulo_Numero
		{
			get { 
if (((this._modulo_Numero == -1) 
                            && (this._sistemas_Modulos_Master != null)))
                {
                    this._modulo_Numero = this._sistemas_Modulos_Master.Modulo_Numero;
                }
			return _modulo_Numero; }
			set
			{
				if (value == _modulo_Numero) return;
                this._sistemas_Modulos_Master = null;
				_modulo_Numero = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("SistemasModulosMaster"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Modulo_Numero"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Sistemas_Funcionalidades_Master.Funcionalidad_Codigo' field.
		/// </summary>
		/// <remarks>Field: [Sistemas_Funcionalidades_Master].[Funcionalidad_Codigo], Field Length: 150, Not Nullable</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(string))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Funcionalidad_Codigo")]
		public virtual string Funcionalidad_Codigo
		{
			get { 
			return _funcionalidad_Codigo; }
			set
			{
				if ((value != null) && (value.Length > GetMaxLength(FieldNameConstants.Funcionalidad_Codigo))) throw new Exception(string.Format(GlobalValues.ERROR_DATA_TOO_BIG, value, "Sistemas_Funcionalidades_Master.Funcionalidad_Codigo", GetMaxLength(FieldNameConstants.Funcionalidad_Codigo)));
				if (value == _funcionalidad_Codigo) return;
                this._funcionalidad_Codigo = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Funcionalidad_Codigo"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Sistemas_Funcionalidades_Master.Funcionalidad_Nombre' field.
		/// </summary>
		/// <remarks>Field: [Sistemas_Funcionalidades_Master].[Funcionalidad_Nombre], Field Length: 150, Not Nullable</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(string))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Funcionalidad_Nombre")]
		public virtual string Funcionalidad_Nombre
		{
			get { 
			return _funcionalidad_Nombre; }
			set
			{
				if ((value != null) && (value.Length > GetMaxLength(FieldNameConstants.Funcionalidad_Nombre))) throw new Exception(string.Format(GlobalValues.ERROR_DATA_TOO_BIG, value, "Sistemas_Funcionalidades_Master.Funcionalidad_Nombre", GetMaxLength(FieldNameConstants.Funcionalidad_Nombre)));
				if (value == _funcionalidad_Nombre) return;
                this._funcionalidad_Nombre = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Funcionalidad_Nombre"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Sistemas_Funcionalidades_Master.Funcionalidad_Descripcion' field.
		/// </summary>
		/// <remarks>Field: [Sistemas_Funcionalidades_Master].[Funcionalidad_Descripcion], Field Length: 500, Not Nullable</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(string))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Funcionalidad_Descripcion")]
		public virtual string Funcionalidad_Descripcion
		{
			get { 
			return _funcionalidad_Descripcion; }
			set
			{
				if ((value != null) && (value.Length > GetMaxLength(FieldNameConstants.Funcionalidad_Descripcion))) throw new Exception(string.Format(GlobalValues.ERROR_DATA_TOO_BIG, value, "Sistemas_Funcionalidades_Master.Funcionalidad_Descripcion", GetMaxLength(FieldNameConstants.Funcionalidad_Descripcion)));
				if (value == _funcionalidad_Descripcion) return;
                this._funcionalidad_Descripcion = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Funcionalidad_Descripcion"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Sistemas_Funcionalidades_Master.Funcionalidad_Explicacion' field.
		/// </summary>
		/// <remarks>Field: [Sistemas_Funcionalidades_Master].[Funcionalidad_Explicacion], Field Length: 8000, Not Nullable</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(string))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Funcionalidad_Explicacion")]
		public virtual string Funcionalidad_Explicacion
		{
			get { 
			return _funcionalidad_Explicacion; }
			set
			{
				if ((value != null) && (value.Length > GetMaxLength(FieldNameConstants.Funcionalidad_Explicacion))) throw new Exception(string.Format(GlobalValues.ERROR_DATA_TOO_BIG, value, "Sistemas_Funcionalidades_Master.Funcionalidad_Explicacion", GetMaxLength(FieldNameConstants.Funcionalidad_Explicacion)));
				if (value == _funcionalidad_Explicacion) return;
                this._funcionalidad_Explicacion = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Funcionalidad_Explicacion"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Sistemas_Funcionalidades_Master.Funcionalidad_Url' field.
		/// </summary>
		/// <remarks>Field: [Sistemas_Funcionalidades_Master].[Funcionalidad_Url], Field Length: 150, Not Nullable</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(string))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Funcionalidad_Url")]
		public virtual string Funcionalidad_Url
		{
			get { 
			return _funcionalidad_Url; }
			set
			{
				if ((value != null) && (value.Length > GetMaxLength(FieldNameConstants.Funcionalidad_Url))) throw new Exception(string.Format(GlobalValues.ERROR_DATA_TOO_BIG, value, "Sistemas_Funcionalidades_Master.Funcionalidad_Url", GetMaxLength(FieldNameConstants.Funcionalidad_Url)));
				if (value == _funcionalidad_Url) return;
                this._funcionalidad_Url = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Funcionalidad_Url"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Sistemas_Funcionalidades_Master.Funcionalidad_Permiso_Descripcion' field.
		/// </summary>
		/// <remarks>Field: [Sistemas_Funcionalidades_Master].[Funcionalidad_Permiso_Descripcion], Field Length: 50, Nullable</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = true, Type=typeof(string))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Funcionalidad_Permiso_Descripcion")]
		public virtual string Funcionalidad_Permiso_Descripcion
		{
			get { 
			return _funcionalidad_Permiso_Descripcion; }
			set
			{
				if ((value != null) && (value.Length > GetMaxLength(FieldNameConstants.Funcionalidad_Permiso_Descripcion))) throw new Exception(string.Format(GlobalValues.ERROR_DATA_TOO_BIG, value, "Sistemas_Funcionalidades_Master.Funcionalidad_Permiso_Descripcion", GetMaxLength(FieldNameConstants.Funcionalidad_Permiso_Descripcion)));
				if (value == _funcionalidad_Permiso_Descripcion) return;
                this._funcionalidad_Permiso_Descripcion = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Funcionalidad_Permiso_Descripcion"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Sistemas_Funcionalidades_Master.Funcionalidad_Orden' field.
		/// </summary>
		/// <remarks>Field: [Sistemas_Funcionalidades_Master].[Funcionalidad_Orden], Not Nullable, Default Value: 0</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(int))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Funcionalidad_Orden")]
		public virtual int Funcionalidad_Orden
		{
			get { 
			return _funcionalidad_Orden; }
			set
			{
				if (value == _funcionalidad_Orden) return;
                this._funcionalidad_Orden = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Funcionalidad_Orden"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Sistemas_Funcionalidades_Master.Registro_Estado' field.
		/// </summary>
		/// <remarks>Field: [Sistemas_Funcionalidades_Master].[Registro_Estado], Field Length: 1, Not Nullable, Default Value: A</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(string))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Registro_Estado")]
		public virtual string Registro_Estado
		{
			get { 
			return _registro_Estado; }
			set
			{
				if ((value != null) && (value.Length > GetMaxLength(FieldNameConstants.Registro_Estado))) throw new Exception(string.Format(GlobalValues.ERROR_DATA_TOO_BIG, value, "Sistemas_Funcionalidades_Master.Registro_Estado", GetMaxLength(FieldNameConstants.Registro_Estado)));
				if (value == _registro_Estado) return;
                this._registro_Estado = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Registro_Estado"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Sistemas_Funcionalidades_Master.Registro_Fecha' field.
		/// </summary>
		/// <remarks>Field: [Sistemas_Funcionalidades_Master].[Registro_Fecha], Not Nullable, Default Value: getdate</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(DateTime))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Registro_Fecha")]
		public virtual DateTime Registro_Fecha
		{
			get { 
			return _registro_Fecha; }
			set
			{
				if ((value < GlobalValues.MIN_DATETIME)) throw new Exception("The DateTime value 'Registro_Fecha' (" + value.ToString("yyyy-MM-dd HH:mm:ss") + ") cannot be less than " + GlobalValues.MIN_DATETIME.ToString());
				if ((value > GlobalValues.MAX_DATETIME)) throw new Exception("The DateTime value 'Registro_Fecha' (" + value.ToString("yyyy-MM-dd HH:mm:ss") + ") cannot be greater than " + GlobalValues.MAX_DATETIME.ToString());
				if (value == _registro_Fecha) return;
                this._registro_Fecha = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Registro_Fecha"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Sistemas_Funcionalidades_Master.Registro_Usuario' field.
		/// </summary>
		/// <remarks>Field: [Sistemas_Funcionalidades_Master].[Registro_Usuario], Field Length: 150, Not Nullable</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(string))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Registro_Usuario")]
		public virtual string Registro_Usuario
		{
			get { 
			return _registro_Usuario; }
			set
			{
				if ((value != null) && (value.Length > GetMaxLength(FieldNameConstants.Registro_Usuario))) throw new Exception(string.Format(GlobalValues.ERROR_DATA_TOO_BIG, value, "Sistemas_Funcionalidades_Master.Registro_Usuario", GetMaxLength(FieldNameConstants.Registro_Usuario)));
				if (value == _registro_Usuario) return;
                this._registro_Usuario = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Registro_Usuario"));
			}
		}


		#endregion

		#region Navigation Properties

		/// <summary>
		/// The back navigation definition for walking [Sistemas_Funcionalidades_Master]->[Sistemas_Funcionalidades_Acciones_Trans]
		/// Relationship Links: 
		/// [Sistemas_Funcionalidades_Master.Funcionalidad_Numero = Sistemas_Funcionalidades_Acciones_Trans.Funcionalidad_Numero] (Required)
		/// </summary>
		[System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Acciones_TransCollection SistemasFuncionalidadesAccionesTrans
        {
            get
            {
                if ((this._sistemas_Funcionalidades_Acciones_Trans == null))
                {
                    if ((
                    (this.Funcionalidad_Numero == -1)
                       )
                         || (this.EntityState.Equals(CodeFluent.Runtime.CodeFluentEntityState.Created) == true))
                    {
                        this._sistemas_Funcionalidades_Acciones_Trans = new OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Acciones_TransCollection(null,this);
                        return this._sistemas_Funcionalidades_Acciones_Trans;
                    }
                    this._sistemas_Funcionalidades_Acciones_Trans = OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Acciones_TransCollection.LoadByFuncionalidad(this);
                }
                return this._sistemas_Funcionalidades_Acciones_Trans;
            }
        }

		/// <summary>
		/// The navigation definition for walking [Sistemas_Funcionalidades_Master]->[Sistemas_Modulos_Master]
		/// Relationship Links: 
		/// [Sistemas_Modulos_Master.Modulo_Numero = Sistemas_Funcionalidades_Master.Modulo_Numero] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.BOM.Sistemas_Modulos_Master SistemasModulosMaster
		{
			get
			{
                if ((this._sistemas_Modulos_Master == null))
                {
                    this._sistemas_Modulos_Master = OSIS.PEPPAM.BOM.Sistemas_Modulos_Master.Load(Modulo_Numero);
                }
                return this._sistemas_Modulos_Master;
			}
			set
            {
                _modulo_Numero = -1;
                this._sistemas_Modulos_Master = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("SistemasModulosMaster"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Modulo_Numero"));
            }
		}

		#endregion

        public virtual string EntityKey
        {
            get
            {
                return this.Funcionalidad_Numero.ToString();
            }
            set
            {
               this.Funcionalidad_Numero = ((int)(ConvertUtilities.ChangeType(value, typeof(int), -1)));
            }
        }

        public virtual string EntityDisplayName
        {
            get
            {
                return this.Funcionalidad_Codigo.ToString();
            }
        }
        
        [field:System.NonSerializedAttribute()]
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        [field:System.NonSerializedAttribute()]
        public event CodeFluent.Runtime.CodeFluentEntityActionEventHandler EntityAction;

        protected virtual void OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs e)
        {
            if ((this.RaisePropertyChangedEvents == false))
            {
                return;
            }
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, e);
            }
        }

        protected virtual void OnEntityAction(CodeFluent.Runtime.CodeFluentEntityActionEventArgs e)
        {
            if ((this.EntityAction != null))
            {
                this.EntityAction(this, e);
            }
        }

        string System.ComponentModel.IDataErrorInfo.Error
        {
            get
            {
                return this.Validate(System.Globalization.CultureInfo.CurrentCulture);
            }
        }
        
        string System.ComponentModel.IDataErrorInfo.this[string columnName]
        {
            get
            {
                return CodeFluentPersistence.ValidateMember(System.Globalization.CultureInfo.CurrentCulture, this, columnName, null);
            }
        }
        
        public virtual CodeFluent.Runtime.CodeFluentEntityState EntityState
        {
            get
            {
                return this._entityState;
            }
            set
            {
                if ((System.Collections.Generic.EqualityComparer<CodeFluent.Runtime.CodeFluentEntityState>.Default.Equals(value, this.EntityState) == true))
                {
                    return;
                }
                this._entityState = value;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("EntityState"));
            }
        }
        
        public virtual bool Equals(OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master sistemasFuncionalidadesMaster)
        {
            if ((sistemasFuncionalidadesMaster == null))
            {
                return false;
            }

            if (
                    (this.Funcionalidad_Numero == -1)
            )
            {
                return base.Equals(sistemasFuncionalidadesMaster);
            }

 return ((
                    (this.Funcionalidad_Numero.Equals(sistemasFuncionalidadesMaster.Funcionalidad_Numero))
                        )== true);
        }

        public override bool Equals(object obj)
        {
            OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master sistemasFuncionalidadesMaster = null;
			 sistemasFuncionalidadesMaster = obj as OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master;
            return this.Equals( sistemasFuncionalidadesMaster);
        }

        public override int GetHashCode()
        {
            if ((this.EntityKey == null))
            {
                return base.GetHashCode();
            }
            return this.EntityKey.GetHashCode();
        }
        
        int System.IComparable.CompareTo(object value)
        {
            OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master sistemasFuncionalidadesMaster = null;
             sistemasFuncionalidadesMaster = value as OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master;
            if ((sistemasFuncionalidadesMaster == null))
            {
                throw new System.ArgumentException("value");
            }
            int localCompareTo = this.CompareTo(sistemasFuncionalidadesMaster);
            return localCompareTo;
        }

        public virtual int CompareTo(OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master sistemasFuncionalidadesMaster)
        {
            if ((sistemasFuncionalidadesMaster == null))
            {
                throw new System.ArgumentNullException("sistemasFuncionalidadesMaster");
            }
            int localCompareTo = this.Funcionalidad_Numero.CompareTo(sistemasFuncionalidadesMaster.Funcionalidad_Numero);
            return localCompareTo;
        }

        public virtual string Validate(System.Globalization.CultureInfo culture)
        {
            return CodeFluentPersistence.Validate(culture, this, null);
        }
        
        public virtual void Validate(System.Globalization.CultureInfo culture, System.Collections.Generic.IList<CodeFluent.Runtime.CodeFluentValidationException> results)
        {
            CodeFluent.Runtime.CodeFluentEntityActionEventArgs evt = new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Validating, true, results);
            evt.Culture = culture;
            this.OnEntityAction(evt);
            if ((evt.Cancel == true))
            {
                string externalValidate;
                if ((evt.Argument != null))
                {
                    externalValidate = evt.Argument.ToString();
                }
                else
                {
                    externalValidate = OSIS.PEPPAM.BOM.Resources.Manager.GetStringWithDefault(culture, "OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master.ExternalValidate", "Type 'OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master' cannot be validated.", null);
                }
                CodeFluentPersistence.AddValidationError(results, externalValidate);
            }
            CodeFluentPersistence.ValidateMember(culture, results, this, null);
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Validated, false, results));
        }
        
        public void Validate()
        {
            string var = this.Validate(System.Globalization.CultureInfo.CurrentCulture);
            if ((var != null))
            {
                throw new CodeFluent.Runtime.CodeFluentValidationException(var);
            }
        }
        
        string CodeFluent.Runtime.ICodeFluentValidator.Validate(System.Globalization.CultureInfo culture)
        {
            string localValidate = this.Validate(culture);
            return localValidate;
        }
        
        void CodeFluent.Runtime.ICodeFluentMemberValidator.Validate(System.Globalization.CultureInfo culture, string memberName, System.Collections.Generic.IList<CodeFluent.Runtime.CodeFluentValidationException> results)
        {
            this.ValidateMember(culture, memberName, results);
        }
        
        protected virtual void ValidateMember(System.Globalization.CultureInfo culture, string memberName, System.Collections.Generic.IList<CodeFluent.Runtime.CodeFluentValidationException> results)
        {
        }
        
        protected virtual void ReadRecord(System.Data.IDataReader reader, CodeFluent.Runtime.CodeFluentReloadOptions options)
        {
            if ((reader == null))
            {
                throw new System.ArgumentNullException("reader");
            }
            if ((((options & CodeFluent.Runtime.CodeFluentReloadOptions.Properties) 
                        == 0) 
                        == false))
            {
                this._funcionalidad_Codigo = CodeFluentPersistence.GetReaderValue(reader, "Funcionalidad_Codigo", (default(string)));
                this._funcionalidad_Descripcion = CodeFluentPersistence.GetReaderValue(reader, "Funcionalidad_Descripcion", (default(string)));
                this._funcionalidad_Explicacion = CodeFluentPersistence.GetReaderValue(reader, "Funcionalidad_Explicacion", (default(string)));
                this._funcionalidad_Nombre = CodeFluentPersistence.GetReaderValue(reader, "Funcionalidad_Nombre", (default(string)));
                this._funcionalidad_Numero = CodeFluentPersistence.GetReaderValue(reader, "Funcionalidad_Numero", (default(int)));
                this._funcionalidad_Orden = CodeFluentPersistence.GetReaderValue(reader, "Funcionalidad_Orden", (default(int)));
                this._funcionalidad_Permiso_Descripcion = CodeFluentPersistence.GetReaderValue(reader, "Funcionalidad_Permiso_Descripcion", (default(string)));
                this._funcionalidad_Url = CodeFluentPersistence.GetReaderValue(reader, "Funcionalidad_Url", (default(string)));
                this._modulo_Numero = CodeFluentPersistence.GetReaderValue(reader, "Modulo_Numero", (default(int)));
                this._registro_Estado = CodeFluentPersistence.GetReaderValue(reader, "Registro_Estado", (default(string)));
                this._registro_Fecha = CodeFluentPersistence.GetReaderValue(reader, "Registro_Fecha", (default(DateTime)));
                this._registro_Usuario = CodeFluentPersistence.GetReaderValue(reader, "Registro_Usuario", (default(string)));
            }
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecord, false, false));
        }

        void CodeFluent.Runtime.ICodeFluentEntity.ReadRecord(System.Data.IDataReader reader)
        {
            this.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.Default);
        }

        protected virtual void ReadRecordOnSave(System.Data.IDataReader reader)
        {
            if ((reader == null))
            {
                throw new System.ArgumentNullException("reader");
            }
            //TODO: Puede ser que solo sean los Identity y no todo los primary keys
            this._funcionalidad_Numero = CodeFluentPersistence.GetReaderValue(reader, "Funcionalidad_Numero", ((int)(-1)));
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecordOnSave, false, false));
        }

        void CodeFluent.Runtime.ICodeFluentEntity.ReadRecordOnSave(System.Data.IDataReader reader)
        {
            this.ReadRecordOnSave(reader);
        }
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master Load(int funcionalidad_Numero)
        {
            if ((funcionalidad_Numero == default(int)))
            {
                return null;
            }
            OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master sistemasFuncionalidadesMaster = new OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master();
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Sistemas_Funcionalidades_Master", null,  "Proc_Sistemas_Funcionalidades_Master");
            persistence.AddRawParameter("@Funcionalidad_Numero", funcionalidad_Numero);
            System.Data.IDataReader reader = null;
            try
            {
                reader = persistence.ExecuteReader();
                if ((reader.Read() == true))
                {
                    sistemasFuncionalidadesMaster.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.Default);
                    sistemasFuncionalidadesMaster.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
                    return sistemasFuncionalidadesMaster;
                }
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                persistence.CompleteCommand();
            }
            return null;
        }

        public virtual bool Reload(CodeFluent.Runtime.CodeFluentReloadOptions options)
        {
            bool ret = false;
            if (
            (this.Funcionalidad_Numero == -1) 
              )
            {
                return ret;
            }
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Sistemas_Funcionalidades_Master", null,  "Proc_Sistemas_Funcionalidades_Master");
            persistence.AddRawParameter("@Funcionalidad_Numero", this.Funcionalidad_Numero);
            System.Data.IDataReader reader = null;
            try
            {
                reader = persistence.ExecuteReader();
                if ((reader.Read() == true))
                {
                    this.ReadRecord(reader, options);
                    this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
                    ret = true;
                }
                else
                {
                    this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted;
                }
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                persistence.CompleteCommand();
            }
            return ret;
        }

        protected virtual bool BaseSave(bool force)
        {
            if ((this.EntityState == CodeFluent.Runtime.CodeFluentEntityState.ToBeDeleted))
            {
                this.Delete();
                return false;
            }
            CodeFluent.Runtime.CodeFluentEntityActionEventArgs evt = new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Saving, true);
            this.OnEntityAction(evt);
            if ((evt.Cancel == true))
            {
                return false;
            }
            CodeFluentPersistence.ThrowIfDeleted(this);
            this.Validate();
            if (((force == false) 
                        && (this.EntityState == CodeFluent.Runtime.CodeFluentEntityState.Unchanged)))
            {
                return false;
            }
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Sistemas_Funcionalidades_Master", "Editar");
            persistence.AddRawParameter("@Funcionalidad_Numero", Funcionalidad_Numero);
            persistence.AddRawParameter("@Modulo_Numero", Modulo_Numero);
            persistence.AddRawParameter("@Funcionalidad_Codigo", Funcionalidad_Codigo);
            persistence.AddRawParameter("@Funcionalidad_Nombre", Funcionalidad_Nombre);
            persistence.AddRawParameter("@Funcionalidad_Descripcion", Funcionalidad_Descripcion);
            persistence.AddRawParameter("@Funcionalidad_Explicacion", Funcionalidad_Explicacion);
            persistence.AddRawParameter("@Funcionalidad_Url", Funcionalidad_Url);
            persistence.AddRawParameter("@Funcionalidad_Permiso_Descripcion", Funcionalidad_Permiso_Descripcion);
            persistence.AddRawParameter("@Funcionalidad_Orden", Funcionalidad_Orden);
            persistence.AddRawParameter("@Registro_Estado", Registro_Estado);
            persistence.AddRawParameter("@Registro_Fecha", Registro_Fecha);
            persistence.AddRawParameter("@Registro_Usuario", Registro_Usuario);
            System.Data.IDataReader reader = null;
            try
            {
                reader = persistence.ExecuteReader();
                if ((reader.Read() == true))
                {
                    this.ReadRecordOnSave(reader);
                }
                CodeFluentPersistence.NextResults(reader);
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                persistence.CompleteCommand();
            }
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Saved, false, false));
            this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
            return true;
        }
        
        public virtual bool Save()
        {
            bool localSave = this.BaseSave(false);
            return localSave;
        }
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public static bool Save(OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master sistemasFuncionalidadesMaster)
        {
            if ((sistemasFuncionalidadesMaster == null))
            {
                return false;
            }
            bool ret = sistemasFuncionalidadesMaster.Save();
            return ret;
        }

        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public static bool Insert(OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master sistemasFuncionalidadesMaster)
        {
            bool ret = OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master.Save(sistemasFuncionalidadesMaster);
            return ret;
        }

        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public static bool Delete(OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master sistemasFuncionalidadesMaster)
        {
            if ((sistemasFuncionalidadesMaster == null))
            {
                return false;
            }
            bool ret = sistemasFuncionalidadesMaster.Delete();
            return ret;
        }

        public virtual bool Delete()
        {
            bool ret = false;
            CodeFluent.Runtime.CodeFluentEntityActionEventArgs evt = new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Deleting, true);
            this.OnEntityAction(evt);
            if ((evt.Cancel == true))
            {
                return ret;
            }
            if ((this.EntityState == CodeFluent.Runtime.CodeFluentEntityState.Deleted))
            {
                return ret;
            }
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Sistemas_Funcionalidades_Master", "Borrar");
            persistence.AddRawParameter("@Funcionalidad_Numero", this.Funcionalidad_Numero);
            persistence.ExecuteNonQuery();
            this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted;
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Deleted, false, false));
            ret = true;
            return ret;
        }

        public string Trace()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            System.IO.StringWriter stringWriter = new System.IO.StringWriter(stringBuilder, System.Globalization.CultureInfo.CurrentCulture);
            System.CodeDom.Compiler.IndentedTextWriter writer = new System.CodeDom.Compiler.IndentedTextWriter(stringWriter);
            this.BaseTrace(writer);
            writer.Flush();
            ((System.IDisposable)(writer)).Dispose();
            ((System.IDisposable)(stringWriter)).Dispose();
            string sr = stringBuilder.ToString();
            return sr;
        }

        void CodeFluent.Runtime.ICodeFluentObject.Trace(System.CodeDom.Compiler.IndentedTextWriter writer)
        {
            this.BaseTrace(writer);
        }

        protected virtual void BaseTrace(System.CodeDom.Compiler.IndentedTextWriter writer)
        {
            writer.Write("[");
            writer.Write("Funcionalidad_Codigo=");
            writer.Write(this.Funcionalidad_Codigo);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Funcionalidad_Descripcion=");
            writer.Write(this.Funcionalidad_Descripcion);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Funcionalidad_Explicacion=");
            writer.Write(this.Funcionalidad_Explicacion);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Funcionalidad_Nombre=");
            writer.Write(this.Funcionalidad_Nombre);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Funcionalidad_Numero=");
            writer.Write(this.Funcionalidad_Numero);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Funcionalidad_Orden=");
            writer.Write(this.Funcionalidad_Orden);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Funcionalidad_Permiso_Descripcion=");
            writer.Write(this.Funcionalidad_Permiso_Descripcion);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Funcionalidad_Url=");
            writer.Write(this.Funcionalidad_Url);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Modulo_Numero=");
            writer.Write(this.Modulo_Numero);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Registro_Estado=");
            writer.Write(this.Registro_Estado);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Registro_Fecha=");
            writer.Write(this.Registro_Fecha);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Registro_Usuario=");
            writer.Write(this.Registro_Usuario);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write(" SistemasFuncionalidadesAccionesTrans=");
            if ((this._sistemas_Funcionalidades_Acciones_Trans != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._sistemas_Funcionalidades_Acciones_Trans)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write(" SistemasModulosMaster=");
            if ((this._sistemas_Modulos_Master != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._sistemas_Modulos_Master)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write(", EntityState=");
            writer.Write(this.EntityState);
            writer.Write("]");
        }

        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master LoadByEntityKey(string key)
        {
            if ((key == string.Empty))
            {
                return null;
            }
            OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master sistemasFuncionalidadesMaster;
            System.Type[] types = new System.Type[] {
                    typeof(int)                    };
            object[] defaultValues = new object[] {
                    -1                    };
            object[] v = CodeFluentPersistence.ParseEntityKey(key, types, defaultValues);
                    int var0;            var0 = ((int)(v[0]));
            sistemasFuncionalidadesMaster = OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master.Load( var0);
            return sistemasFuncionalidadesMaster;
        }

        public  OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master Clone(bool deep)
        {
             OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master  sistemasFuncionalidadesMaster = new  OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master();
            this.CopyTo(sistemasFuncionalidadesMaster , deep);
            return sistemasFuncionalidadesMaster ;
        }

        public OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master Clone()
        {
            OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master localClone = this.Clone(true);
            return localClone;
        }

        object System.ICloneable.Clone()
        {
            object localClone = this.Clone();
            return localClone;
        }

        public virtual void CopyFrom(System.Collections.IDictionary dict, bool deep)
        {
            if ((dict == null))
            {
                throw new System.ArgumentNullException("dict");
            }
            if ((dict.Contains("Funcionalidad_Codigo") == true))
            {
                this.Funcionalidad_Codigo = ((string)(ConvertUtilities.ChangeType(dict["Funcionalidad_Codigo"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Funcionalidad_Descripcion") == true))
            {
                this.Funcionalidad_Descripcion = ((string)(ConvertUtilities.ChangeType(dict["Funcionalidad_Descripcion"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Funcionalidad_Explicacion") == true))
            {
                this.Funcionalidad_Explicacion = ((string)(ConvertUtilities.ChangeType(dict["Funcionalidad_Explicacion"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Funcionalidad_Nombre") == true))
            {
                this.Funcionalidad_Nombre = ((string)(ConvertUtilities.ChangeType(dict["Funcionalidad_Nombre"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Funcionalidad_Numero") == true))
            {
                this.Funcionalidad_Numero = ((int)(ConvertUtilities.ChangeType(dict["Funcionalidad_Numero"], typeof(int), -1)));
            }
            if ((dict.Contains("Funcionalidad_Orden") == true))
            {
                this.Funcionalidad_Orden = ((int)(ConvertUtilities.ChangeType(dict["Funcionalidad_Orden"], typeof(int), -1)));
            }
            if ((dict.Contains("Funcionalidad_Permiso_Descripcion") == true))
            {
                this.Funcionalidad_Permiso_Descripcion = ((string)(ConvertUtilities.ChangeType(dict["Funcionalidad_Permiso_Descripcion"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Funcionalidad_Url") == true))
            {
                this.Funcionalidad_Url = ((string)(ConvertUtilities.ChangeType(dict["Funcionalidad_Url"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Modulo_Numero") == true))
            {
                this.Modulo_Numero = ((int)(ConvertUtilities.ChangeType(dict["Modulo_Numero"], typeof(int), -1)));
            }
            if ((dict.Contains("Registro_Estado") == true))
            {
                this.Registro_Estado = ((string)(ConvertUtilities.ChangeType(dict["Registro_Estado"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Registro_Fecha") == true))
            {
                this.Registro_Fecha = ((DateTime)(ConvertUtilities.ChangeType(dict["Registro_Fecha"], typeof(DateTime), System.DateTime.MinValue)));
            }
            if ((dict.Contains("Registro_Usuario") == true))
            {
                this.Registro_Usuario = ((string)(ConvertUtilities.ChangeType(dict["Registro_Usuario"], typeof(string), string.Empty)));
            }
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.CopyFrom, false, dict));
        }

        public virtual void CopyTo( OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master  sistemasFuncionalidadesMaster, bool deep)
        {
            if ((sistemasFuncionalidadesMaster == null))
            {
                throw new System.ArgumentNullException("sistemasFuncionalidadesMaster");
            }
            sistemasFuncionalidadesMaster.Funcionalidad_Codigo = this.Funcionalidad_Codigo;
            sistemasFuncionalidadesMaster.Funcionalidad_Descripcion = this.Funcionalidad_Descripcion;
            sistemasFuncionalidadesMaster.Funcionalidad_Explicacion = this.Funcionalidad_Explicacion;
            sistemasFuncionalidadesMaster.Funcionalidad_Nombre = this.Funcionalidad_Nombre;
            sistemasFuncionalidadesMaster.Funcionalidad_Numero = this.Funcionalidad_Numero;
            sistemasFuncionalidadesMaster.Funcionalidad_Orden = this.Funcionalidad_Orden;
            sistemasFuncionalidadesMaster.Funcionalidad_Permiso_Descripcion = this.Funcionalidad_Permiso_Descripcion;
            sistemasFuncionalidadesMaster.Funcionalidad_Url = this.Funcionalidad_Url;
            sistemasFuncionalidadesMaster.Modulo_Numero = this.Modulo_Numero;
            sistemasFuncionalidadesMaster.Registro_Estado = this.Registro_Estado;
            sistemasFuncionalidadesMaster.Registro_Fecha = this.Registro_Fecha;
            sistemasFuncionalidadesMaster.Registro_Usuario = this.Registro_Usuario;
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.CopyTo, false, sistemasFuncionalidadesMaster));
        }


// Metodos Definidos en el Modelo y las propiedades CollectionKey
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public static OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master LoadByModulo_Numero(int modulo_Numero)
        {
            if ((modulo_Numero == default(int)))
            {
                return null;
            }
            OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master sistemasFuncionalidadesMaster = new OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master();
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Sistemas_Funcionalidades_Master", "ModuloNumero");
            persistence.AddRawParameter("@Modulo_Numero", modulo_Numero);
            System.Data.IDataReader reader = null;
            try
            {
                reader = persistence.ExecuteReader();
                if ((reader.Read() == true))
                {
                    sistemasFuncionalidadesMaster.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.Default);
                    sistemasFuncionalidadesMaster.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
                    return sistemasFuncionalidadesMaster;
                }
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                persistence.CompleteCommand();
            }
            return null;
        }
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public static OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master LoadByFuncionalidad_Codigo(string funcionalidad_Codigo)
        {
            if ((funcionalidad_Codigo == default(string)))
            {
                return null;
            }
            OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master sistemasFuncionalidadesMaster = new OSIS.PEPPAM.BOM.Sistemas_Funcionalidades_Master();
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Sistemas_Funcionalidades_Master", "FuncionalidadCodigo");
            persistence.AddRawParameter("@Funcionalidad_Codigo", funcionalidad_Codigo);
            System.Data.IDataReader reader = null;
            try
            {
                reader = persistence.ExecuteReader();
                if ((reader.Read() == true))
                {
                    sistemasFuncionalidadesMaster.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.Default);
                    sistemasFuncionalidadesMaster.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
                    return sistemasFuncionalidadesMaster;
                }
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                persistence.CompleteCommand();
            }
            return null;
        }
		#region Static SQL Methods

		internal static string GetFieldAliasFromFieldNameSqlMapping(string alias)
		{
			alias = alias.Replace("[", string.Empty).Replace("]", string.Empty);
			switch (alias.ToLower())
			{
				case "funcionalidad_codigo": return "funcionalidad_codigo";
				case "funcionalidad_descripcion": return "funcionalidad_descripcion";
				case "funcionalidad_explicacion": return "funcionalidad_explicacion";
				case "funcionalidad_nombre": return "funcionalidad_nombre";
				case "funcionalidad_numero": return "funcionalidad_numero";
				case "funcionalidad_orden": return "funcionalidad_orden";
				case "funcionalidad_permiso_descripcion": return "funcionalidad_permiso_descripcion";
				case "funcionalidad_url": return "funcionalidad_url";
				case "modulo_numero": return "modulo_numero";
				case "registro_estado": return "registro_estado";
				case "registro_fecha": return "registro_fecha";
				case "registro_usuario": return "registro_usuario";
				default: throw new Exception("The select clause is not valid.");
			}
		}

		internal static string GetTableFromFieldAliasSqlMapping(string alias)
		{
			switch (alias.ToLower())
			{
				case "funcionalidad_codigo": return "Sistemas_Funcionalidades_Master";
				case "funcionalidad_descripcion": return "Sistemas_Funcionalidades_Master";
				case "funcionalidad_explicacion": return "Sistemas_Funcionalidades_Master";
				case "funcionalidad_nombre": return "Sistemas_Funcionalidades_Master";
				case "funcionalidad_numero": return "Sistemas_Funcionalidades_Master";
				case "funcionalidad_orden": return "Sistemas_Funcionalidades_Master";
				case "funcionalidad_permiso_descripcion": return "Sistemas_Funcionalidades_Master";
				case "funcionalidad_url": return "Sistemas_Funcionalidades_Master";
				case "modulo_numero": return "Sistemas_Funcionalidades_Master";
				case "registro_estado": return "Sistemas_Funcionalidades_Master";
				case "registro_fecha": return "Sistemas_Funcionalidades_Master";
				case "registro_usuario": return "Sistemas_Funcionalidades_Master";
				default: throw new Exception("The select clause is not valid.");
			}
		}

		internal static string GetTableFromFieldNameSqlMapping(string field)
		{
			switch (field.ToLower())
			{
				case "funcionalidad_codigo": return "Sistemas_Funcionalidades_Master";
				case "funcionalidad_descripcion": return "Sistemas_Funcionalidades_Master";
				case "funcionalidad_explicacion": return "Sistemas_Funcionalidades_Master";
				case "funcionalidad_nombre": return "Sistemas_Funcionalidades_Master";
				case "funcionalidad_numero": return "Sistemas_Funcionalidades_Master";
				case "funcionalidad_orden": return "Sistemas_Funcionalidades_Master";
				case "funcionalidad_permiso_descripcion": return "Sistemas_Funcionalidades_Master";
				case "funcionalidad_url": return "Sistemas_Funcionalidades_Master";
				case "modulo_numero": return "Sistemas_Funcionalidades_Master";
				case "registro_estado": return "Sistemas_Funcionalidades_Master";
				case "registro_fecha": return "Sistemas_Funcionalidades_Master";
				case "registro_usuario": return "Sistemas_Funcionalidades_Master";
				default: throw new Exception("The select clause is not valid.");
			}
		}

		internal static string GetRemappedLinqSql(string sql, string parentAlias, LinqSQLFromClauseCollection childTables)
		{
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[funcionalidad_codigo\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Sistemas_Funcionalidades_Master") + "].[funcionalidad_codigo]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[funcionalidad_descripcion\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Sistemas_Funcionalidades_Master") + "].[funcionalidad_descripcion]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[funcionalidad_explicacion\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Sistemas_Funcionalidades_Master") + "].[funcionalidad_explicacion]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[funcionalidad_nombre\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Sistemas_Funcionalidades_Master") + "].[funcionalidad_nombre]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[funcionalidad_numero\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Sistemas_Funcionalidades_Master") + "].[funcionalidad_numero]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[funcionalidad_orden\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Sistemas_Funcionalidades_Master") + "].[funcionalidad_orden]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[funcionalidad_permiso_descripcion\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Sistemas_Funcionalidades_Master") + "].[funcionalidad_permiso_descripcion]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[funcionalidad_url\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Sistemas_Funcionalidades_Master") + "].[funcionalidad_url]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[modulo_numero\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Sistemas_Funcionalidades_Master") + "].[modulo_numero]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[registro_estado\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Sistemas_Funcionalidades_Master") + "].[registro_estado]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[registro_fecha\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Sistemas_Funcionalidades_Master") + "].[registro_fecha]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[registro_usuario\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Sistemas_Funcionalidades_Master") + "].[registro_usuario]", RegexOptions.IgnoreCase);
			return sql;
		}

		#endregion


	}

}

