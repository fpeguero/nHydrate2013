//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 6/19/2014 1:29:30 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// <auto-generated>
//     Fecha :6/19/2014 1:29:30 PM
//     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace OSIS.PEPPAM.BOM
{
    using System;
    using CodeFluent.Runtime;
    using CodeFluent.Runtime.Utilities;
    using System.Collections.Generic;
    
    
    [System.SerializableAttribute()]
    [System.ComponentModel.DataObjectAttribute()]
    [System.Diagnostics.DebuggerDisplayAttribute("Count={Count}")]
    [System.ComponentModel.TypeConverterAttribute(typeof(CodeFluent.Runtime.Design.CollectionTypeConverter))]
    public partial class Documentos_Objetivos_TransCollection : System.Collections.IList, CodeFluent.Runtime.ICodeFluentSet, System.Collections.Generic.IList<OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans>, System.ComponentModel.IRaiseItemChangedEvents, System.ICloneable, System.ComponentModel.INotifyPropertyChanged, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.IBindingList, System.ComponentModel.ICancelAddNew
    {
        
        private bool _raisePropertyChangedEvents = true;
        
        private bool _raiseCollectionChangedEvents = true;
        
        [System.NonSerializedAttribute()]
        private System.Collections.Generic.List<OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans> _baseList = new System.Collections.Generic.List<OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans>();
        
        [System.NonSerializedAttribute()]
        private System.Collections.Hashtable _relations = new System.Collections.Hashtable();
        
        private int _maxCount = 2147483647;
        private int _totalRowCount = 0;
        
        [System.NonSerializedAttribute()]
        private OSIS.PEPPAM.BOM.Documentos_Master _documentos_Master;
        [System.NonSerializedAttribute()]
        private OSIS.PEPPAM.BOM.Roles_Cata _roles_Cata;
        [System.NonSerializedAttribute()]
        private OSIS.PEPPAM.BOM.Rutas_Master _rutas_Master;
        [System.NonSerializedAttribute()]
        private OSIS.PEPPAM.BOM.Zonas_Master _zonas_Master;
        [System.NonSerializedAttribute()]
        private int _addNewPos = -1;
        
        [System.NonSerializedAttribute()]
        private CodeFluent.Runtime.Utilities.BindingListManager<OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans> _blm852358831;
        
        private bool _raiseListChangedEvents = true;
        
        private System.Collections.Specialized.NotifyCollectionChangedEventHandler _h2943838991;

        event System.Collections.Specialized.NotifyCollectionChangedEventHandler System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged{add{_h2943838991+=value;}remove{_h2943838991-=value;}}
        
        public Documentos_Objetivos_TransCollection()        {
            this._blm852358831 = new CodeFluent.Runtime.Utilities.BindingListManager<OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans>(this);
        }
        public Documentos_Objetivos_TransCollection(        OSIS.PEPPAM.BOM.Documentos_Master documentos_Master,        OSIS.PEPPAM.BOM.Roles_Cata roles_Cata,        OSIS.PEPPAM.BOM.Rutas_Master rutas_Master,        OSIS.PEPPAM.BOM.Zonas_Master zonas_Master)
        {
            this._blm852358831 = new CodeFluent.Runtime.Utilities.BindingListManager<OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans>(this);
            this._documentos_Master = documentos_Master;
            this._roles_Cata = roles_Cata;
            this._rutas_Master = rutas_Master;
            this._zonas_Master = zonas_Master;
        }
        
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual bool RaisePropertyChangedEvents
        {
            get
            {
                return this._raisePropertyChangedEvents;
            }
            set
            {
                this._raisePropertyChangedEvents = value;
            }
        }
        
        public virtual bool RaiseCollectionChangedEvents
        {
            get
            {
                return this._raiseCollectionChangedEvents;
            }
            set
            {
                this._raiseCollectionChangedEvents = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        protected System.Collections.Generic.List<OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans> BaseList
        {
            get
            {
                return this._baseList;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        System.Collections.IDictionary CodeFluent.Runtime.ICodeFluentSet.Relations
        {
            get
            {
                return this._relations;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public virtual int MaxCount
        {
            get
            {
                return this._maxCount;
            }
            set
            {
                this._maxCount = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
        public virtual int TotalRowCount
        {
            get
            {
                return this._totalRowCount;
            }
            set
            {
                this._totalRowCount = value;
            }
        }
        
[System.Xml.Serialization.XmlIgnoreAttribute()]
        public OSIS.PEPPAM.BOM.Documentos_Master DocumentosMaster
        {
            get { return this._documentos_Master; }
        }

[System.Xml.Serialization.XmlIgnoreAttribute()]
        public OSIS.PEPPAM.BOM.Roles_Cata RolesCata
        {
            get { return this._roles_Cata; }
        }

[System.Xml.Serialization.XmlIgnoreAttribute()]
        public OSIS.PEPPAM.BOM.Rutas_Master RutasMaster
        {
            get { return this._rutas_Master; }
        }

[System.Xml.Serialization.XmlIgnoreAttribute()]
        public OSIS.PEPPAM.BOM.Zonas_Master ZonasMaster
        {
            get { return this._zonas_Master; }
        }

        public OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans this[int index]
        {
            get
            {
                return ((OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans)(this.BaseList[index]));
            }
            set
            {
                this.BaseList[index] = value;
            }
        }
        
        object System.Collections.IList.this[int index]
        {
            get
            {
                object i = this.BaseList[index];
                return i;
            }
            set
            {
                this.BaseList[index] = ((OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans)(value));
            }
        }
        
        public virtual int Count
        {
            get
            {
                int v = ((System.Collections.IList)(this.BaseList)).Count;
                return v;
            }
        }
        
        public virtual bool IsSynchronized
        {
            get
            {
                bool v = ((System.Collections.IList)(this.BaseList)).IsSynchronized;
                return v;
            }
        }
        
        public virtual object SyncRoot
        {
            get
            {
                object v = ((System.Collections.IList)(this.BaseList)).SyncRoot;
                return v;
            }
        }
        
        public virtual bool IsFixedSize
        {
            get
            {
                bool v = ((System.Collections.IList)(this.BaseList)).IsFixedSize;
                return v;
            }
        }
        
        public virtual bool IsReadOnly
        {
            get
            {
                bool v = ((System.Collections.IList)(this.BaseList)).IsReadOnly;
                return v;
            }
        }
        
        public virtual bool RaiseListChangedEvents
        {
            get
            {
                return this._raiseListChangedEvents;
            }
            set
            {
                this._raiseListChangedEvents = value;
            }
        }
        
        bool System.ComponentModel.IBindingList.AllowEdit
        {
            get
            {
                return this._blm852358831.AllowEdit;
            }
        }
        
        bool System.ComponentModel.IBindingList.AllowNew
        {
            get
            {
                return this._blm852358831.AllowNew;
            }
        }
        
        bool System.ComponentModel.IBindingList.AllowRemove
        {
            get
            {
                return this._blm852358831.AllowRemove;
            }
        }
        
        bool System.ComponentModel.IBindingList.IsSorted
        {
            get
            {
                return this._blm852358831.IsSorted;
            }
        }
        
        System.ComponentModel.ListSortDirection System.ComponentModel.IBindingList.SortDirection
        {
            get
            {
                return this._blm852358831.SortDirection;
            }
        }
        
        System.ComponentModel.PropertyDescriptor System.ComponentModel.IBindingList.SortProperty
        {
            get
            {
                return this._blm852358831.SortProperty;
            }
        }
        
        bool System.ComponentModel.IBindingList.SupportsChangeNotification
        {
            get
            {
                return true;
            }
        }
        
        bool System.ComponentModel.IBindingList.SupportsSearching
        {
            get
            {
                return this._blm852358831.SupportsSearching;
            }
        }
        
        bool System.ComponentModel.IBindingList.SupportsSorting
        {
            get
            {
                return this._blm852358831.SupportsSorting;
            }
        }
        
        bool System.ComponentModel.IRaiseItemChangedEvents.RaisesItemChangedEvents
        {
            get
            {
                return this.RaiseListChangedEvents;
            }
        }
        
        [field:System.NonSerializedAttribute()]
        public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
        
        [field:System.NonSerializedAttribute()]
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        [field:System.NonSerializedAttribute()]
        public event System.ComponentModel.AddingNewEventHandler AddingNew;
        
        [field:System.NonSerializedAttribute()]
        public event System.ComponentModel.ListChangedEventHandler ListChanged;
        
        protected virtual void OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs e)
        {
            if ((this.RaisePropertyChangedEvents == false))
            {
                return;
            }
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, e);
            }
        }
        
        protected virtual void OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs e)
        {
            if ((this.RaiseCollectionChangedEvents == false))
            {
                return;
            }
            if ((this.CollectionChanged != null))
            {
                this.CollectionChanged(this, e);
            }
            CodeFluent.Runtime.ServiceModel.CollectionChangeNotifier.Notify(this, e, this._h2943838991);
            this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Count"));
            this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Item[]"));
        }
        
        protected virtual void Relate(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans item, CodeFluent.Runtime.CodeFluentRelationType relationType)
        {
            ((CodeFluent.Runtime.ICodeFluentSet)(this)).Relations[item] = relationType;
        }
        
        public int Add(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans)
        {
            int localAdd = this.BaseList.Count;
            this.BaseAdd(documentosObjetivosTrans);
            return localAdd;
        }
        
        protected virtual int BaseAdd(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans)
        {
            if ((documentosObjetivosTrans == null))
            {
                throw new System.ArgumentNullException("documentosObjetivosTrans");
            }
            if (
            (documentosObjetivosTrans.Documento_Secuencia == -1)
||            (documentosObjetivosTrans.Zona_Secuencia == -1)
||            (documentosObjetivosTrans.Ruta_Secuencia == -1)
||            (documentosObjetivosTrans.Role_Numero == -1)
                  )            {
                CodeFluent.Runtime.CodeFluentRuntimeException.Throw("invalidEntityKey", "Documento_Secuencia,Zona_Secuencia,Ruta_Secuencia,Role_Numero", "documentosObjetivosTrans", "OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans");
            }
 if ((this._documentos_Master != null))
            {
                documentosObjetivosTrans.DocumentosMaster = this._documentos_Master;
            }
 if ((this._roles_Cata != null))
            {
                documentosObjetivosTrans.RolesCata = this._roles_Cata;
            }
 if ((this._rutas_Master != null))
            {
                documentosObjetivosTrans.RutasMaster = this._rutas_Master;
            }
 if ((this._zonas_Master != null))
            {
                documentosObjetivosTrans.ZonasMaster = this._zonas_Master;
            }
            int localAdd = this.BaseList.Count;
            this.BaseList.Add(documentosObjetivosTrans);
            this.OnCollectionChanged(new CodeFluent.Runtime.Utilities.IndexedCollectionChangeEventArgs(System.ComponentModel.CollectionChangeAction.Add, documentosObjetivosTrans, localAdd));
            this.OnListChanged(new System.ComponentModel.ListChangedEventArgs(System.ComponentModel.ListChangedType.ItemAdded, localAdd));
            return localAdd;
        }
        
        int System.Collections.IList.Add(object value)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans = null;
            try
            {
                documentosObjetivosTrans = ((OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans)(value));
            }
            catch (System.InvalidCastException )
            {
                string key = null;
                try
                {
                    key = ((string)(value));
                    int count = this.Count;
                    if ((this.AddByEntityKey(key) != null))
                    {
                        return 1;
                    }
                    return 0;
                }
                catch (System.InvalidCastException )
                {
                }
                if ((key == null))
                {
                    throw new System.ArgumentException("value");
                }
            }
            if ((documentosObjetivosTrans == null))
            {
                throw new System.ArgumentException("value");
            }
            int localAdd = this.Add(documentosObjetivosTrans);
            return localAdd;
        }
        
        void System.Collections.Generic.ICollection<OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans>.Add(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans)
        {
            this.BaseAdd(documentosObjetivosTrans);
        }
        
        public virtual OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans AddByEntityKey(string key)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans = OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans.LoadByEntityKey(key);
            if (((documentosObjetivosTrans != null) 
                        && (this.Contains(documentosObjetivosTrans) == false)))
            {
                this.Add(documentosObjetivosTrans);
            }
            return documentosObjetivosTrans;
        }
        
        public void Sort()
        {
            this.Sort(null);
        }
        
        public virtual void Sort(System.Collections.Generic.IComparer<OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans> comparer)
        {
            this.BaseList.Sort(comparer);
        }
        
        public void CopyTo(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans[] array, int index)
        {
            this.BaseCopyTo(array, index);
        }
        
        protected virtual void BaseCopyTo(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans[] array, int index)
        {
            this.BaseList.CopyTo(array, index);
        }
        
        void System.Collections.ICollection.CopyTo(System.Array array, int index)
        {
            CodeFluent.Runtime.Utilities.ConvertUtilities.CopyTo(this, array, index);
        }
        
        public bool Contains(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans)
        {
            bool localContains = this.BaseContains(documentosObjetivosTrans);
            return localContains;
        }
        
        protected virtual bool BaseContains(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans)
        {
            if ((documentosObjetivosTrans == null))
            {
                return false;
            }
            bool localContains = this.BaseList.Contains(documentosObjetivosTrans);
            return localContains;
        }
        
        bool System.Collections.IList.Contains(object value)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans;
			documentosObjetivosTrans = value as OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans;
            return this.Contains(documentosObjetivosTrans);
        }
        
        public int IndexOf(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans)
        {
            int localIndexOf = this.BaseIndexOf(documentosObjetivosTrans);
            return localIndexOf;
        }
        
        protected virtual int BaseIndexOf(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans)
        {
            if ((documentosObjetivosTrans == null))
            {
                return -1;
            }
            int localIndexOf = this.BaseList.IndexOf(documentosObjetivosTrans);
            return localIndexOf;
        }
        
        int System.Collections.IList.IndexOf(object value)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans;
			documentosObjetivosTrans = value as OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans;
            return this.IndexOf(documentosObjetivosTrans);
        }
        
        public void Insert(int index, OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans)
        {
            this.BaseInsert(index, documentosObjetivosTrans);
        }
        
        protected virtual void BaseInsert(int index, OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans)
        {
            if ((documentosObjetivosTrans == null))
            {
                throw new System.ArgumentNullException("documentosObjetivosTrans");
            }
            this.BaseList.Insert(index, documentosObjetivosTrans);
            this.OnCollectionChanged(new CodeFluent.Runtime.Utilities.IndexedCollectionChangeEventArgs(System.ComponentModel.CollectionChangeAction.Add, documentosObjetivosTrans, index));
            this.OnListChanged(new System.ComponentModel.ListChangedEventArgs(System.ComponentModel.ListChangedType.ItemAdded, index));
        }
        
        void System.Collections.IList.Insert(int index, object value)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans;
			documentosObjetivosTrans = value as OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans;
            this.Insert(index, documentosObjetivosTrans);
        }
        
        public virtual void Clear()
        {
            int index;
            int count = this.Count;
            for (index = 0; (index < count); index = (index + 1))
            {
                OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans = this[0];
                this.BaseRemove(documentosObjetivosTrans);
            }
            this.OnCollectionChanged(new CodeFluent.Runtime.Utilities.IndexedCollectionChangeEventArgs(System.ComponentModel.CollectionChangeAction.Refresh, null));
            this.OnListChanged(new System.ComponentModel.ListChangedEventArgs(System.ComponentModel.ListChangedType.Reset, -1));
        }
        
        public bool Remove(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans)
        {
            return this.BaseRemove(documentosObjetivosTrans);
        }
        
        protected virtual bool BaseRemove(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans)
        {
            if ((documentosObjetivosTrans == null))
            {
                throw new System.ArgumentNullException("documentosObjetivosTrans");
            }
            int index = this.IndexOf(documentosObjetivosTrans);
if ((this._documentos_Master != null))
            {
                documentosObjetivosTrans.DocumentosMaster = null;
            }
if ((this._roles_Cata != null))
            {
                documentosObjetivosTrans.RolesCata = null;
            }
if ((this._rutas_Master != null))
            {
                documentosObjetivosTrans.RutasMaster = null;
            }
if ((this._zonas_Master != null))
            {
                documentosObjetivosTrans.ZonasMaster = null;
            }
            this.OnListChanged(new System.ComponentModel.ListChangedEventArgs(((System.ComponentModel.ListChangedType)(CodeFluent.Runtime.Utilities.SortableBindingList<OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans>.ListChangedTypeDeleting)), index));
            bool ret;
            ret = this.BaseList.Remove(documentosObjetivosTrans);
            this.OnCollectionChanged(new CodeFluent.Runtime.Utilities.IndexedCollectionChangeEventArgs(System.ComponentModel.CollectionChangeAction.Remove, documentosObjetivosTrans, index));
            this.OnListChanged(new System.ComponentModel.ListChangedEventArgs(System.ComponentModel.ListChangedType.ItemDeleted, index));
            return ret;
        }
        
        void System.Collections.IList.Remove(object value)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans;
			documentosObjetivosTrans = value as OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans;
            this.Remove(documentosObjetivosTrans);
        }
        
        public virtual void RemoveAt(int index)
        {
            this.OnListChanged(new System.ComponentModel.ListChangedEventArgs(((System.ComponentModel.ListChangedType)(CodeFluent.Runtime.Utilities.SortableBindingList<OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans>.ListChangedTypeDeleting)), index));
            OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans = this.BaseList[index];
if ((this._documentos_Master != null))
            {
                documentosObjetivosTrans.DocumentosMaster = null;
            }
if ((this._roles_Cata != null))
            {
                documentosObjetivosTrans.RolesCata = null;
            }
if ((this._rutas_Master != null))
            {
                documentosObjetivosTrans.RutasMaster = null;
            }
if ((this._zonas_Master != null))
            {
                documentosObjetivosTrans.ZonasMaster = null;
            }
            this.BaseList.RemoveAt(index);
            this.OnCollectionChanged(new CodeFluent.Runtime.Utilities.IndexedCollectionChangeEventArgs(System.ComponentModel.CollectionChangeAction.Remove, documentosObjetivosTrans, index));
            this.OnListChanged(new System.ComponentModel.ListChangedEventArgs(System.ComponentModel.ListChangedType.ItemDeleted, index));
        }
        
        public virtual System.Collections.Generic.IEnumerator<OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans> GetEnumerator()
        {
            System.Collections.Generic.IEnumerator<OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans> e = this.BaseList.GetEnumerator();
            return e;
        }
        
        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return this.BaseList.GetEnumerator();
        }
        
        public virtual void SaveAll()
        {
            int index;
            for (index = (this.Count - 1); (index >= 0); index = (index - 1))
            {
                OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans = this[index];
                documentosObjetivosTrans.Save();
                if ((documentosObjetivosTrans.EntityState == CodeFluent.Runtime.CodeFluentEntityState.Deleted))
                {
                    this.Remove(documentosObjetivosTrans);
                }
            }
        }
        
        private void LoadAll(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, System.Data.IDataReader reader)
        {
            if ((reader == null))
            {
                throw new System.ArgumentNullException("reader");
            }
            if ((pageIndex < 0))
            {
                pageIndex = 0;
            }
            if ((pageSize < 0))
            {
                if ((pageOptions != null))
                {
                    pageSize = pageOptions.DefaultPageSize;
                }
                else
                {
                    pageSize = int.MaxValue;
                }
            }
this._documentos_Master = null;
this._roles_Cata = null;
this._rutas_Master = null;
this._zonas_Master = null;
            this.BaseList.Clear();
            int count = 0;
            int readCount = 0;
            bool readerRead;
            for (readerRead = reader.Read(); ((readerRead == true) 
                        && ((count < this.MaxCount) 
                        && (count < pageSize))); readerRead = reader.Read())
            {
                readCount = (readCount + 1);
                if ((CodeFluent.Runtime.CodeFluentPersistence.CanAddEntity(pageIndex, pageSize, pageOptions, readCount) == true))
                {
                    OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans = new OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans();
                    ((CodeFluent.Runtime.ICodeFluentEntity)(documentosObjetivosTrans)).ReadRecord(reader);
                    if (true)
                    {
                        this.BaseAdd(documentosObjetivosTrans);
                        count = (count + 1);
                    }
                    documentosObjetivosTrans.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
                }
            }
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection PageLoadAll(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions)
        {
            if ((pageIndex < 0))
            {
                pageIndex = 0;
            }
            if ((pageSize < 0))
            {
                if ((pageOptions != null))
                {
                    pageSize = pageOptions.DefaultPageSize;
                }
                else
                {
                    pageSize = int.MaxValue;
                }
            }
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = new OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection();
            System.Data.IDataReader reader = null;
            try
            {
                reader = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageDataLoadAll(pageOptions);
                if ((reader == null))
                {
                    return ret;
                }
                ret.LoadAll(pageIndex, pageSize, pageOptions, reader);
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                CodeFluent.Runtime.CodeFluentPersistence.CompleteCommand(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName);
            }
            return ret;
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection LoadAll()
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadAll(int.MinValue, int.MaxValue, null);
            return ret;
        }
        
        public static System.Data.IDataReader PageDataLoadAll(CodeFluent.Runtime.PageOptions pageOptions)
        {
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Documentos_Objetivos_Trans", "LoadAll");
            if ((pageOptions != null))
            {
                System.Collections.IEnumerator enumerator = pageOptions.OrderByArguments.GetEnumerator();
                bool b;
                int index = 0;
                for (b = enumerator.MoveNext(); b; b = enumerator.MoveNext())
                {
                    CodeFluent.Runtime.OrderByArgument argument = ((CodeFluent.Runtime.OrderByArgument)(enumerator.Current));
                    persistence.AddParameter(string.Format("@_orderBy{0}", index), argument.Name);
                    persistence.AddParameter(string.Format("@_orderByDirection{0}", index), ((int)(argument.Direction)));
                    index = (index + 1);
                }
            }
            System.Data.IDataReader reader = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence.ExecuteReader();
            return reader;
        }
        
        public static System.Data.IDataReader DataLoadAll()
        {
            System.Data.IDataReader reader = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageDataLoadAll(null);
            return reader;
        }
        
  private void LoadByDocumentosMaster(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, System.Data.IDataReader reader, OSIS.PEPPAM.BOM.Documentos_Master documentos_Master)
        {
            if ((reader == null))
            {
                throw new System.ArgumentNullException("reader");
            }
            if ((pageIndex < 0))
            {
                pageIndex = 0;
            }
            if ((pageSize < 0))
            {
                if ((pageOptions != null))
                {
                    pageSize = pageOptions.DefaultPageSize;
                }
                else
                {
                    pageSize = int.MaxValue;
                }
            }
            CodeFluent.Runtime.CodeFluentEntityState documentos_MasterState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
            if ((documentos_Master != null))
            {
                documentos_MasterState = documentos_Master.EntityState;
            }
            this._documentos_Master = documentos_Master;
            this._roles_Cata = null;
            this._rutas_Master = null;
            this._zonas_Master = null;
            this.BaseList.Clear();
            int count = 0;
            int readCount = 0;
            bool readerRead;
            for (readerRead = reader.Read(); ((readerRead == true) 
                        && ((count < this.MaxCount) 
                        && (count < pageSize))); readerRead = reader.Read())
            {
                readCount = (readCount + 1);
                if ((CodeFluent.Runtime.CodeFluentPersistence.CanAddEntity(0, pageSize, pageOptions, readCount) == true))
                {
                    OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans = new OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans();
                    ((CodeFluent.Runtime.ICodeFluentEntity)(documentosObjetivosTrans)).ReadRecord(reader);
                    if (true)
                    {
                        this.BaseAdd(documentosObjetivosTrans);
                        count = (count + 1);
                    }
                    documentosObjetivosTrans.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
                }
            }
            if ((documentos_Master != null))
            {
                documentos_Master.EntityState = documentos_MasterState;
            }
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection PageLoadByDocumentosMaster(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.BOM.Documentos_Master documentos_Master)
        {
            if ((pageIndex < 0))
            {
                pageIndex = 0;
            }
            if ((pageSize < 0))
            {
                if ((pageOptions != null))
                {
                    pageSize = pageOptions.DefaultPageSize;
                }
                else
                {
                    pageSize = int.MaxValue;
                }
            }
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = new OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection();
            System.Data.IDataReader reader = null;
            try
            {
                reader = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageDataLoadByDocumentosMaster(pageOptions, documentos_Master);
                if ((reader == null))
                {
                    return ret;
                }
                ret.LoadByDocumentosMaster(pageIndex, pageSize, pageOptions, reader, documentos_Master);
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                CodeFluent.Runtime.CodeFluentPersistence.CompleteCommand(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName);
            }
            return ret;
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection LoadByDocumentosMaster(OSIS.PEPPAM.BOM.Documentos_Master documentos_Master)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadByDocumentosMaster(int.MinValue, int.MaxValue, null, documentos_Master);
            return ret;
        }
        
        public static System.Data.IDataReader PageDataLoadByDocumentosMaster(CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.BOM.Documentos_Master documentos_Master)
        {
            if ((documentos_Master == null))
            {
                return null;
            }
            if ((documentos_Master.Documento_Secuencia == -1))
            {
                CodeFluent.Runtime.CodeFluentRuntimeException.Throw("invalidEntityKey", "Documento_Secuencia", "documentos_Master", "OSIS.PEPPAM.BOM.Documentos_Master");
            }
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Documentos_Objetivos_Trans", "DocumentosMaster");
            persistence.AddRawParameter("@Documento_Secuencia", documentos_Master.Documento_Secuencia);
            if ((pageOptions != null))
            {
                System.Collections.IEnumerator enumerator = pageOptions.OrderByArguments.GetEnumerator();
                bool b;
                int index = 0;
                for (b = enumerator.MoveNext(); b; b = enumerator.MoveNext())
                {
                    CodeFluent.Runtime.OrderByArgument argument = ((CodeFluent.Runtime.OrderByArgument)(enumerator.Current));
                    persistence.AddParameter(string.Format("@_orderBy{0}", index), argument.Name);
                    persistence.AddParameter(string.Format("@_orderByDirection{0}", index), ((int)(argument.Direction)));
                    index = (index + 1);
                }
            }
            System.Data.IDataReader reader = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence.ExecuteReader();
            return reader;
        }
        
        public static System.Data.IDataReader DataLoadByDocumentosMaster(OSIS.PEPPAM.BOM.Documentos_Master documentos_Master)
        {
            System.Data.IDataReader reader = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageDataLoadByDocumentosMaster(null, documentos_Master);
            return reader;
        }
 [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static Documentos_Objetivos_TransCollection PageLoadByDocumentosMaster(int pageIndex, int pageSize,int documento_Secuencia)
        {
            OSIS.PEPPAM.BOM.Documentos_Master documentos_Master = OSIS.PEPPAM.BOM.Documentos_Master.Load(documento_Secuencia);
            if ((documentos_Master == null))
            {
                return new Documentos_Objetivos_TransCollection();
            }
            return Documentos_Objetivos_TransCollection.PageLoadByDocumentosMaster(pageIndex, pageSize, null, documentos_Master);
        }
  private void LoadByRolesCata(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, System.Data.IDataReader reader, OSIS.PEPPAM.BOM.Roles_Cata roles_Cata)
        {
            if ((reader == null))
            {
                throw new System.ArgumentNullException("reader");
            }
            if ((pageIndex < 0))
            {
                pageIndex = 0;
            }
            if ((pageSize < 0))
            {
                if ((pageOptions != null))
                {
                    pageSize = pageOptions.DefaultPageSize;
                }
                else
                {
                    pageSize = int.MaxValue;
                }
            }
            CodeFluent.Runtime.CodeFluentEntityState roles_CataState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
            if ((roles_Cata != null))
            {
                roles_CataState = roles_Cata.EntityState;
            }
            this._roles_Cata = roles_Cata;
            this._documentos_Master = null;
            this._rutas_Master = null;
            this._zonas_Master = null;
            this.BaseList.Clear();
            int count = 0;
            int readCount = 0;
            bool readerRead;
            for (readerRead = reader.Read(); ((readerRead == true) 
                        && ((count < this.MaxCount) 
                        && (count < pageSize))); readerRead = reader.Read())
            {
                readCount = (readCount + 1);
                if ((CodeFluent.Runtime.CodeFluentPersistence.CanAddEntity(0, pageSize, pageOptions, readCount) == true))
                {
                    OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans = new OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans();
                    ((CodeFluent.Runtime.ICodeFluentEntity)(documentosObjetivosTrans)).ReadRecord(reader);
                    if (true)
                    {
                        this.BaseAdd(documentosObjetivosTrans);
                        count = (count + 1);
                    }
                    documentosObjetivosTrans.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
                }
            }
            if ((roles_Cata != null))
            {
                roles_Cata.EntityState = roles_CataState;
            }
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection PageLoadByRolesCata(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.BOM.Roles_Cata roles_Cata)
        {
            if ((pageIndex < 0))
            {
                pageIndex = 0;
            }
            if ((pageSize < 0))
            {
                if ((pageOptions != null))
                {
                    pageSize = pageOptions.DefaultPageSize;
                }
                else
                {
                    pageSize = int.MaxValue;
                }
            }
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = new OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection();
            System.Data.IDataReader reader = null;
            try
            {
                reader = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageDataLoadByRolesCata(pageOptions, roles_Cata);
                if ((reader == null))
                {
                    return ret;
                }
                ret.LoadByRolesCata(pageIndex, pageSize, pageOptions, reader, roles_Cata);
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                CodeFluent.Runtime.CodeFluentPersistence.CompleteCommand(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName);
            }
            return ret;
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection LoadByRolesCata(OSIS.PEPPAM.BOM.Roles_Cata roles_Cata)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadByRolesCata(int.MinValue, int.MaxValue, null, roles_Cata);
            return ret;
        }
        
        public static System.Data.IDataReader PageDataLoadByRolesCata(CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.BOM.Roles_Cata roles_Cata)
        {
            if ((roles_Cata == null))
            {
                return null;
            }
            if ((roles_Cata.Role_Numero == -1))
            {
                CodeFluent.Runtime.CodeFluentRuntimeException.Throw("invalidEntityKey", "Role_Numero", "roles_Cata", "OSIS.PEPPAM.BOM.Roles_Cata");
            }
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Documentos_Objetivos_Trans", "RolesCata");
            persistence.AddRawParameter("@Role_Numero", roles_Cata.Role_Numero);
            if ((pageOptions != null))
            {
                System.Collections.IEnumerator enumerator = pageOptions.OrderByArguments.GetEnumerator();
                bool b;
                int index = 0;
                for (b = enumerator.MoveNext(); b; b = enumerator.MoveNext())
                {
                    CodeFluent.Runtime.OrderByArgument argument = ((CodeFluent.Runtime.OrderByArgument)(enumerator.Current));
                    persistence.AddParameter(string.Format("@_orderBy{0}", index), argument.Name);
                    persistence.AddParameter(string.Format("@_orderByDirection{0}", index), ((int)(argument.Direction)));
                    index = (index + 1);
                }
            }
            System.Data.IDataReader reader = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence.ExecuteReader();
            return reader;
        }
        
        public static System.Data.IDataReader DataLoadByRolesCata(OSIS.PEPPAM.BOM.Roles_Cata roles_Cata)
        {
            System.Data.IDataReader reader = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageDataLoadByRolesCata(null, roles_Cata);
            return reader;
        }
 [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static Documentos_Objetivos_TransCollection PageLoadByRolesCata(int pageIndex, int pageSize,int role_Numero)
        {
            OSIS.PEPPAM.BOM.Roles_Cata roles_Cata = OSIS.PEPPAM.BOM.Roles_Cata.Load(role_Numero);
            if ((roles_Cata == null))
            {
                return new Documentos_Objetivos_TransCollection();
            }
            return Documentos_Objetivos_TransCollection.PageLoadByRolesCata(pageIndex, pageSize, null, roles_Cata);
        }
  private void LoadByRutasMaster(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, System.Data.IDataReader reader, OSIS.PEPPAM.BOM.Rutas_Master rutas_Master)
        {
            if ((reader == null))
            {
                throw new System.ArgumentNullException("reader");
            }
            if ((pageIndex < 0))
            {
                pageIndex = 0;
            }
            if ((pageSize < 0))
            {
                if ((pageOptions != null))
                {
                    pageSize = pageOptions.DefaultPageSize;
                }
                else
                {
                    pageSize = int.MaxValue;
                }
            }
            CodeFluent.Runtime.CodeFluentEntityState rutas_MasterState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
            if ((rutas_Master != null))
            {
                rutas_MasterState = rutas_Master.EntityState;
            }
            this._rutas_Master = rutas_Master;
            this._documentos_Master = null;
            this._roles_Cata = null;
            this._zonas_Master = null;
            this.BaseList.Clear();
            int count = 0;
            int readCount = 0;
            bool readerRead;
            for (readerRead = reader.Read(); ((readerRead == true) 
                        && ((count < this.MaxCount) 
                        && (count < pageSize))); readerRead = reader.Read())
            {
                readCount = (readCount + 1);
                if ((CodeFluent.Runtime.CodeFluentPersistence.CanAddEntity(0, pageSize, pageOptions, readCount) == true))
                {
                    OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans = new OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans();
                    ((CodeFluent.Runtime.ICodeFluentEntity)(documentosObjetivosTrans)).ReadRecord(reader);
                    if (true)
                    {
                        this.BaseAdd(documentosObjetivosTrans);
                        count = (count + 1);
                    }
                    documentosObjetivosTrans.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
                }
            }
            if ((rutas_Master != null))
            {
                rutas_Master.EntityState = rutas_MasterState;
            }
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection PageLoadByRutasMaster(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.BOM.Rutas_Master rutas_Master)
        {
            if ((pageIndex < 0))
            {
                pageIndex = 0;
            }
            if ((pageSize < 0))
            {
                if ((pageOptions != null))
                {
                    pageSize = pageOptions.DefaultPageSize;
                }
                else
                {
                    pageSize = int.MaxValue;
                }
            }
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = new OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection();
            System.Data.IDataReader reader = null;
            try
            {
                reader = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageDataLoadByRutasMaster(pageOptions, rutas_Master);
                if ((reader == null))
                {
                    return ret;
                }
                ret.LoadByRutasMaster(pageIndex, pageSize, pageOptions, reader, rutas_Master);
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                CodeFluent.Runtime.CodeFluentPersistence.CompleteCommand(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName);
            }
            return ret;
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection LoadByRutasMaster(OSIS.PEPPAM.BOM.Rutas_Master rutas_Master)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadByRutasMaster(int.MinValue, int.MaxValue, null, rutas_Master);
            return ret;
        }
        
        public static System.Data.IDataReader PageDataLoadByRutasMaster(CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.BOM.Rutas_Master rutas_Master)
        {
            if ((rutas_Master == null))
            {
                return null;
            }
            if ((rutas_Master.Ruta_Secuencia == -1))
            {
                CodeFluent.Runtime.CodeFluentRuntimeException.Throw("invalidEntityKey", "Ruta_Secuencia", "rutas_Master", "OSIS.PEPPAM.BOM.Rutas_Master");
            }
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Documentos_Objetivos_Trans", "RutasMaster");
            persistence.AddRawParameter("@Ruta_Secuencia", rutas_Master.Ruta_Secuencia);
            if ((pageOptions != null))
            {
                System.Collections.IEnumerator enumerator = pageOptions.OrderByArguments.GetEnumerator();
                bool b;
                int index = 0;
                for (b = enumerator.MoveNext(); b; b = enumerator.MoveNext())
                {
                    CodeFluent.Runtime.OrderByArgument argument = ((CodeFluent.Runtime.OrderByArgument)(enumerator.Current));
                    persistence.AddParameter(string.Format("@_orderBy{0}", index), argument.Name);
                    persistence.AddParameter(string.Format("@_orderByDirection{0}", index), ((int)(argument.Direction)));
                    index = (index + 1);
                }
            }
            System.Data.IDataReader reader = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence.ExecuteReader();
            return reader;
        }
        
        public static System.Data.IDataReader DataLoadByRutasMaster(OSIS.PEPPAM.BOM.Rutas_Master rutas_Master)
        {
            System.Data.IDataReader reader = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageDataLoadByRutasMaster(null, rutas_Master);
            return reader;
        }
 [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static Documentos_Objetivos_TransCollection PageLoadByRutasMaster(int pageIndex, int pageSize,int ruta_Secuencia)
        {
            OSIS.PEPPAM.BOM.Rutas_Master rutas_Master = OSIS.PEPPAM.BOM.Rutas_Master.Load(ruta_Secuencia);
            if ((rutas_Master == null))
            {
                return new Documentos_Objetivos_TransCollection();
            }
            return Documentos_Objetivos_TransCollection.PageLoadByRutasMaster(pageIndex, pageSize, null, rutas_Master);
        }
  private void LoadByZonasMaster(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, System.Data.IDataReader reader, OSIS.PEPPAM.BOM.Zonas_Master zonas_Master)
        {
            if ((reader == null))
            {
                throw new System.ArgumentNullException("reader");
            }
            if ((pageIndex < 0))
            {
                pageIndex = 0;
            }
            if ((pageSize < 0))
            {
                if ((pageOptions != null))
                {
                    pageSize = pageOptions.DefaultPageSize;
                }
                else
                {
                    pageSize = int.MaxValue;
                }
            }
            CodeFluent.Runtime.CodeFluentEntityState zonas_MasterState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
            if ((zonas_Master != null))
            {
                zonas_MasterState = zonas_Master.EntityState;
            }
            this._zonas_Master = zonas_Master;
            this._documentos_Master = null;
            this._roles_Cata = null;
            this._rutas_Master = null;
            this.BaseList.Clear();
            int count = 0;
            int readCount = 0;
            bool readerRead;
            for (readerRead = reader.Read(); ((readerRead == true) 
                        && ((count < this.MaxCount) 
                        && (count < pageSize))); readerRead = reader.Read())
            {
                readCount = (readCount + 1);
                if ((CodeFluent.Runtime.CodeFluentPersistence.CanAddEntity(0, pageSize, pageOptions, readCount) == true))
                {
                    OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans = new OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans();
                    ((CodeFluent.Runtime.ICodeFluentEntity)(documentosObjetivosTrans)).ReadRecord(reader);
                    if (true)
                    {
                        this.BaseAdd(documentosObjetivosTrans);
                        count = (count + 1);
                    }
                    documentosObjetivosTrans.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
                }
            }
            if ((zonas_Master != null))
            {
                zonas_Master.EntityState = zonas_MasterState;
            }
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection PageLoadByZonasMaster(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.BOM.Zonas_Master zonas_Master)
        {
            if ((pageIndex < 0))
            {
                pageIndex = 0;
            }
            if ((pageSize < 0))
            {
                if ((pageOptions != null))
                {
                    pageSize = pageOptions.DefaultPageSize;
                }
                else
                {
                    pageSize = int.MaxValue;
                }
            }
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = new OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection();
            System.Data.IDataReader reader = null;
            try
            {
                reader = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageDataLoadByZonasMaster(pageOptions, zonas_Master);
                if ((reader == null))
                {
                    return ret;
                }
                ret.LoadByZonasMaster(pageIndex, pageSize, pageOptions, reader, zonas_Master);
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                CodeFluent.Runtime.CodeFluentPersistence.CompleteCommand(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName);
            }
            return ret;
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection LoadByZonasMaster(OSIS.PEPPAM.BOM.Zonas_Master zonas_Master)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadByZonasMaster(int.MinValue, int.MaxValue, null, zonas_Master);
            return ret;
        }
        
        public static System.Data.IDataReader PageDataLoadByZonasMaster(CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.BOM.Zonas_Master zonas_Master)
        {
            if ((zonas_Master == null))
            {
                return null;
            }
            if ((zonas_Master.Zona_Secuencia == -1))
            {
                CodeFluent.Runtime.CodeFluentRuntimeException.Throw("invalidEntityKey", "Zona_Secuencia", "zonas_Master", "OSIS.PEPPAM.BOM.Zonas_Master");
            }
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Documentos_Objetivos_Trans", "ZonasMaster");
            persistence.AddRawParameter("@Zona_Secuencia", zonas_Master.Zona_Secuencia);
            if ((pageOptions != null))
            {
                System.Collections.IEnumerator enumerator = pageOptions.OrderByArguments.GetEnumerator();
                bool b;
                int index = 0;
                for (b = enumerator.MoveNext(); b; b = enumerator.MoveNext())
                {
                    CodeFluent.Runtime.OrderByArgument argument = ((CodeFluent.Runtime.OrderByArgument)(enumerator.Current));
                    persistence.AddParameter(string.Format("@_orderBy{0}", index), argument.Name);
                    persistence.AddParameter(string.Format("@_orderByDirection{0}", index), ((int)(argument.Direction)));
                    index = (index + 1);
                }
            }
            System.Data.IDataReader reader = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence.ExecuteReader();
            return reader;
        }
        
        public static System.Data.IDataReader DataLoadByZonasMaster(OSIS.PEPPAM.BOM.Zonas_Master zonas_Master)
        {
            System.Data.IDataReader reader = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageDataLoadByZonasMaster(null, zonas_Master);
            return reader;
        }
 [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static Documentos_Objetivos_TransCollection PageLoadByZonasMaster(int pageIndex, int pageSize,int zona_Secuencia)
        {
            OSIS.PEPPAM.BOM.Zonas_Master zonas_Master = OSIS.PEPPAM.BOM.Zonas_Master.Load(zona_Secuencia);
            if ((zonas_Master == null))
            {
                return new Documentos_Objetivos_TransCollection();
            }
            return Documentos_Objetivos_TransCollection.PageLoadByZonasMaster(pageIndex, pageSize, null, zonas_Master);
        }
        protected virtual void BaseTrace(System.CodeDom.Compiler.IndentedTextWriter writer)
        {
            writer.Write("[");
            writer.Write(string.Concat("Count=", this.Count));
            writer.Write("]");
        }
        
        public string Trace()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            System.IO.StringWriter stringWriter = new System.IO.StringWriter(stringBuilder, System.Globalization.CultureInfo.CurrentCulture);
            System.CodeDom.Compiler.IndentedTextWriter writer = new System.CodeDom.Compiler.IndentedTextWriter(stringWriter);
            this.BaseTrace(writer);
            writer.Flush();
            ((System.IDisposable)(writer)).Dispose();
            ((System.IDisposable)(stringWriter)).Dispose();
            string sr = stringBuilder.ToString();
            return sr;
        }
        
        void CodeFluent.Runtime.ICodeFluentObject.Trace(System.CodeDom.Compiler.IndentedTextWriter writer)
        {
            this.BaseTrace(writer);
        }
        
        public virtual void CopyTo(OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection collection, bool deep)
        {
            if ((typeof(System.ICloneable).IsAssignableFrom(typeof(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans)) == false))
            {
                deep = false;
            }
            System.Collections.Generic.IEnumerator<OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans> enumerator = this.GetEnumerator();
            bool b;
            for (b = enumerator.MoveNext(); b; b = enumerator.MoveNext())
            {
                if ((deep == true))
                {
                    collection.Add(((OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans)(((System.ICloneable)(enumerator.Current)).Clone())));
                }
                else
                {
                    collection.Add(enumerator.Current);
                }
            }
        }
        
        public virtual OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection Clone(bool deep)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = new OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection();
            this.CopyTo(ret, deep);
            return ret;
        }
        
        object System.ICloneable.Clone()
        {
            return this.Clone(true);
        }
        
        public virtual void CancelNew(int index)
        {
            if (((this._addNewPos >= 0) 
                        && (this._addNewPos == index)))
            {
                this.RemoveAt(index);
                this._addNewPos = -1;
            }
        }
        
        public virtual void EndNew(int index)
        {
            if (((this._addNewPos >= 0) 
                        && (this._addNewPos == index)))
            {
                this._addNewPos = -1;
            }
        }
        
        void System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor property)
        {
            this._blm852358831.AddIndex(property);
        }
        
        protected virtual void OnAddingNew(System.ComponentModel.AddingNewEventArgs e)
        {
            if ((this.AddingNew != null))
            {
                this.AddingNew(this, e);
            }
        }
        
        object System.ComponentModel.IBindingList.AddNew()
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans add = new OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans();
            System.ComponentModel.AddingNewEventArgs e = new System.ComponentModel.AddingNewEventArgs(add);
            this.OnAddingNew(e);
            add = ((OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans)(e.NewObject));
            if ((add == null))
            {
                add = new OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans();
            }
            this._addNewPos = this.Add(add);
            return add;
        }
        
        void System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor property, System.ComponentModel.ListSortDirection direction)
        {
            this._blm852358831.ApplySort(property, direction);
        }
        
        int System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor property, object key)
        {
            return this._blm852358831.Find(property, key);
        }
        
        void System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor property)
        {
            this._blm852358831.RemoveIndex(property);
        }
        
        void System.ComponentModel.IBindingList.RemoveSort()
        {
            this._blm852358831.RemoveSort();
        }
        
        protected virtual void OnListChanged(System.ComponentModel.ListChangedEventArgs e)
        {
            if ((e == null))
            {
                throw new System.ArgumentNullException("e");
            }
            if ((this.RaiseListChangedEvents == false))
            {
                return;
            }
            if ((((e.ListChangedType == System.ComponentModel.ListChangedType.Reset) 
                        == false) 
                        && (e.NewIndex < 0)))
            {
                return;
            }
            if ((this.ListChanged != null))
            {
                this.ListChanged(this, e);
            }
        }
        
        public void AddRange(System.Collections.Generic.IEnumerable<OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans> collection)
        {
            CodeFluent.Runtime.Utilities.ConvertUtilities.AddRange(this, collection);
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection PageLoadAll(int pageIndex, int pageSize)
        {
            return OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadAll(pageIndex, pageSize, null);
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public static bool Save(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans)
        {
            if ((documentosObjetivosTrans == null))
            {
                return false;
            }
            bool ret = documentosObjetivosTrans.Save();
            return ret;
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public static bool Insert(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans)
        {
            bool ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans.Save(documentosObjetivosTrans);
            return ret;
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public static bool Delete(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans)
        {
            if ((documentosObjetivosTrans == null))
            {
                return false;
            }
            bool ret = documentosObjetivosTrans.Delete();
            return ret;
        }
    
    
        private void LoadAllPaging(int pageIndex, int pageSize, string searchString, CodeFluent.Runtime.PageOptions pageOptions, System.Data.IDataReader reader)
        {
            if ((reader == null))
            {
                throw new System.ArgumentNullException("reader");
            }
            if ((pageIndex < 0))
            {
                pageIndex = 0;
            }
            if ((pageSize < 0))
            {
                if ((pageOptions != null))
                {
                    pageSize = pageOptions.DefaultPageSize;
                }
                else
                {
                    pageSize = int.MaxValue;
                }
            }
            this._documentos_Master = null;
            this._roles_Cata = null;
            this._rutas_Master = null;
            this._zonas_Master = null;
            this.BaseList.Clear();
            int count = 0;
            int readCount = 0;
            bool readerRead;
            for (readerRead = reader.Read(); ((readerRead == true) 
                        && ((count < this.MaxCount) 
                        && (count < pageSize))); readerRead = reader.Read())
            {
                readCount = (readCount + 1);
                if ((CodeFluent.Runtime.CodeFluentPersistence.CanAddEntity(0, pageSize, pageOptions, readCount) == true))
                {
                    this._totalRowCount = CodeFluentPersistence.GetReaderValue(reader, "TotalRowCount", 0);
                    OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans = new OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans();
                    ((CodeFluent.Runtime.ICodeFluentEntity)(documentosObjetivosTrans)).ReadRecord(reader);
                    if (true)
                    {
                        this.BaseAdd(documentosObjetivosTrans);
                        count = (count + 1);
                    }
                    documentosObjetivosTrans.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
                }
            }
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection PageLoadAllPaging(int pageIndex, int pageSize,string searchString, CodeFluent.Runtime.PageOptions pageOptions)
        {
            if ((pageIndex < 0))
            {
                pageIndex = 0;
            }
            if ((pageSize < 0))
            {
                if ((pageOptions != null))
                {
                    pageSize = pageOptions.DefaultPageSize;
                }
                else
                {
                    pageSize = int.MaxValue;
                }
            }
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = new OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection();
            System.Data.IDataReader reader = null;
            try
            {
                reader = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageDataLoadAllPaging(pageIndex, pageSize, searchString, pageOptions);
                if ((reader == null))
                {
                    return ret;
                }
                ret.LoadAllPaging(pageIndex, pageSize,searchString, pageOptions, reader);
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                CodeFluent.Runtime.CodeFluentPersistence.CompleteCommand(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName);
            }
            return ret;
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection LoadAllPaging(int pageIndex, int pageSize,string searchString)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadAllPaging(pageIndex, pageSize,searchString, null);
            return ret;
        }
        
        public static System.Data.IDataReader PageDataLoadAllPaging(int pageIndex, int pageSize, string searchString, CodeFluent.Runtime.PageOptions pageOptions)
        {
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Documentos_Objetivos_Trans", "Paging");
            persistence.AddParameter(string.Format("@PageIndex"), pageIndex);
            persistence.AddParameter(string.Format("@PageSize"), pageSize);
            persistence.AddParameter(string.Format("@SearchString" ), searchString);
            if ((pageOptions != null))
            {
                System.Collections.IEnumerator enumerator = pageOptions.OrderByArguments.GetEnumerator();
                bool b;
                int index = 0;
                for (b = enumerator.MoveNext(); b; b = enumerator.MoveNext())
                {
                    CodeFluent.Runtime.OrderByArgument argument = ((CodeFluent.Runtime.OrderByArgument)(enumerator.Current));
                    persistence.AddParameter(string.Format("@_orderBy{0}", index), argument.Name);
                    persistence.AddParameter(string.Format("@_orderByDirection{0}", index), ((int)(argument.Direction)));
                    index = (index + 1);
                }
            }
            System.Data.IDataReader reader = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence.ExecuteReader();
            return reader;
        }
        
        public static System.Data.IDataReader DataLoadAllPaging(int pageIndex, int pageSize, string searchString)
        {
            System.Data.IDataReader reader = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageDataLoadAllPaging( pageIndex,  pageSize,  searchString,null);
            return reader;
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection PageLoadAllPaging(int pageIndex, int pageSize, string searchString)
        {
            return OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadAllPaging(pageIndex, pageSize, searchString, null);
        }
        
        private void LoadAllCustomPaging(int pageIndex, int pageSize, string searchString, string procName, Dictionary<string, string> parametes, CodeFluent.Runtime.PageOptions pageOptions, System.Data.IDataReader reader)
        {
            if ((reader == null))
            {
                throw new System.ArgumentNullException("reader");
            }
            if ((pageIndex < 0))
            {
                pageIndex = 0;
            }
            if ((pageSize < 0))
            {
                if ((pageOptions != null))
                {
                    pageSize = pageOptions.DefaultPageSize;
                }
                else
                {
                    pageSize = int.MaxValue;
                }
            }
            this._documentos_Master = null;
            this._roles_Cata = null;
            this._rutas_Master = null;
            this._zonas_Master = null;
            this.BaseList.Clear();
            int count = 0;
            int readCount = 0;
            bool readerRead;
            for (readerRead = reader.Read(); ((readerRead == true) 
                        && ((count < this.MaxCount) 
                        && (count < pageSize))); readerRead = reader.Read())
            {
                readCount = (readCount + 1);
                if ((CodeFluent.Runtime.CodeFluentPersistence.CanAddEntity(0, pageSize, pageOptions, readCount) == true))
                {
                    this._totalRowCount = CodeFluentPersistence.GetReaderValue(reader, "TotalRowCount", 0);
                    OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans = new OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans();
                    ((CodeFluent.Runtime.ICodeFluentEntity)(documentosObjetivosTrans)).ReadRecord(reader);
                    if (true)
                    {
                        this.BaseAdd(documentosObjetivosTrans);
                        count = (count + 1);
                    }
                    documentosObjetivosTrans.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
                }
            }
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection PageLoadAllCustomPaging(int pageIndex, int pageSize,string searchString, string procName, Dictionary<string, string> parametes, CodeFluent.Runtime.PageOptions pageOptions)
        {
            if ((pageIndex < 0))
            {
                pageIndex = 0;
            }
            if ((pageSize < 0))
            {
                if ((pageOptions != null))
                {
                    pageSize = pageOptions.DefaultPageSize;
                }
                else
                {
                    pageSize = int.MaxValue;
                }
            }
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = new OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection();
            System.Data.IDataReader reader = null;
            try
            {
                reader = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageDataLoadAllCustomPaging(pageIndex, pageSize, searchString, procName, parametes, pageOptions);
                if ((reader == null))
                {
                    return ret;
                }
                ret.LoadAllCustomPaging(pageIndex, pageSize,searchString, procName, parametes, pageOptions, reader);
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                CodeFluent.Runtime.CodeFluentPersistence.CompleteCommand(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName);
            }
            return ret;
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection LoadAllCustomPaging(int pageIndex, int pageSize,string searchString, string procName, Dictionary<string, string> parametes)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadAllCustomPaging(pageIndex, pageSize,searchString, procName, parametes, null);
            return ret;
        }
        
        public static System.Data.IDataReader PageDataLoadAllCustomPaging(int pageIndex, int pageSize, string searchString, string procName, Dictionary<string, string> parametes, CodeFluent.Runtime.PageOptions pageOptions)
        {
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, procName, null, procName);
            persistence.AddParameter(string.Format("@PageIndex"), pageIndex);
            persistence.AddParameter(string.Format("@PageSize"), pageSize);
            persistence.AddParameter(string.Format("@SearchString" ), searchString);
            if ((parametes != null))
            {
                var enumerator = parametes.GetEnumerator();
                bool b;
                int index = 0;
                for (b = enumerator.MoveNext(); b; b = enumerator.MoveNext())
                {
                    persistence.AddParameter(string.Format("@{0}", enumerator.Current.Key), enumerator.Current.Value);
                }
            }
            if ((pageOptions != null))
            {
                System.Collections.IEnumerator enumerator = pageOptions.OrderByArguments.GetEnumerator();
                bool b;
                int index = 0;
                for (b = enumerator.MoveNext(); b; b = enumerator.MoveNext())
                {
                    CodeFluent.Runtime.OrderByArgument argument = ((CodeFluent.Runtime.OrderByArgument)(enumerator.Current));
                    persistence.AddParameter(string.Format("@_orderBy{0}", index), argument.Name);
                    persistence.AddParameter(string.Format("@_orderByDirection{0}", index), ((int)(argument.Direction)));
                    index = (index + 1);
                }
            }
            System.Data.IDataReader reader = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence.ExecuteReader();
            return reader;
        }
        
        public static System.Data.IDataReader DataLoadAllCustomPaging(int pageIndex, int pageSize, string searchString, string procName, Dictionary<string, string> parametes)
        {
            System.Data.IDataReader reader = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageDataLoadAllCustomPaging( pageIndex,  pageSize,  searchString, procName, parametes, null);
            return reader;
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection PageLoadAllCustomPaging(int pageIndex, int pageSize, string searchString, string procName, Dictionary<string, string> parametes)
        {
            return OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadAllCustomPaging(pageIndex, pageSize, searchString, procName, parametes, null);
        }
        
    
    }
}

