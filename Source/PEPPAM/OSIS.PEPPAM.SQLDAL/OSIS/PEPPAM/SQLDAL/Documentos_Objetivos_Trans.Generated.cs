//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 6/19/2014 1:29:30 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     Autor: Francisco
//     Fecha: 6/19/2014 1:29:30 PM
// </auto-generated>
//------------------------------------------------------------------------------

 using System;
 using CodeFluent.Runtime;
 using CodeFluent.Runtime.Utilities;
  using System.Text.RegularExpressions;
  using System.Collections.Generic;
namespace OSIS.PEPPAM.BOM
{
	/// <summary>
	/// The collection to hold 'Documentos_Objetivos_Trans' entities
	/// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MyWorkGenerators", "0.0.0.00000")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DataObjectAttribute()]
    [System.Diagnostics.DebuggerDisplayAttribute("EK={EntityKey},Registro_Estado={Registro_Estado}")]
    [System.ComponentModel.TypeConverterAttribute(typeof(CodeFluent.Runtime.Design.NameTypeConverter))]
	public partial class Documentos_Objetivos_Trans :  System.ICloneable, System.IComparable, System.IComparable<OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans>, CodeFluent.Runtime.ICodeFluentEntity, System.ComponentModel.IDataErrorInfo, CodeFluent.Runtime.ICodeFluentMemberValidator, CodeFluent.Runtime.ICodeFluentSummaryValidator, System.IEquatable<OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans>

	{
		#region FieldNameConstants Enumeration

		/// <summary>
		/// Enumeration to define each property that maps to a database field for the 'Documentos_Objetivos_Trans' table.
		/// </summary>
		public enum FieldNameConstants
		{
			/// <summary>
			/// Field mapping for the 'Documento_Secuencia' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Documento_Secuencia' property")]
			Documento_Secuencia,
			/// <summary>
			/// Field mapping for the 'Registro_Estado' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Registro_Estado' property")]
			Registro_Estado,
			/// <summary>
			/// Field mapping for the 'Registro_Fecha' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Registro_Fecha' property")]
			Registro_Fecha,
			/// <summary>
			/// Field mapping for the 'Registro_Usuario' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Registro_Usuario' property")]
			Registro_Usuario,
			/// <summary>
			/// Field mapping for the 'Role_Numero' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Role_Numero' property")]
			Role_Numero,
			/// <summary>
			/// Field mapping for the 'Ruta_Secuencia' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Ruta_Secuencia' property")]
			Ruta_Secuencia,
			/// <summary>
			/// Field mapping for the 'Zona_Secuencia' property
			/// </summary>
			[System.ComponentModel.Description("Field mapping for the 'Zona_Secuencia' property")]
			Zona_Secuencia,
		}
		#endregion

        private bool _raisePropertyChangedEvents = true;
        
        private CodeFluent.Runtime.CodeFluentEntityState _entityState;
        
		#region Property Holders

		/// <summary />
		protected int _documento_Secuencia = -1;
		/// <summary />
		protected string _registro_Estado = string.Empty;
		/// <summary />
		protected DateTime _registro_Fecha = System.DateTime.MinValue;
		/// <summary />
		protected string _registro_Usuario = string.Empty;
		/// <summary />
		protected int _role_Numero = -1;
		/// <summary />
		protected int _ruta_Secuencia = -1;
		/// <summary />
		protected int _zona_Secuencia = -1;

		#endregion

		#region Property Navigation Holders

		/// <summary>
		/// The navigation definition for walking [Documentos_Objetivos_Trans]->[Documentos_Master]
		/// Relationship Links: 
		/// [Documentos_Master.Documento_Secuencia = Documentos_Objetivos_Trans.Documento_Secuencia] (Required)
		protected OSIS.PEPPAM.BOM.Documentos_Master _documentos_Master = null;

		/// <summary>
		/// The navigation definition for walking [Documentos_Objetivos_Trans]->[Roles_Cata]
		/// Relationship Links: 
		/// [Roles_Cata.Role_Numero = Documentos_Objetivos_Trans.Role_Numero] (Required)
		protected OSIS.PEPPAM.BOM.Roles_Cata _roles_Cata = null;

		/// <summary>
		/// The navigation definition for walking [Documentos_Objetivos_Trans]->[Rutas_Master]
		/// Relationship Links: 
		/// [Rutas_Master.Ruta_Secuencia = Documentos_Objetivos_Trans.Ruta_Secuencia] (Required)
		protected OSIS.PEPPAM.BOM.Rutas_Master _rutas_Master = null;

		/// <summary>
		/// The navigation definition for walking [Documentos_Objetivos_Trans]->[Zonas_Master]
		/// Relationship Links: 
		/// [Zonas_Master.Zona_Secuencia = Documentos_Objetivos_Trans.Zona_Secuencia] (Required)
		protected OSIS.PEPPAM.BOM.Zonas_Master _zonas_Master = null;


		#endregion

		#region GetMaxLength

		/// <summary>
		/// Gets the maximum size of the field value.
		/// </summary>
		public static int GetMaxLength(FieldNameConstants field)
		{
			switch (field)
			{
				case FieldNameConstants.Documento_Secuencia:
					return 0;
				case FieldNameConstants.Registro_Estado:
					return 1;
				case FieldNameConstants.Registro_Fecha:
					return 0;
				case FieldNameConstants.Registro_Usuario:
					return 150;
				case FieldNameConstants.Role_Numero:
					return 0;
				case FieldNameConstants.Ruta_Secuencia:
					return 0;
				case FieldNameConstants.Zona_Secuencia:
					return 0;
			}
			return 0;
		}


		#endregion

		#region GetFieldType

		/// <summary>
		/// Gets the system type of a field on this object
		/// </summary>
		public static System.Type GetFieldType(FieldNameConstants field)
		{
			if (field.GetType() != typeof(FieldNameConstants))
				throw new Exception("The '" + field.GetType().ReflectedType.ToString() + ".FieldNameConstants' value is not valid. The field parameter must be of type 'OSIS.PEPPAM.BOM.Entity.Documentos_Objetivos_Trans.FieldNameConstants'.");

			switch ((FieldNameConstants)field)
			{
				case FieldNameConstants.Documento_Secuencia: return typeof(int);
				case FieldNameConstants.Registro_Estado: return typeof(string);
				case FieldNameConstants.Registro_Fecha: return typeof(DateTime);
				case FieldNameConstants.Registro_Usuario: return typeof(string);
				case FieldNameConstants.Role_Numero: return typeof(int);
				case FieldNameConstants.Ruta_Secuencia: return typeof(int);
				case FieldNameConstants.Zona_Secuencia: return typeof(int);
			}
			return null;
		}


		#endregion

		#region Get/Set Value


		#endregion

        public Documentos_Objetivos_Trans()
        {
            this._entityState = CodeFluent.Runtime.CodeFluentEntityState.Created;
        }
        
		#region Properties

        [System.ComponentModel.BrowsableAttribute(false)]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual bool RaisePropertyChangedEvents
        {
            get
            {
                return this._raisePropertyChangedEvents;
            }
            set
            {
                this._raisePropertyChangedEvents = value;
            }
        }
        
		/// <summary>
		/// The property that maps back to the database 'Documentos_Objetivos_Trans.Documento_Secuencia' field.
		/// </summary>
		/// <remarks>Field: [Documentos_Objetivos_Trans].[Documento_Secuencia], Not Nullable, Primary Key, Unique, Indexed</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(int))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Documento_Secuencia")]
		public virtual int Documento_Secuencia
		{
			get { 
if (((this._documento_Secuencia == -1) 
                            && (this._documentos_Master != null)))
                {
                    this._documento_Secuencia = this._documentos_Master.Documento_Secuencia;
                }
			return _documento_Secuencia; }
			set
			{
				if (value == _documento_Secuencia) return;
                this._documentos_Master = null;
				_documento_Secuencia = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("DocumentosMaster"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Documento_Secuencia"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Documentos_Objetivos_Trans.Zona_Secuencia' field.
		/// </summary>
		/// <remarks>Field: [Documentos_Objetivos_Trans].[Zona_Secuencia], Not Nullable, Primary Key, Unique, Indexed</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(int))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Zona_Secuencia")]
		public virtual int Zona_Secuencia
		{
			get { 
if (((this._zona_Secuencia == -1) 
                            && (this._zonas_Master != null)))
                {
                    this._zona_Secuencia = this._zonas_Master.Zona_Secuencia;
                }
			return _zona_Secuencia; }
			set
			{
				if (value == _zona_Secuencia) return;
                this._zonas_Master = null;
				_zona_Secuencia = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("ZonasMaster"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Zona_Secuencia"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Documentos_Objetivos_Trans.Ruta_Secuencia' field.
		/// </summary>
		/// <remarks>Field: [Documentos_Objetivos_Trans].[Ruta_Secuencia], Not Nullable, Primary Key, Unique, Indexed</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(int))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Ruta_Secuencia")]
		public virtual int Ruta_Secuencia
		{
			get { 
if (((this._ruta_Secuencia == -1) 
                            && (this._rutas_Master != null)))
                {
                    this._ruta_Secuencia = this._rutas_Master.Ruta_Secuencia;
                }
			return _ruta_Secuencia; }
			set
			{
				if (value == _ruta_Secuencia) return;
                this._rutas_Master = null;
				_ruta_Secuencia = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("RutasMaster"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Ruta_Secuencia"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Documentos_Objetivos_Trans.Role_Numero' field.
		/// </summary>
		/// <remarks>Field: [Documentos_Objetivos_Trans].[Role_Numero], Not Nullable, Primary Key, Unique, Indexed</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(int))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Role_Numero")]
		public virtual int Role_Numero
		{
			get { 
if (((this._role_Numero == -1) 
                            && (this._roles_Cata != null)))
                {
                    this._role_Numero = this._roles_Cata.Role_Numero;
                }
			return _role_Numero; }
			set
			{
				if (value == _role_Numero) return;
                this._roles_Cata = null;
				_role_Numero = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("RolesCata"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Role_Numero"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Documentos_Objetivos_Trans.Registro_Estado' field.
		/// </summary>
		/// <remarks>Field: [Documentos_Objetivos_Trans].[Registro_Estado], Field Length: 1, Not Nullable, Default Value: A</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(string))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Registro_Estado")]
		public virtual string Registro_Estado
		{
			get { 
			return _registro_Estado; }
			set
			{
				if ((value != null) && (value.Length > GetMaxLength(FieldNameConstants.Registro_Estado))) throw new Exception(string.Format(GlobalValues.ERROR_DATA_TOO_BIG, value, "Documentos_Objetivos_Trans.Registro_Estado", GetMaxLength(FieldNameConstants.Registro_Estado)));
				if (value == _registro_Estado) return;
                this._registro_Estado = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Registro_Estado"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Documentos_Objetivos_Trans.Registro_Fecha' field.
		/// </summary>
		/// <remarks>Field: [Documentos_Objetivos_Trans].[Registro_Fecha], Not Nullable, Default Value: getdate</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(DateTime))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Registro_Fecha")]
		public virtual DateTime Registro_Fecha
		{
			get { 
			return _registro_Fecha; }
			set
			{
				if ((value < GlobalValues.MIN_DATETIME)) throw new Exception("The DateTime value 'Registro_Fecha' (" + value.ToString("yyyy-MM-dd HH:mm:ss") + ") cannot be less than " + GlobalValues.MIN_DATETIME.ToString());
				if ((value > GlobalValues.MAX_DATETIME)) throw new Exception("The DateTime value 'Registro_Fecha' (" + value.ToString("yyyy-MM-dd HH:mm:ss") + ") cannot be greater than " + GlobalValues.MAX_DATETIME.ToString());
				if (value == _registro_Fecha) return;
                this._registro_Fecha = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Registro_Fecha"));
			}
		}

		/// <summary>
		/// The property that maps back to the database 'Documentos_Objetivos_Trans.Registro_Usuario' field.
		/// </summary>
		/// <remarks>Field: [Documentos_Objetivos_Trans].[Registro_Usuario], Field Length: 150, Not Nullable</remarks>
		[System.ComponentModel.Browsable(true)]
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = false, Type=typeof(string))]
		[System.Xml.Serialization.XmlIgnoreAttribute()]
		[System.ComponentModel.DisplayName("Registro_Usuario")]
		public virtual string Registro_Usuario
		{
			get { 
			return _registro_Usuario; }
			set
			{
				if ((value != null) && (value.Length > GetMaxLength(FieldNameConstants.Registro_Usuario))) throw new Exception(string.Format(GlobalValues.ERROR_DATA_TOO_BIG, value, "Documentos_Objetivos_Trans.Registro_Usuario", GetMaxLength(FieldNameConstants.Registro_Usuario)));
				if (value == _registro_Usuario) return;
                this._registro_Usuario = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Registro_Usuario"));
			}
		}


		#endregion

		#region Navigation Properties

		/// <summary>
		/// The navigation definition for walking [Documentos_Objetivos_Trans]->[Documentos_Master]
		/// Relationship Links: 
		/// [Documentos_Master.Documento_Secuencia = Documentos_Objetivos_Trans.Documento_Secuencia] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.BOM.Documentos_Master DocumentosMaster
		{
			get
			{
                if ((this._documentos_Master == null))
                {
                    this._documentos_Master = OSIS.PEPPAM.BOM.Documentos_Master.Load(Documento_Secuencia);
                }
                return this._documentos_Master;
			}
			set
            {
                _documento_Secuencia = -1;
                this._documentos_Master = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("DocumentosMaster"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Documento_Secuencia"));
            }
		}

		/// <summary>
		/// The navigation definition for walking [Documentos_Objetivos_Trans]->[Roles_Cata]
		/// Relationship Links: 
		/// [Roles_Cata.Role_Numero = Documentos_Objetivos_Trans.Role_Numero] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.BOM.Roles_Cata RolesCata
		{
			get
			{
                if ((this._roles_Cata == null))
                {
                    this._roles_Cata = OSIS.PEPPAM.BOM.Roles_Cata.Load(Role_Numero);
                }
                return this._roles_Cata;
			}
			set
            {
                _role_Numero = -1;
                this._roles_Cata = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("RolesCata"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Role_Numero"));
            }
		}

		/// <summary>
		/// The navigation definition for walking [Documentos_Objetivos_Trans]->[Rutas_Master]
		/// Relationship Links: 
		/// [Rutas_Master.Ruta_Secuencia = Documentos_Objetivos_Trans.Ruta_Secuencia] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.BOM.Rutas_Master RutasMaster
		{
			get
			{
                if ((this._rutas_Master == null))
                {
                    this._rutas_Master = OSIS.PEPPAM.BOM.Rutas_Master.Load(Ruta_Secuencia);
                }
                return this._rutas_Master;
			}
			set
            {
                _ruta_Secuencia = -1;
                this._rutas_Master = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("RutasMaster"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Ruta_Secuencia"));
            }
		}

		/// <summary>
		/// The navigation definition for walking [Documentos_Objetivos_Trans]->[Zonas_Master]
		/// Relationship Links: 
		/// [Zonas_Master.Zona_Secuencia = Documentos_Objetivos_Trans.Zona_Secuencia] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.BOM.Zonas_Master ZonasMaster
		{
			get
			{
                if ((this._zonas_Master == null))
                {
                    this._zonas_Master = OSIS.PEPPAM.BOM.Zonas_Master.Load(Zona_Secuencia);
                }
                return this._zonas_Master;
			}
			set
            {
                _zona_Secuencia = -1;
                this._zonas_Master = value;
                this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("ZonasMaster"));
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("Zona_Secuencia"));
            }
		}

		#endregion

        public virtual string EntityKey
        {
            get
            {
                object[] keys = new object[] {
                        this.Documento_Secuencia,
                        this.Zona_Secuencia,
                        this.Ruta_Secuencia,
                        this.Role_Numero
                 };
                string v = CodeFluentPersistence.BuildEntityKey(keys);
                return v;
            }
            set
            {
                System.Type[] types = new System.Type[] {
                        typeof(int),
                        typeof(int),
                        typeof(int),
                        typeof(int)
                        };
                object[] defaultValues = new object[] {
                        -1,
                        -1,
                        -1,
                        -1
                        };
                object[] v1 = CodeFluentPersistence.ParseEntityKey(value, types, defaultValues);
                this. Documento_Secuencia = ((int)(v1[0]));
                this. Zona_Secuencia = ((int)(v1[1]));
                this. Ruta_Secuencia = ((int)(v1[2]));
                this. Role_Numero = ((int)(v1[3]));
            }
        }

        public virtual string EntityDisplayName
        {
            get
            {
                return this.Registro_Estado.ToString();
            }
        }
        
        [field:System.NonSerializedAttribute()]
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        [field:System.NonSerializedAttribute()]
        public event CodeFluent.Runtime.CodeFluentEntityActionEventHandler EntityAction;

        protected virtual void OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs e)
        {
            if ((this.RaisePropertyChangedEvents == false))
            {
                return;
            }
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, e);
            }
        }

        protected virtual void OnEntityAction(CodeFluent.Runtime.CodeFluentEntityActionEventArgs e)
        {
            if ((this.EntityAction != null))
            {
                this.EntityAction(this, e);
            }
        }

        string System.ComponentModel.IDataErrorInfo.Error
        {
            get
            {
                return this.Validate(System.Globalization.CultureInfo.CurrentCulture);
            }
        }
        
        string System.ComponentModel.IDataErrorInfo.this[string columnName]
        {
            get
            {
                return CodeFluentPersistence.ValidateMember(System.Globalization.CultureInfo.CurrentCulture, this, columnName, null);
            }
        }
        
        public virtual CodeFluent.Runtime.CodeFluentEntityState EntityState
        {
            get
            {
                return this._entityState;
            }
            set
            {
                if ((System.Collections.Generic.EqualityComparer<CodeFluent.Runtime.CodeFluentEntityState>.Default.Equals(value, this.EntityState) == true))
                {
                    return;
                }
                this._entityState = value;
                this.OnPropertyChanged(new System.ComponentModel.PropertyChangedEventArgs("EntityState"));
            }
        }
        
        public virtual bool Equals(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans)
        {
            if ((documentosObjetivosTrans == null))
            {
                return false;
            }

            if (
                    (this.Documento_Secuencia == -1)
                    ||
                    (this.Zona_Secuencia == -1)
                    ||
                    (this.Ruta_Secuencia == -1)
                    ||
                    (this.Role_Numero == -1)
            )
            {
                return base.Equals(documentosObjetivosTrans);
            }

 return ((
                    (this.Documento_Secuencia.Equals(documentosObjetivosTrans.Documento_Secuencia))
                    &&
                    (this.Zona_Secuencia.Equals(documentosObjetivosTrans.Zona_Secuencia))
                    &&
                    (this.Ruta_Secuencia.Equals(documentosObjetivosTrans.Ruta_Secuencia))
                    &&
                    (this.Role_Numero.Equals(documentosObjetivosTrans.Role_Numero))
                        )== true);
        }

        public override bool Equals(object obj)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans = null;
			 documentosObjetivosTrans = obj as OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans;
            return this.Equals( documentosObjetivosTrans);
        }

        public override int GetHashCode()
        {
            if ((this.EntityKey == null))
            {
                return base.GetHashCode();
            }
            return this.EntityKey.GetHashCode();
        }
        
        int System.IComparable.CompareTo(object value)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans = null;
             documentosObjetivosTrans = value as OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans;
            if ((documentosObjetivosTrans == null))
            {
                throw new System.ArgumentException("value");
            }
            int localCompareTo = this.CompareTo(documentosObjetivosTrans);
            return localCompareTo;
        }

        public virtual int CompareTo(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans)
        {
            if ((documentosObjetivosTrans == null))
            {
                throw new System.ArgumentNullException("documentosObjetivosTrans");
            }
            int localCompareTo = this.Documento_Secuencia.CompareTo(documentosObjetivosTrans.Documento_Secuencia);
            return localCompareTo;
        }

        public virtual string Validate(System.Globalization.CultureInfo culture)
        {
            return CodeFluentPersistence.Validate(culture, this, null);
        }
        
        public virtual void Validate(System.Globalization.CultureInfo culture, System.Collections.Generic.IList<CodeFluent.Runtime.CodeFluentValidationException> results)
        {
            CodeFluent.Runtime.CodeFluentEntityActionEventArgs evt = new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Validating, true, results);
            evt.Culture = culture;
            this.OnEntityAction(evt);
            if ((evt.Cancel == true))
            {
                string externalValidate;
                if ((evt.Argument != null))
                {
                    externalValidate = evt.Argument.ToString();
                }
                else
                {
                    externalValidate = OSIS.PEPPAM.BOM.Resources.Manager.GetStringWithDefault(culture, "OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans.ExternalValidate", "Type 'OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans' cannot be validated.", null);
                }
                CodeFluentPersistence.AddValidationError(results, externalValidate);
            }
            CodeFluentPersistence.ValidateMember(culture, results, this, null);
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Validated, false, results));
        }
        
        public void Validate()
        {
            string var = this.Validate(System.Globalization.CultureInfo.CurrentCulture);
            if ((var != null))
            {
                throw new CodeFluent.Runtime.CodeFluentValidationException(var);
            }
        }
        
        string CodeFluent.Runtime.ICodeFluentValidator.Validate(System.Globalization.CultureInfo culture)
        {
            string localValidate = this.Validate(culture);
            return localValidate;
        }
        
        void CodeFluent.Runtime.ICodeFluentMemberValidator.Validate(System.Globalization.CultureInfo culture, string memberName, System.Collections.Generic.IList<CodeFluent.Runtime.CodeFluentValidationException> results)
        {
            this.ValidateMember(culture, memberName, results);
        }
        
        protected virtual void ValidateMember(System.Globalization.CultureInfo culture, string memberName, System.Collections.Generic.IList<CodeFluent.Runtime.CodeFluentValidationException> results)
        {
        }
        
        protected virtual void ReadRecord(System.Data.IDataReader reader, CodeFluent.Runtime.CodeFluentReloadOptions options)
        {
            if ((reader == null))
            {
                throw new System.ArgumentNullException("reader");
            }
            if ((((options & CodeFluent.Runtime.CodeFluentReloadOptions.Properties) 
                        == 0) 
                        == false))
            {
                this._documento_Secuencia = CodeFluentPersistence.GetReaderValue(reader, "Documento_Secuencia", (default(int)));
                this._registro_Estado = CodeFluentPersistence.GetReaderValue(reader, "Registro_Estado", (default(string)));
                this._registro_Fecha = CodeFluentPersistence.GetReaderValue(reader, "Registro_Fecha", (default(DateTime)));
                this._registro_Usuario = CodeFluentPersistence.GetReaderValue(reader, "Registro_Usuario", (default(string)));
                this._role_Numero = CodeFluentPersistence.GetReaderValue(reader, "Role_Numero", (default(int)));
                this._ruta_Secuencia = CodeFluentPersistence.GetReaderValue(reader, "Ruta_Secuencia", (default(int)));
                this._zona_Secuencia = CodeFluentPersistence.GetReaderValue(reader, "Zona_Secuencia", (default(int)));
            }
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecord, false, false));
        }

        void CodeFluent.Runtime.ICodeFluentEntity.ReadRecord(System.Data.IDataReader reader)
        {
            this.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.Default);
        }

        protected virtual void ReadRecordOnSave(System.Data.IDataReader reader)
        {
            if ((reader == null))
            {
                throw new System.ArgumentNullException("reader");
            }
            //TODO: Puede ser que solo sean los Identity y no todo los primary keys
            this._documento_Secuencia = CodeFluentPersistence.GetReaderValue(reader, "Documento_Secuencia", ((int)(-1)));
            //TODO: Puede ser que solo sean los Identity y no todo los primary keys
            this._zona_Secuencia = CodeFluentPersistence.GetReaderValue(reader, "Zona_Secuencia", ((int)(-1)));
            //TODO: Puede ser que solo sean los Identity y no todo los primary keys
            this._ruta_Secuencia = CodeFluentPersistence.GetReaderValue(reader, "Ruta_Secuencia", ((int)(-1)));
            //TODO: Puede ser que solo sean los Identity y no todo los primary keys
            this._role_Numero = CodeFluentPersistence.GetReaderValue(reader, "Role_Numero", ((int)(-1)));
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecordOnSave, false, false));
        }

        void CodeFluent.Runtime.ICodeFluentEntity.ReadRecordOnSave(System.Data.IDataReader reader)
        {
            this.ReadRecordOnSave(reader);
        }
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans Load(int documento_Secuencia,int zona_Secuencia,int ruta_Secuencia,int role_Numero)
        {
            if ((documento_Secuencia == default(int)))
            {
                return null;
            }
            if ((zona_Secuencia == default(int)))
            {
                return null;
            }
            if ((ruta_Secuencia == default(int)))
            {
                return null;
            }
            if ((role_Numero == default(int)))
            {
                return null;
            }
            OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans = new OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans();
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Documentos_Objetivos_Trans", null,  "Proc_Documentos_Objetivos_Trans");
            persistence.AddRawParameter("@Documento_Secuencia", documento_Secuencia);
            persistence.AddRawParameter("@Zona_Secuencia", zona_Secuencia);
            persistence.AddRawParameter("@Ruta_Secuencia", ruta_Secuencia);
            persistence.AddRawParameter("@Role_Numero", role_Numero);
            System.Data.IDataReader reader = null;
            try
            {
                reader = persistence.ExecuteReader();
                if ((reader.Read() == true))
                {
                    documentosObjetivosTrans.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.Default);
                    documentosObjetivosTrans.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
                    return documentosObjetivosTrans;
                }
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                persistence.CompleteCommand();
            }
            return null;
        }

        public virtual bool Reload(CodeFluent.Runtime.CodeFluentReloadOptions options)
        {
            bool ret = false;
            if (
            (this.Documento_Secuencia == -1) 
||
            (this.Zona_Secuencia == -1) 
||
            (this.Ruta_Secuencia == -1) 
||
            (this.Role_Numero == -1) 
              )
            {
                return ret;
            }
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Documentos_Objetivos_Trans", null,  "Proc_Documentos_Objetivos_Trans");
            persistence.AddRawParameter("@Documento_Secuencia", this.Documento_Secuencia);
            persistence.AddRawParameter("@Zona_Secuencia", this.Zona_Secuencia);
            persistence.AddRawParameter("@Ruta_Secuencia", this.Ruta_Secuencia);
            persistence.AddRawParameter("@Role_Numero", this.Role_Numero);
            System.Data.IDataReader reader = null;
            try
            {
                reader = persistence.ExecuteReader();
                if ((reader.Read() == true))
                {
                    this.ReadRecord(reader, options);
                    this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
                    ret = true;
                }
                else
                {
                    this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted;
                }
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                persistence.CompleteCommand();
            }
            return ret;
        }

        protected virtual bool BaseSave(bool force)
        {
            if ((this.EntityState == CodeFluent.Runtime.CodeFluentEntityState.ToBeDeleted))
            {
                this.Delete();
                return false;
            }
            CodeFluent.Runtime.CodeFluentEntityActionEventArgs evt = new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Saving, true);
            this.OnEntityAction(evt);
            if ((evt.Cancel == true))
            {
                return false;
            }
            CodeFluentPersistence.ThrowIfDeleted(this);
            this.Validate();
            if (((force == false) 
                        && (this.EntityState == CodeFluent.Runtime.CodeFluentEntityState.Unchanged)))
            {
                return false;
            }
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Documentos_Objetivos_Trans", "Editar");
            persistence.AddRawParameter("@Documento_Secuencia", Documento_Secuencia);
            persistence.AddRawParameter("@Zona_Secuencia", Zona_Secuencia);
            persistence.AddRawParameter("@Ruta_Secuencia", Ruta_Secuencia);
            persistence.AddRawParameter("@Role_Numero", Role_Numero);
            persistence.AddRawParameter("@Registro_Estado", Registro_Estado);
            persistence.AddRawParameter("@Registro_Fecha", Registro_Fecha);
            persistence.AddRawParameter("@Registro_Usuario", Registro_Usuario);
            System.Data.IDataReader reader = null;
            try
            {
                reader = persistence.ExecuteReader();
                if ((reader.Read() == true))
                {
                    this.ReadRecordOnSave(reader);
                }
                CodeFluentPersistence.NextResults(reader);
            }
            finally
            {
                if ((reader != null))
                {
                    reader.Dispose();
                }
                persistence.CompleteCommand();
            }
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Saved, false, false));
            this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged;
            return true;
        }
        
        public virtual bool Save()
        {
            bool localSave = this.BaseSave(false);
            return localSave;
        }
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public static bool Save(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans)
        {
            if ((documentosObjetivosTrans == null))
            {
                return false;
            }
            bool ret = documentosObjetivosTrans.Save();
            return ret;
        }

        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public static bool Insert(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans)
        {
            bool ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans.Save(documentosObjetivosTrans);
            return ret;
        }

        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public static bool Delete(OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans)
        {
            if ((documentosObjetivosTrans == null))
            {
                return false;
            }
            bool ret = documentosObjetivosTrans.Delete();
            return ret;
        }

        public virtual bool Delete()
        {
            bool ret = false;
            CodeFluent.Runtime.CodeFluentEntityActionEventArgs evt = new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Deleting, true);
            this.OnEntityAction(evt);
            if ((evt.Cancel == true))
            {
                return ret;
            }
            if ((this.EntityState == CodeFluent.Runtime.CodeFluentEntityState.Deleted))
            {
                return ret;
            }
            CodeFluent.Runtime.CodeFluentPersistence persistence = CodeFluentContext.Get(OSIS.PEPPAM.BOM.Constants.OSIS_PEPPAM_BOMStoreName).Persistence;
            persistence.CreateStoredProcedureCommand(null, "Proc_Documentos_Objetivos_Trans", "Borrar");
            persistence.AddRawParameter("@Documento_Secuencia", this.Documento_Secuencia);
            persistence.AddRawParameter("@Zona_Secuencia", this.Zona_Secuencia);
            persistence.AddRawParameter("@Ruta_Secuencia", this.Ruta_Secuencia);
            persistence.AddRawParameter("@Role_Numero", this.Role_Numero);
            persistence.ExecuteNonQuery();
            this.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted;
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.Deleted, false, false));
            ret = true;
            return ret;
        }

        public string Trace()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            System.IO.StringWriter stringWriter = new System.IO.StringWriter(stringBuilder, System.Globalization.CultureInfo.CurrentCulture);
            System.CodeDom.Compiler.IndentedTextWriter writer = new System.CodeDom.Compiler.IndentedTextWriter(stringWriter);
            this.BaseTrace(writer);
            writer.Flush();
            ((System.IDisposable)(writer)).Dispose();
            ((System.IDisposable)(stringWriter)).Dispose();
            string sr = stringBuilder.ToString();
            return sr;
        }

        void CodeFluent.Runtime.ICodeFluentObject.Trace(System.CodeDom.Compiler.IndentedTextWriter writer)
        {
            this.BaseTrace(writer);
        }

        protected virtual void BaseTrace(System.CodeDom.Compiler.IndentedTextWriter writer)
        {
            writer.Write("[");
            writer.Write("Documento_Secuencia=");
            writer.Write(this.Documento_Secuencia);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Registro_Estado=");
            writer.Write(this.Registro_Estado);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Registro_Fecha=");
            writer.Write(this.Registro_Fecha);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Registro_Usuario=");
            writer.Write(this.Registro_Usuario);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Role_Numero=");
            writer.Write(this.Role_Numero);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Ruta_Secuencia=");
            writer.Write(this.Ruta_Secuencia);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write("Zona_Secuencia=");
            writer.Write(this.Zona_Secuencia);
            writer.Write(",");
            writer.WriteLine("");
            writer.Write(" RutasMaster=");
            if ((this._rutas_Master != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._rutas_Master)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write(" ZonasMaster=");
            if ((this._zonas_Master != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._zonas_Master)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write(" RolesCata=");
            if ((this._roles_Cata != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._roles_Cata)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write(" DocumentosMaster=");
            if ((this._documentos_Master != null))
            {
                ((CodeFluent.Runtime.ICodeFluentObject)(this._documentos_Master)).Trace(writer);
            }
            else
            {
                writer.Write("<null>");
            }
            writer.Write(",");
            writer.Write(", EntityState=");
            writer.Write(this.EntityState);
            writer.Write("]");
        }

        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans LoadByEntityKey(string key)
        {
            if ((key == string.Empty))
            {
                return null;
            }
            OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans documentosObjetivosTrans;
            System.Type[] types = new System.Type[] {
                    typeof(int),                    typeof(int),                    typeof(int),                    typeof(int)                    };
            object[] defaultValues = new object[] {
                    -1,                    -1,                    -1,                    -1                    };
            object[] v = CodeFluentPersistence.ParseEntityKey(key, types, defaultValues);
                    int var0;            var0 = ((int)(v[0]));
                    int var1;            var1 = ((int)(v[1]));
                    int var2;            var2 = ((int)(v[2]));
                    int var3;            var3 = ((int)(v[3]));
            documentosObjetivosTrans = OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans.Load( var0, var1, var2, var3);
            return documentosObjetivosTrans;
        }

        public  OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans Clone(bool deep)
        {
             OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans  documentosObjetivosTrans = new  OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans();
            this.CopyTo(documentosObjetivosTrans , deep);
            return documentosObjetivosTrans ;
        }

        public OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans Clone()
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans localClone = this.Clone(true);
            return localClone;
        }

        object System.ICloneable.Clone()
        {
            object localClone = this.Clone();
            return localClone;
        }

        public virtual void CopyFrom(System.Collections.IDictionary dict, bool deep)
        {
            if ((dict == null))
            {
                throw new System.ArgumentNullException("dict");
            }
            if ((dict.Contains("Documento_Secuencia") == true))
            {
                this.Documento_Secuencia = ((int)(ConvertUtilities.ChangeType(dict["Documento_Secuencia"], typeof(int), -1)));
            }
            if ((dict.Contains("Registro_Estado") == true))
            {
                this.Registro_Estado = ((string)(ConvertUtilities.ChangeType(dict["Registro_Estado"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Registro_Fecha") == true))
            {
                this.Registro_Fecha = ((DateTime)(ConvertUtilities.ChangeType(dict["Registro_Fecha"], typeof(DateTime), System.DateTime.MinValue)));
            }
            if ((dict.Contains("Registro_Usuario") == true))
            {
                this.Registro_Usuario = ((string)(ConvertUtilities.ChangeType(dict["Registro_Usuario"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Role_Numero") == true))
            {
                this.Role_Numero = ((int)(ConvertUtilities.ChangeType(dict["Role_Numero"], typeof(int), -1)));
            }
            if ((dict.Contains("Ruta_Secuencia") == true))
            {
                this.Ruta_Secuencia = ((int)(ConvertUtilities.ChangeType(dict["Ruta_Secuencia"], typeof(int), -1)));
            }
            if ((dict.Contains("Zona_Secuencia") == true))
            {
                this.Zona_Secuencia = ((int)(ConvertUtilities.ChangeType(dict["Zona_Secuencia"], typeof(int), -1)));
            }
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.CopyFrom, false, dict));
        }

        public virtual void CopyTo( OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans  documentosObjetivosTrans, bool deep)
        {
            if ((documentosObjetivosTrans == null))
            {
                throw new System.ArgumentNullException("documentosObjetivosTrans");
            }
            documentosObjetivosTrans.Documento_Secuencia = this.Documento_Secuencia;
            documentosObjetivosTrans.Registro_Estado = this.Registro_Estado;
            documentosObjetivosTrans.Registro_Fecha = this.Registro_Fecha;
            documentosObjetivosTrans.Registro_Usuario = this.Registro_Usuario;
            documentosObjetivosTrans.Role_Numero = this.Role_Numero;
            documentosObjetivosTrans.Ruta_Secuencia = this.Ruta_Secuencia;
            documentosObjetivosTrans.Zona_Secuencia = this.Zona_Secuencia;
            this.OnEntityAction(new CodeFluent.Runtime.CodeFluentEntityActionEventArgs(this, CodeFluent.Runtime.CodeFluentEntityAction.CopyTo, false, documentosObjetivosTrans));
        }


// Metodos Definidos en el Modelo y las propiedades CollectionKey
		#region Static SQL Methods

		internal static string GetFieldAliasFromFieldNameSqlMapping(string alias)
		{
			alias = alias.Replace("[", string.Empty).Replace("]", string.Empty);
			switch (alias.ToLower())
			{
				case "documento_secuencia": return "documento_secuencia";
				case "registro_estado": return "registro_estado";
				case "registro_fecha": return "registro_fecha";
				case "registro_usuario": return "registro_usuario";
				case "role_numero": return "role_numero";
				case "ruta_secuencia": return "ruta_secuencia";
				case "zona_secuencia": return "zona_secuencia";
				default: throw new Exception("The select clause is not valid.");
			}
		}

		internal static string GetTableFromFieldAliasSqlMapping(string alias)
		{
			switch (alias.ToLower())
			{
				case "documento_secuencia": return "Documentos_Objetivos_Trans";
				case "registro_estado": return "Documentos_Objetivos_Trans";
				case "registro_fecha": return "Documentos_Objetivos_Trans";
				case "registro_usuario": return "Documentos_Objetivos_Trans";
				case "role_numero": return "Documentos_Objetivos_Trans";
				case "ruta_secuencia": return "Documentos_Objetivos_Trans";
				case "zona_secuencia": return "Documentos_Objetivos_Trans";
				default: throw new Exception("The select clause is not valid.");
			}
		}

		internal static string GetTableFromFieldNameSqlMapping(string field)
		{
			switch (field.ToLower())
			{
				case "documento_secuencia": return "Documentos_Objetivos_Trans";
				case "registro_estado": return "Documentos_Objetivos_Trans";
				case "registro_fecha": return "Documentos_Objetivos_Trans";
				case "registro_usuario": return "Documentos_Objetivos_Trans";
				case "role_numero": return "Documentos_Objetivos_Trans";
				case "ruta_secuencia": return "Documentos_Objetivos_Trans";
				case "zona_secuencia": return "Documentos_Objetivos_Trans";
				default: throw new Exception("The select clause is not valid.");
			}
		}

		internal static string GetRemappedLinqSql(string sql, string parentAlias, LinqSQLFromClauseCollection childTables)
		{
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[documento_secuencia\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Documentos_Objetivos_Trans") + "].[documento_secuencia]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[registro_estado\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Documentos_Objetivos_Trans") + "].[registro_estado]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[registro_fecha\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Documentos_Objetivos_Trans") + "].[registro_fecha]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[registro_usuario\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Documentos_Objetivos_Trans") + "].[registro_usuario]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[role_numero\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Documentos_Objetivos_Trans") + "].[role_numero]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[ruta_secuencia\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Documentos_Objetivos_Trans") + "].[ruta_secuencia]", RegexOptions.IgnoreCase);
			sql = System.Text.RegularExpressions.Regex.Replace(sql, "\\[" + parentAlias + "\\]\\.\\[zona_secuencia\\]", "[" + childTables.GetBaseAliasTable(parentAlias, "Documentos_Objetivos_Trans") + "].[zona_secuencia]", RegexOptions.IgnoreCase);
			return sql;
		}

		#endregion


	}

}

