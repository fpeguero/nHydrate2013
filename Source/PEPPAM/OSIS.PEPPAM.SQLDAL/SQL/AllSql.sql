/*
//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 6/14/2014 9:45:33 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

*/
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Circuitos_Cata
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Circuitos_Cata_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Circuitos_Cata_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Circuitos_Cata_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Circuitos_Cata_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Circuitos_Cata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Circuitos_Cata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Circuitos_Cata_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Circuitos_Cata_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Circuitos_Cata_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Circuitos_Cata_Paging]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Circuitos_Cata_Editar]
(
	@Circuito_Descripcion  [VarChar]  (50),
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Circuito_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Circuitos_Cata] 
SET
	[Circuito_Descripcion] = @Circuito_Descripcion,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Circuitos_Cata].[Circuito_Numero] = @Circuito_Numero



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Circuitos_Cata]
(
	[Circuito_Descripcion],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Circuito_Descripcion,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Circuito_Numero = SCOPE_IDENTITY() 
    SELECT DISTINCT @Circuito_Numero AS 'Circuito_Numero' 
        FROM [Circuitos_Cata]
        WHERE ([Circuitos_Cata].[Circuito_Numero] = @Circuito_Numero)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Circuitos_Cata_Borrar]
(
	@Circuito_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Congregaciones_Master] SET
     [Congregaciones_Master].[Circuito_Numero] = NULL
    WHERE     ([Congregaciones_Master].[Circuito_Numero] = @Circuito_Numero)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Circuitos_Cata]
    WHERE 
      ([Circuitos_Cata].[Circuito_Numero] = @Circuito_Numero)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Circuitos_Cata]
(
	@Circuito_Numero  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Circuitos_Cata].[Circuito_Numero],
                [Circuitos_Cata].[Circuito_Descripcion],
                [Circuitos_Cata].[Registro_Estado],
                [Circuitos_Cata].[Registro_Fecha],
                [Circuitos_Cata].[Registro_Usuario]
    FROM [Circuitos_Cata]
    WHERE 
     ( [Circuitos_Cata].[Circuito_Numero] = @Circuito_Numero)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Circuitos_Cata_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Circuitos_Cata].[Circuito_Numero],
                [Circuitos_Cata].[Circuito_Descripcion],
                [Circuitos_Cata].[Registro_Estado],
                [Circuitos_Cata].[Registro_Fecha],
                [Circuitos_Cata].[Registro_Usuario]
    FROM [Circuitos_Cata]

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Circuitos_Cata_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [cc].[Circuito_Numero]
 ) AS [RowNumber],
				   cc.Circuito_Numero , 
				   cc.Circuito_Descripcion , 
				   cc.Registro_Estado , 
				   cc.Registro_Fecha , 
				   cc.Registro_Usuario
		FROM  [dbo].[Circuitos_Cata]	As cc	

		   WHERE cc.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(cc.Circuito_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR cc.Circuito_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR cc.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(cc.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR cc.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Circuito_Numero]' AND @_orderByDirection0 = 0 THEN [Circuito_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Circuito_Numero]' AND @_orderByDirection0 = 1 THEN [Circuito_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Circuito_Descripcion]' AND @_orderByDirection0 = 0 THEN [Circuito_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Circuito_Descripcion]' AND @_orderByDirection0 = 1 THEN [Circuito_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Congregaciones_Master
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Congregaciones_Master_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Congregaciones_Master_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Congregaciones_Master_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Congregaciones_Master_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Congregaciones_Master]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Congregaciones_Master]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Congregaciones_Master_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Congregaciones_Master_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Congregaciones_Master_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Congregaciones_Master_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Congregaciones_Master_Circuito]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Congregaciones_Master_Circuito]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Congregaciones_Master_Zona]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Congregaciones_Master_Zona]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Congregaciones_Master_Editar]
(
	@Circuito_Numero  [Int] ,
	@Congregacion_Direccion  [VarChar]  (150),
	@Congregacion_Nombre  [VarChar]  (50),
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Zona_Secuencia  [Int] ,
	@Congregacion_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Congregaciones_Master] 
SET
	[Circuito_Numero] = @Circuito_Numero,
	[Congregacion_Direccion] = @Congregacion_Direccion,
	[Congregacion_Nombre] = @Congregacion_Nombre,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario,
	[Zona_Secuencia] = @Zona_Secuencia

WHERE
	[dbo].[Congregaciones_Master].[Congregacion_Secuencia] = @Congregacion_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Congregaciones_Master]
(
	[Circuito_Numero],
	[Congregacion_Direccion],
	[Congregacion_Nombre],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Zona_Secuencia]
)
VALUES
(
	@Circuito_Numero,
	@Congregacion_Direccion,
	@Congregacion_Nombre,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Zona_Secuencia
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Congregacion_Secuencia = SCOPE_IDENTITY() 
    SELECT DISTINCT @Congregacion_Secuencia AS 'Congregacion_Secuencia' 
        FROM [Congregaciones_Master]
        WHERE ([Congregaciones_Master].[Congregacion_Secuencia] = @Congregacion_Secuencia)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Congregaciones_Master_Borrar]
(
	@Congregacion_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Personas_Master] SET
     [Personas_Master].[Congregacion_Secuencia] = NULL
    WHERE     ([Personas_Master].[Congregacion_Secuencia] = @Congregacion_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Congregaciones_Master]
    WHERE 
      ([Congregaciones_Master].[Congregacion_Secuencia] = @Congregacion_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Congregaciones_Master]
(
	@Congregacion_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Congregaciones_Master].[Congregacion_Secuencia],
                [Congregaciones_Master].[Circuito_Numero],
                [Congregaciones_Master].[Zona_Secuencia],
                [Congregaciones_Master].[Congregacion_Nombre],
                [Congregaciones_Master].[Congregacion_Direccion],
                [Congregaciones_Master].[Registro_Estado],
                [Congregaciones_Master].[Registro_Fecha],
                [Congregaciones_Master].[Registro_Usuario]
    FROM [Congregaciones_Master]
    WHERE 
     ( [Congregaciones_Master].[Congregacion_Secuencia] = @Congregacion_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Congregaciones_Master_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Congregaciones_Master].[Congregacion_Secuencia],
                [Congregaciones_Master].[Circuito_Numero],
                [Congregaciones_Master].[Zona_Secuencia],
                [Congregaciones_Master].[Congregacion_Nombre],
                [Congregaciones_Master].[Congregacion_Direccion],
                [Congregaciones_Master].[Registro_Estado],
                [Congregaciones_Master].[Registro_Fecha],
                [Congregaciones_Master].[Registro_Usuario]
    FROM [Congregaciones_Master]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Congregaciones_Master_Circuito]
(
	@Circuito_Numero  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Congregaciones_Master].[Congregacion_Secuencia],
                [Congregaciones_Master].[Circuito_Numero],
                [Congregaciones_Master].[Zona_Secuencia],
                [Congregaciones_Master].[Congregacion_Nombre],
                [Congregaciones_Master].[Congregacion_Direccion],
                [Congregaciones_Master].[Registro_Estado],
                [Congregaciones_Master].[Registro_Fecha],
                [Congregaciones_Master].[Registro_Usuario]
    FROM [Congregaciones_Master]
      WHERE
        ([Congregaciones_Master].[Circuito_Numero] = @Circuito_Numero)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Congregaciones_Master_Zona]
(
	@Zona_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Congregaciones_Master].[Congregacion_Secuencia],
                [Congregaciones_Master].[Circuito_Numero],
                [Congregaciones_Master].[Zona_Secuencia],
                [Congregaciones_Master].[Congregacion_Nombre],
                [Congregaciones_Master].[Congregacion_Direccion],
                [Congregaciones_Master].[Registro_Estado],
                [Congregaciones_Master].[Registro_Fecha],
                [Congregaciones_Master].[Registro_Usuario]
    FROM [Congregaciones_Master]
      WHERE
        ([Congregaciones_Master].[Zona_Secuencia] = @Zona_Secuencia)


RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Congregaciones_Master_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [cm].[Congregacion_Secuencia]
 ) AS [RowNumber],
				   cm.Congregacion_Secuencia , 
				   cm.Circuito_Numero , 
				   cm.Zona_Secuencia , 
				   cm.Congregacion_Nombre , 
				   cm.Congregacion_Direccion , 
				   cm.Registro_Estado , 
				   cm.Registro_Fecha , 
				   cm.Registro_Usuario
		FROM  [dbo].[Congregaciones_Master]	As cm	
			 Inner Join Circuitos_Cata As cc
			   On  cc.Circuito_Numero = cm.Circuito_Numero
			 Inner Join Zonas_Master As zm
			   On  zm.Zona_Secuencia = cm.Zona_Secuencia

		   WHERE cm.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(cm.Congregacion_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(cm.Circuito_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(cm.Zona_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR cm.Congregacion_Nombre LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR cm.Congregacion_Direccion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR cm.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(cm.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR cm.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Congregacion_Secuencia]' AND @_orderByDirection0 = 0 THEN [Congregacion_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Congregacion_Secuencia]' AND @_orderByDirection0 = 1 THEN [Congregacion_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Circuito_Numero]' AND @_orderByDirection0 = 0 THEN [Circuito_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Circuito_Numero]' AND @_orderByDirection0 = 1 THEN [Circuito_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Zona_Secuencia]' AND @_orderByDirection0 = 0 THEN [Zona_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Zona_Secuencia]' AND @_orderByDirection0 = 1 THEN [Zona_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Congregacion_Nombre]' AND @_orderByDirection0 = 0 THEN [Congregacion_Nombre]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Congregacion_Nombre]' AND @_orderByDirection0 = 1 THEN [Congregacion_Nombre]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Congregacion_Direccion]' AND @_orderByDirection0 = 0 THEN [Congregacion_Direccion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Congregacion_Direccion]' AND @_orderByDirection0 = 1 THEN [Congregacion_Direccion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Contacto_Tipo_Cata
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Contacto_Tipo_Cata_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Contacto_Tipo_Cata_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Contacto_Tipo_Cata_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Contacto_Tipo_Cata_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Contacto_Tipo_Cata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Contacto_Tipo_Cata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Contacto_Tipo_Cata_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Contacto_Tipo_Cata_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Contacto_Tipo_Cata_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Contacto_Tipo_Cata_Paging]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Contacto_Tipo_Cata_Editar]
(
	@Contacto_Tipo_Descripcion  [VarChar]  (50),
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Contacto_Tipo_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Contacto_Tipo_Cata] 
SET
	[Contacto_Tipo_Descripcion] = @Contacto_Tipo_Descripcion,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Contacto_Tipo_Cata].[Contacto_Tipo_Secuencia] = @Contacto_Tipo_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Contacto_Tipo_Cata]
(
	[Contacto_Tipo_Descripcion],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Contacto_Tipo_Descripcion,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Contacto_Tipo_Secuencia = SCOPE_IDENTITY() 
    SELECT DISTINCT @Contacto_Tipo_Secuencia AS 'Contacto_Tipo_Secuencia' 
        FROM [Contacto_Tipo_Cata]
        WHERE ([Contacto_Tipo_Cata].[Contacto_Tipo_Secuencia] = @Contacto_Tipo_Secuencia)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Contacto_Tipo_Cata_Borrar]
(
	@Contacto_Tipo_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Persona_Contactos_Trans] SET
     [Persona_Contactos_Trans].[Contacto_Tipo_Secuencia] = NULL
    WHERE     ([Persona_Contactos_Trans].[Contacto_Tipo_Secuencia] = @Contacto_Tipo_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Contacto_Tipo_Cata]
    WHERE 
      ([Contacto_Tipo_Cata].[Contacto_Tipo_Secuencia] = @Contacto_Tipo_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Contacto_Tipo_Cata]
(
	@Contacto_Tipo_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Contacto_Tipo_Cata].[Contacto_Tipo_Secuencia],
                [Contacto_Tipo_Cata].[Contacto_Tipo_Descripcion],
                [Contacto_Tipo_Cata].[Registro_Estado],
                [Contacto_Tipo_Cata].[Registro_Fecha],
                [Contacto_Tipo_Cata].[Registro_Usuario]
    FROM [Contacto_Tipo_Cata]
    WHERE 
     ( [Contacto_Tipo_Cata].[Contacto_Tipo_Secuencia] = @Contacto_Tipo_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Contacto_Tipo_Cata_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Contacto_Tipo_Cata].[Contacto_Tipo_Secuencia],
                [Contacto_Tipo_Cata].[Contacto_Tipo_Descripcion],
                [Contacto_Tipo_Cata].[Registro_Estado],
                [Contacto_Tipo_Cata].[Registro_Fecha],
                [Contacto_Tipo_Cata].[Registro_Usuario]
    FROM [Contacto_Tipo_Cata]

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Contacto_Tipo_Cata_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [ctc].[Contacto_Tipo_Secuencia]
 ) AS [RowNumber],
				   ctc.Contacto_Tipo_Secuencia , 
				   ctc.Contacto_Tipo_Descripcion , 
				   ctc.Registro_Estado , 
				   ctc.Registro_Fecha , 
				   ctc.Registro_Usuario
		FROM  [dbo].[Contacto_Tipo_Cata]	As ctc	

		   WHERE ctc.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(ctc.Contacto_Tipo_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ctc.Contacto_Tipo_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ctc.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(ctc.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ctc.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Contacto_Tipo_Secuencia]' AND @_orderByDirection0 = 0 THEN [Contacto_Tipo_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Contacto_Tipo_Secuencia]' AND @_orderByDirection0 = 1 THEN [Contacto_Tipo_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Contacto_Tipo_Descripcion]' AND @_orderByDirection0 = 0 THEN [Contacto_Tipo_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Contacto_Tipo_Descripcion]' AND @_orderByDirection0 = 1 THEN [Contacto_Tipo_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Dias_Cata
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Dias_Cata_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Dias_Cata_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Dias_Cata_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Dias_Cata_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Dias_Cata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Dias_Cata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Dias_Cata_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Dias_Cata_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Dias_Cata_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Dias_Cata_Paging]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Dias_Cata_Editar]
(
	@Dia_Descripcion  [VarChar]  (50),
	@Dia_Orden  [Int] ,
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Dia_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Dias_Cata] 
SET
	[Dia_Descripcion] = @Dia_Descripcion,
	[Dia_Orden] = @Dia_Orden,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Dias_Cata].[Dia_Secuencia] = @Dia_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Dias_Cata]
(
	[Dia_Descripcion],
	[Dia_Orden],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Dia_Descripcion,
	@Dia_Orden,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Dia_Secuencia = SCOPE_IDENTITY() 
    SELECT DISTINCT @Dia_Secuencia AS 'Dia_Secuencia' 
        FROM [Dias_Cata]
        WHERE ([Dias_Cata].[Dia_Secuencia] = @Dia_Secuencia)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Dias_Cata_Borrar]
(
	@Dia_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Horario_Turno_Dias_Trans] SET
     [Horario_Turno_Dias_Trans].[Dia_Secuencia] = NULL
    WHERE     ([Horario_Turno_Dias_Trans].[Dia_Secuencia] = @Dia_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Turnos_Dias_Trans] SET
     [Turnos_Dias_Trans].[Dia_Secuencia] = NULL
    WHERE     ([Turnos_Dias_Trans].[Dia_Secuencia] = @Dia_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Personas_Diponibilidad] SET
     [Personas_Diponibilidad].[Dia_Secuencia] = NULL
    WHERE     ([Personas_Diponibilidad].[Dia_Secuencia] = @Dia_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Dias_Cata]
    WHERE 
      ([Dias_Cata].[Dia_Secuencia] = @Dia_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Dias_Cata]
(
	@Dia_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Dias_Cata].[Dia_Secuencia],
                [Dias_Cata].[Dia_Descripcion],
                [Dias_Cata].[Dia_Orden],
                [Dias_Cata].[Registro_Estado],
                [Dias_Cata].[Registro_Fecha],
                [Dias_Cata].[Registro_Usuario]
    FROM [Dias_Cata]
    WHERE 
     ( [Dias_Cata].[Dia_Secuencia] = @Dia_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Dias_Cata_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Dias_Cata].[Dia_Secuencia],
                [Dias_Cata].[Dia_Descripcion],
                [Dias_Cata].[Dia_Orden],
                [Dias_Cata].[Registro_Estado],
                [Dias_Cata].[Registro_Fecha],
                [Dias_Cata].[Registro_Usuario]
    FROM [Dias_Cata]

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Dias_Cata_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [dc].[Dia_Secuencia]
 ) AS [RowNumber],
				   dc.Dia_Secuencia , 
				   dc.Dia_Descripcion , 
				   dc.Dia_Orden , 
				   dc.Registro_Estado , 
				   dc.Registro_Fecha , 
				   dc.Registro_Usuario
		FROM  [dbo].[Dias_Cata]	As dc	

		   WHERE dc.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(dc.Dia_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR dc.Dia_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(dc.Dia_Orden) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR dc.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(dc.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR dc.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Dia_Secuencia]' AND @_orderByDirection0 = 0 THEN [Dia_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Dia_Secuencia]' AND @_orderByDirection0 = 1 THEN [Dia_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Dia_Descripcion]' AND @_orderByDirection0 = 0 THEN [Dia_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Dia_Descripcion]' AND @_orderByDirection0 = 1 THEN [Dia_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Dia_Orden]' AND @_orderByDirection0 = 0 THEN [Dia_Orden]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Dia_Orden]' AND @_orderByDirection0 = 1 THEN [Dia_Orden]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Documentos_Master
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Documentos_Master_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Documentos_Master_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Documentos_Master_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Documentos_Master_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Documentos_Master]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Documentos_Master]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Documentos_Master_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Documentos_Master_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Documentos_Master_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Documentos_Master_Paging]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Documentos_Master_Editar]
(
	@Documento_Archivo_Nombre  [VarChar]  (250),
	@Documento_Descripcion  [VarChar]  (500),
	@Documento_Nombre  [VarChar]  (50),
	@Registro_Estado  [Char]  (1) = 'A',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (150),
	@Documento_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Documentos_Master] 
SET
	[Documento_Archivo_Nombre] = @Documento_Archivo_Nombre,
	[Documento_Descripcion] = @Documento_Descripcion,
	[Documento_Nombre] = @Documento_Nombre,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Documentos_Master].[Documento_Secuencia] = @Documento_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Documentos_Master]
(
	[Documento_Archivo_Nombre],
	[Documento_Descripcion],
	[Documento_Nombre],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Documento_Archivo_Nombre,
	@Documento_Descripcion,
	@Documento_Nombre,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Documento_Secuencia = SCOPE_IDENTITY() 
    SELECT DISTINCT @Documento_Secuencia AS 'Documento_Secuencia' 
        FROM [Documentos_Master]
        WHERE ([Documentos_Master].[Documento_Secuencia] = @Documento_Secuencia)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Documentos_Master_Borrar]
(
	@Documento_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Documentos_Objetivos_Trans] SET
     [Documentos_Objetivos_Trans].[Documento_Secuencia] = NULL
    WHERE     ([Documentos_Objetivos_Trans].[Documento_Secuencia] = @Documento_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Documentos_Master]
    WHERE 
      ([Documentos_Master].[Documento_Secuencia] = @Documento_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Documentos_Master]
(
	@Documento_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Documentos_Master].[Documento_Secuencia],
                [Documentos_Master].[Documento_Nombre],
                [Documentos_Master].[Documento_Descripcion],
                [Documentos_Master].[Documento_Archivo_Nombre],
                [Documentos_Master].[Registro_Estado],
                [Documentos_Master].[Registro_Fecha],
                [Documentos_Master].[Registro_Usuario]
    FROM [Documentos_Master]
    WHERE 
     ( [Documentos_Master].[Documento_Secuencia] = @Documento_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Documentos_Master_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Documentos_Master].[Documento_Secuencia],
                [Documentos_Master].[Documento_Nombre],
                [Documentos_Master].[Documento_Descripcion],
                [Documentos_Master].[Documento_Archivo_Nombre],
                [Documentos_Master].[Registro_Estado],
                [Documentos_Master].[Registro_Fecha],
                [Documentos_Master].[Registro_Usuario]
    FROM [Documentos_Master]

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Documentos_Master_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [dm].[Documento_Secuencia]
 ) AS [RowNumber],
				   dm.Documento_Secuencia , 
				   dm.Documento_Nombre , 
				   dm.Documento_Descripcion , 
				   dm.Documento_Archivo_Nombre , 
				   dm.Registro_Estado , 
				   dm.Registro_Fecha , 
				   dm.Registro_Usuario
		FROM  [dbo].[Documentos_Master]	As dm	

		   WHERE dm.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(dm.Documento_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR dm.Documento_Nombre LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR dm.Documento_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR dm.Documento_Archivo_Nombre LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR dm.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(dm.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR dm.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Documento_Secuencia]' AND @_orderByDirection0 = 0 THEN [Documento_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Documento_Secuencia]' AND @_orderByDirection0 = 1 THEN [Documento_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Documento_Nombre]' AND @_orderByDirection0 = 0 THEN [Documento_Nombre]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Documento_Nombre]' AND @_orderByDirection0 = 1 THEN [Documento_Nombre]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Documento_Descripcion]' AND @_orderByDirection0 = 0 THEN [Documento_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Documento_Descripcion]' AND @_orderByDirection0 = 1 THEN [Documento_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Documento_Archivo_Nombre]' AND @_orderByDirection0 = 0 THEN [Documento_Archivo_Nombre]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Documento_Archivo_Nombre]' AND @_orderByDirection0 = 1 THEN [Documento_Archivo_Nombre]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Documentos_Objetivos_Trans
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Documentos_Objetivos_Trans_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Documentos_Objetivos_Trans_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Documentos_Objetivos_Trans_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Documentos_Objetivos_Trans_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Documentos_Objetivos_Trans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Documentos_Objetivos_Trans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Documentos_Objetivos_Trans_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Documentos_Objetivos_Trans_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Documentos_Objetivos_Trans_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Documentos_Objetivos_Trans_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Documentos_Objetivos_Trans_DocumentosMaster]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Documentos_Objetivos_Trans_DocumentosMaster]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Documentos_Objetivos_Trans_RolesCata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Documentos_Objetivos_Trans_RolesCata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Documentos_Objetivos_Trans_RutasMaster]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Documentos_Objetivos_Trans_RutasMaster]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Documentos_Objetivos_Trans_ZonasMaster]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Documentos_Objetivos_Trans_ZonasMaster]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Documentos_Objetivos_Trans_Editar]
(
	@Registro_Estado  [Char]  (1) = 'A',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (150),
	@Documento_Secuencia  [Int] ,
	@Role_Numero  [Int] ,
	@Ruta_Secuencia  [Int] ,
	@Zona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Documentos_Objetivos_Trans] 
SET
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Documentos_Objetivos_Trans].[Documento_Secuencia] = @Documento_Secuencia AND
	[dbo].[Documentos_Objetivos_Trans].[Role_Numero] = @Role_Numero AND
	[dbo].[Documentos_Objetivos_Trans].[Ruta_Secuencia] = @Ruta_Secuencia AND
	[dbo].[Documentos_Objetivos_Trans].[Zona_Secuencia] = @Zona_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Documentos_Objetivos_Trans]
(
	[Documento_Secuencia],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Role_Numero],
	[Ruta_Secuencia],
	[Zona_Secuencia]
)
VALUES
(
	@Documento_Secuencia,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Role_Numero,
	@Ruta_Secuencia,
	@Zona_Secuencia
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Documentos_Objetivos_Trans_Borrar]
(
	@Documento_Secuencia  [Int] ,
	@Role_Numero  [Int] ,
	@Ruta_Secuencia  [Int] ,
	@Zona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END


  DELETE FROM [Documentos_Objetivos_Trans]
    WHERE 
      ([Documentos_Objetivos_Trans].[Documento_Secuencia] = @Documento_Secuencia)
     AND       ([Documentos_Objetivos_Trans].[Zona_Secuencia] = @Zona_Secuencia)
     AND       ([Documentos_Objetivos_Trans].[Ruta_Secuencia] = @Ruta_Secuencia)
     AND       ([Documentos_Objetivos_Trans].[Role_Numero] = @Role_Numero)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Documentos_Objetivos_Trans]
(
	@Documento_Secuencia  [Int] ,
	@Role_Numero  [Int] ,
	@Ruta_Secuencia  [Int] ,
	@Zona_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Documentos_Objetivos_Trans].[Documento_Secuencia],
                [Documentos_Objetivos_Trans].[Zona_Secuencia],
                [Documentos_Objetivos_Trans].[Ruta_Secuencia],
                [Documentos_Objetivos_Trans].[Role_Numero],
                [Documentos_Objetivos_Trans].[Registro_Estado],
                [Documentos_Objetivos_Trans].[Registro_Fecha],
                [Documentos_Objetivos_Trans].[Registro_Usuario]
    FROM [Documentos_Objetivos_Trans]
    WHERE 
     ( [Documentos_Objetivos_Trans].[Documento_Secuencia] = @Documento_Secuencia)
     AND      ( [Documentos_Objetivos_Trans].[Zona_Secuencia] = @Zona_Secuencia)
     AND      ( [Documentos_Objetivos_Trans].[Ruta_Secuencia] = @Ruta_Secuencia)
     AND      ( [Documentos_Objetivos_Trans].[Role_Numero] = @Role_Numero)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Documentos_Objetivos_Trans_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Documentos_Objetivos_Trans].[Documento_Secuencia],
                [Documentos_Objetivos_Trans].[Zona_Secuencia],
                [Documentos_Objetivos_Trans].[Ruta_Secuencia],
                [Documentos_Objetivos_Trans].[Role_Numero],
                [Documentos_Objetivos_Trans].[Registro_Estado],
                [Documentos_Objetivos_Trans].[Registro_Fecha],
                [Documentos_Objetivos_Trans].[Registro_Usuario]
    FROM [Documentos_Objetivos_Trans]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Documentos_Objetivos_Trans_DocumentosMaster]
(
	@Documento_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Documentos_Objetivos_Trans].[Documento_Secuencia],
                [Documentos_Objetivos_Trans].[Zona_Secuencia],
                [Documentos_Objetivos_Trans].[Ruta_Secuencia],
                [Documentos_Objetivos_Trans].[Role_Numero],
                [Documentos_Objetivos_Trans].[Registro_Estado],
                [Documentos_Objetivos_Trans].[Registro_Fecha],
                [Documentos_Objetivos_Trans].[Registro_Usuario]
    FROM [Documentos_Objetivos_Trans]
      WHERE
        ([Documentos_Objetivos_Trans].[Documento_Secuencia] = @Documento_Secuencia)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Documentos_Objetivos_Trans_RolesCata]
(
	@Role_Numero  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Documentos_Objetivos_Trans].[Documento_Secuencia],
                [Documentos_Objetivos_Trans].[Zona_Secuencia],
                [Documentos_Objetivos_Trans].[Ruta_Secuencia],
                [Documentos_Objetivos_Trans].[Role_Numero],
                [Documentos_Objetivos_Trans].[Registro_Estado],
                [Documentos_Objetivos_Trans].[Registro_Fecha],
                [Documentos_Objetivos_Trans].[Registro_Usuario]
    FROM [Documentos_Objetivos_Trans]
      WHERE
        ([Documentos_Objetivos_Trans].[Role_Numero] = @Role_Numero)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Documentos_Objetivos_Trans_RutasMaster]
(
	@Ruta_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Documentos_Objetivos_Trans].[Documento_Secuencia],
                [Documentos_Objetivos_Trans].[Zona_Secuencia],
                [Documentos_Objetivos_Trans].[Ruta_Secuencia],
                [Documentos_Objetivos_Trans].[Role_Numero],
                [Documentos_Objetivos_Trans].[Registro_Estado],
                [Documentos_Objetivos_Trans].[Registro_Fecha],
                [Documentos_Objetivos_Trans].[Registro_Usuario]
    FROM [Documentos_Objetivos_Trans]
      WHERE
        ([Documentos_Objetivos_Trans].[Ruta_Secuencia] = @Ruta_Secuencia)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Documentos_Objetivos_Trans_ZonasMaster]
(
	@Zona_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Documentos_Objetivos_Trans].[Documento_Secuencia],
                [Documentos_Objetivos_Trans].[Zona_Secuencia],
                [Documentos_Objetivos_Trans].[Ruta_Secuencia],
                [Documentos_Objetivos_Trans].[Role_Numero],
                [Documentos_Objetivos_Trans].[Registro_Estado],
                [Documentos_Objetivos_Trans].[Registro_Fecha],
                [Documentos_Objetivos_Trans].[Registro_Usuario]
    FROM [Documentos_Objetivos_Trans]
      WHERE
        ([Documentos_Objetivos_Trans].[Zona_Secuencia] = @Zona_Secuencia)


RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Documentos_Objetivos_Trans_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [dot].[Documento_Secuencia],
		                [dot].[Zona_Secuencia],
		                [dot].[Ruta_Secuencia],
		                [dot].[Role_Numero]
 ) AS [RowNumber],
				   dot.Documento_Secuencia , 
				   dot.Zona_Secuencia , 
				   dot.Ruta_Secuencia , 
				   dot.Role_Numero , 
				   dot.Registro_Estado , 
				   dot.Registro_Fecha , 
				   dot.Registro_Usuario
		FROM  [dbo].[Documentos_Objetivos_Trans]	As dot	
			 Inner Join Documentos_Master As dm
			   On  dm.Documento_Secuencia = dot.Documento_Secuencia
			 Inner Join Roles_Cata As rc
			   On  rc.Role_Numero = dot.Role_Numero
			 Inner Join Rutas_Master As rm
			   On  rm.Ruta_Secuencia = dot.Ruta_Secuencia
			 Inner Join Zonas_Master As zm
			   On  zm.Zona_Secuencia = dot.Zona_Secuencia

		   WHERE dot.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(dot.Documento_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(dot.Zona_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(dot.Ruta_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(dot.Role_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR dot.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(dot.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR dot.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Documento_Secuencia]' AND @_orderByDirection0 = 0 THEN [Documento_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Documento_Secuencia]' AND @_orderByDirection0 = 1 THEN [Documento_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Zona_Secuencia]' AND @_orderByDirection0 = 0 THEN [Zona_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Zona_Secuencia]' AND @_orderByDirection0 = 1 THEN [Zona_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Secuencia]' AND @_orderByDirection0 = 0 THEN [Ruta_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Secuencia]' AND @_orderByDirection0 = 1 THEN [Ruta_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Role_Numero]' AND @_orderByDirection0 = 0 THEN [Role_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Role_Numero]' AND @_orderByDirection0 = 1 THEN [Role_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Experiencias_Master
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Experiencias_Master_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Experiencias_Master_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Experiencias_Master_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Experiencias_Master_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Experiencias_Master]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Experiencias_Master]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Experiencias_Master_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Experiencias_Master_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Experiencias_Master_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Experiencias_Master_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Experiencias_Master_PersonasTurnosTrans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Experiencias_Master_PersonasTurnosTrans]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Experiencias_Master_Editar]
(
	@Dia_Secuencia  [Int] ,
	@Experiencia_Contenido  [VarChar]  (8000),
	@Experiencia_Nota  [VarChar]  (8000),
	@Horario_Turno_Secuencia  [Int] ,
	@Persona_Secuencia  [Int] ,
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Experiencia_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Experiencias_Master] 
SET
	[Dia_Secuencia] = @Dia_Secuencia,
	[Experiencia_Contenido] = @Experiencia_Contenido,
	[Experiencia_Nota] = @Experiencia_Nota,
	[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia,
	[Persona_Secuencia] = @Persona_Secuencia,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Experiencias_Master].[Experiencia_Secuencia] = @Experiencia_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Experiencias_Master]
(
	[Dia_Secuencia],
	[Experiencia_Contenido],
	[Experiencia_Nota],
	[Horario_Turno_Secuencia],
	[Persona_Secuencia],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Dia_Secuencia,
	@Experiencia_Contenido,
	@Experiencia_Nota,
	@Horario_Turno_Secuencia,
	@Persona_Secuencia,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Experiencia_Secuencia = SCOPE_IDENTITY() 
    SELECT DISTINCT @Experiencia_Secuencia AS 'Experiencia_Secuencia' 
        FROM [Experiencias_Master]
        WHERE ([Experiencias_Master].[Experiencia_Secuencia] = @Experiencia_Secuencia)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Experiencias_Master_Borrar]
(
	@Experiencia_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END


  DELETE FROM [Experiencias_Master]
    WHERE 
      ([Experiencias_Master].[Experiencia_Secuencia] = @Experiencia_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Experiencias_Master]
(
	@Experiencia_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Experiencias_Master].[Experiencia_Secuencia],
                [Experiencias_Master].[Persona_Secuencia],
                [Experiencias_Master].[Horario_Turno_Secuencia],
                [Experiencias_Master].[Dia_Secuencia],
                [Experiencias_Master].[Experiencia_Contenido],
                [Experiencias_Master].[Experiencia_Nota],
                [Experiencias_Master].[Registro_Estado],
                [Experiencias_Master].[Registro_Fecha],
                [Experiencias_Master].[Registro_Usuario]
    FROM [Experiencias_Master]
    WHERE 
     ( [Experiencias_Master].[Experiencia_Secuencia] = @Experiencia_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Experiencias_Master_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Experiencias_Master].[Experiencia_Secuencia],
                [Experiencias_Master].[Persona_Secuencia],
                [Experiencias_Master].[Horario_Turno_Secuencia],
                [Experiencias_Master].[Dia_Secuencia],
                [Experiencias_Master].[Experiencia_Contenido],
                [Experiencias_Master].[Experiencia_Nota],
                [Experiencias_Master].[Registro_Estado],
                [Experiencias_Master].[Registro_Fecha],
                [Experiencias_Master].[Registro_Usuario]
    FROM [Experiencias_Master]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Experiencias_Master_PersonasTurnosTrans]
(
	@Dia_Secuencia  [Int] ,
	@Horario_Turno_Secuencia  [Int] ,
	@Persona_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Experiencias_Master].[Experiencia_Secuencia],
                [Experiencias_Master].[Persona_Secuencia],
                [Experiencias_Master].[Horario_Turno_Secuencia],
                [Experiencias_Master].[Dia_Secuencia],
                [Experiencias_Master].[Experiencia_Contenido],
                [Experiencias_Master].[Experiencia_Nota],
                [Experiencias_Master].[Registro_Estado],
                [Experiencias_Master].[Registro_Fecha],
                [Experiencias_Master].[Registro_Usuario]
    FROM [Experiencias_Master]
      WHERE
        ([Experiencias_Master].[Persona_Secuencia] = @Persona_Secuencia)
 And 
        ([Experiencias_Master].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia)
 And 
        ([Experiencias_Master].[Dia_Secuencia] = @Dia_Secuencia)


RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Experiencias_Master_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [em].[Experiencia_Secuencia]
 ) AS [RowNumber],
				   em.Experiencia_Secuencia , 
				   em.Persona_Secuencia , 
				   em.Horario_Turno_Secuencia , 
				   em.Dia_Secuencia , 
				   em.Experiencia_Contenido , 
				   em.Experiencia_Nota , 
				   em.Registro_Estado , 
				   em.Registro_Fecha , 
				   em.Registro_Usuario
		FROM  [dbo].[Experiencias_Master]	As em	
			 Inner Join Personas_Turnos_Trans As ptt
			   On  ptt.Persona_Secuencia = em.Persona_Secuencia
			      And  ptt.Horario_Turno_Secuencia = em.Horario_Turno_Secuencia
			      And  ptt.Dia_Secuencia = em.Dia_Secuencia

		   WHERE em.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(em.Experiencia_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(em.Persona_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(em.Horario_Turno_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(em.Dia_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR em.Experiencia_Contenido LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR em.Experiencia_Nota LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR em.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(em.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR em.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Experiencia_Secuencia]' AND @_orderByDirection0 = 0 THEN [Experiencia_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Experiencia_Secuencia]' AND @_orderByDirection0 = 1 THEN [Experiencia_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 0 THEN [Persona_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 1 THEN [Persona_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Horario_Turno_Secuencia]' AND @_orderByDirection0 = 0 THEN [Horario_Turno_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Horario_Turno_Secuencia]' AND @_orderByDirection0 = 1 THEN [Horario_Turno_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Dia_Secuencia]' AND @_orderByDirection0 = 0 THEN [Dia_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Dia_Secuencia]' AND @_orderByDirection0 = 1 THEN [Dia_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Experiencia_Contenido]' AND @_orderByDirection0 = 0 THEN [Experiencia_Contenido]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Experiencia_Contenido]' AND @_orderByDirection0 = 1 THEN [Experiencia_Contenido]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Experiencia_Nota]' AND @_orderByDirection0 = 0 THEN [Experiencia_Nota]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Experiencia_Nota]' AND @_orderByDirection0 = 1 THEN [Experiencia_Nota]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Horario_Semanas_Cata
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Semanas_Cata_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Semanas_Cata_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Semanas_Cata_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Semanas_Cata_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Semanas_Cata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Semanas_Cata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Semanas_Cata_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Semanas_Cata_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Semanas_Cata_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Semanas_Cata_Paging]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Horario_Semanas_Cata_Editar]
(
	@Registro_Estado  [Char]  (1) = 'A',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50) = '(suser_sname())',
	@Semana_Desde  [DateTime] ,
	@Semana_Hasta  [DateTime] ,
	@Semana_Codigo  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Horario_Semanas_Cata] 
SET
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario,
	[Semana_Desde] = @Semana_Desde,
	[Semana_Hasta] = @Semana_Hasta

WHERE
	[dbo].[Horario_Semanas_Cata].[Semana_Codigo] = @Semana_Codigo



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Horario_Semanas_Cata]
(
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Semana_Codigo],
	[Semana_Desde],
	[Semana_Hasta]
)
VALUES
(
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Semana_Codigo,
	@Semana_Desde,
	@Semana_Hasta
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Horario_Semanas_Cata_Borrar]
(
	@Semana_Codigo  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Horario_Trans] SET
     [Horario_Trans].[Semana_Codigo] = NULL
    WHERE     ([Horario_Trans].[Semana_Codigo] = @Semana_Codigo)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Horario_Semanas_Cata]
    WHERE 
      ([Horario_Semanas_Cata].[Semana_Codigo] = @Semana_Codigo)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Horario_Semanas_Cata]
(
	@Semana_Codigo  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Horario_Semanas_Cata].[Semana_Codigo],
                [Horario_Semanas_Cata].[Semana_Desde],
                [Horario_Semanas_Cata].[Semana_Hasta],
                [Horario_Semanas_Cata].[Registro_Estado],
                [Horario_Semanas_Cata].[Registro_Fecha],
                [Horario_Semanas_Cata].[Registro_Usuario]
    FROM [Horario_Semanas_Cata]
    WHERE 
     ( [Horario_Semanas_Cata].[Semana_Codigo] = @Semana_Codigo)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Horario_Semanas_Cata_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Horario_Semanas_Cata].[Semana_Codigo],
                [Horario_Semanas_Cata].[Semana_Desde],
                [Horario_Semanas_Cata].[Semana_Hasta],
                [Horario_Semanas_Cata].[Registro_Estado],
                [Horario_Semanas_Cata].[Registro_Fecha],
                [Horario_Semanas_Cata].[Registro_Usuario]
    FROM [Horario_Semanas_Cata]

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Horario_Semanas_Cata_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [hsc].[Semana_Codigo]
 ) AS [RowNumber],
				   hsc.Semana_Codigo , 
				   hsc.Semana_Desde , 
				   hsc.Semana_Hasta , 
				   hsc.Registro_Estado , 
				   hsc.Registro_Fecha , 
				   hsc.Registro_Usuario
		FROM  [dbo].[Horario_Semanas_Cata]	As hsc	

		   WHERE hsc.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(hsc.Semana_Codigo) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(hsc.Semana_Desde) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(hsc.Semana_Hasta) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR hsc.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(hsc.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR hsc.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Semana_Codigo]' AND @_orderByDirection0 = 0 THEN [Semana_Codigo]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Semana_Codigo]' AND @_orderByDirection0 = 1 THEN [Semana_Codigo]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Semana_Desde]' AND @_orderByDirection0 = 0 THEN [Semana_Desde]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Semana_Desde]' AND @_orderByDirection0 = 1 THEN [Semana_Desde]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Semana_Hasta]' AND @_orderByDirection0 = 0 THEN [Semana_Hasta]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Semana_Hasta]' AND @_orderByDirection0 = 1 THEN [Semana_Hasta]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Horario_Trans
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Trans_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Trans_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Trans_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Trans_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Trans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Trans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Trans_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Trans_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Trans_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Trans_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Trans_HorariosMaster]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Trans_HorariosMaster]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Trans_RutasMaster]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Trans_RutasMaster]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Trans_HorarioSemanasCata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Trans_HorarioSemanasCata]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Horario_Trans_Editar]
(
	@Horario_Fecha_Desde  [DateTime] ,
	@Horario_Fecha_Hasta  [DateTime] ,
	@Horario_Numero  [Int]  = null,
	@Horario_Publicar  [Char]  (1) = 'S',
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Ruta_Secuencia  [Int] ,
	@Semana_Codigo  [Int] ,
	@Horario_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Horario_Trans] 
SET
	[Horario_Fecha_Desde] = @Horario_Fecha_Desde,
	[Horario_Fecha_Hasta] = @Horario_Fecha_Hasta,
	[Horario_Numero] = @Horario_Numero,
	[Horario_Publicar] = @Horario_Publicar,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario,
	[Ruta_Secuencia] = @Ruta_Secuencia,
	[Semana_Codigo] = @Semana_Codigo

WHERE
	[dbo].[Horario_Trans].[Horario_Secuencia] = @Horario_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Horario_Trans]
(
	[Horario_Fecha_Desde],
	[Horario_Fecha_Hasta],
	[Horario_Numero],
	[Horario_Publicar],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Ruta_Secuencia],
	[Semana_Codigo]
)
VALUES
(
	@Horario_Fecha_Desde,
	@Horario_Fecha_Hasta,
	@Horario_Numero,
	@Horario_Publicar,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Ruta_Secuencia,
	@Semana_Codigo
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Horario_Secuencia = SCOPE_IDENTITY() 
    SELECT DISTINCT @Horario_Secuencia AS 'Horario_Secuencia' 
        FROM [Horario_Trans]
        WHERE ([Horario_Trans].[Horario_Secuencia] = @Horario_Secuencia)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Horario_Trans_Borrar]
(
	@Horario_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Horario_Turno_Trans] SET
     [Horario_Turno_Trans].[Horario_Secuencia] = NULL
    WHERE     ([Horario_Turno_Trans].[Horario_Secuencia] = @Horario_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Horario_Trans]
    WHERE 
      ([Horario_Trans].[Horario_Secuencia] = @Horario_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Horario_Trans]
(
	@Horario_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Horario_Trans].[Horario_Secuencia],
                [Horario_Trans].[Ruta_Secuencia],
                [Horario_Trans].[Horario_Numero],
                [Horario_Trans].[Semana_Codigo],
                [Horario_Trans].[Horario_Fecha_Desde],
                [Horario_Trans].[Horario_Fecha_Hasta],
                [Horario_Trans].[Horario_Publicar],
                [Horario_Trans].[Registro_Estado],
                [Horario_Trans].[Registro_Fecha],
                [Horario_Trans].[Registro_Usuario]
    FROM [Horario_Trans]
    WHERE 
     ( [Horario_Trans].[Horario_Secuencia] = @Horario_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Horario_Trans_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Horario_Trans].[Horario_Secuencia],
                [Horario_Trans].[Ruta_Secuencia],
                [Horario_Trans].[Horario_Numero],
                [Horario_Trans].[Semana_Codigo],
                [Horario_Trans].[Horario_Fecha_Desde],
                [Horario_Trans].[Horario_Fecha_Hasta],
                [Horario_Trans].[Horario_Publicar],
                [Horario_Trans].[Registro_Estado],
                [Horario_Trans].[Registro_Fecha],
                [Horario_Trans].[Registro_Usuario]
    FROM [Horario_Trans]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Horario_Trans_HorariosMaster]
(
	@Horario_Numero  [Int]  = null,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Horario_Trans].[Horario_Secuencia],
                [Horario_Trans].[Ruta_Secuencia],
                [Horario_Trans].[Horario_Numero],
                [Horario_Trans].[Semana_Codigo],
                [Horario_Trans].[Horario_Fecha_Desde],
                [Horario_Trans].[Horario_Fecha_Hasta],
                [Horario_Trans].[Horario_Publicar],
                [Horario_Trans].[Registro_Estado],
                [Horario_Trans].[Registro_Fecha],
                [Horario_Trans].[Registro_Usuario]
    FROM [Horario_Trans]
      WHERE
        ([Horario_Trans].[Horario_Numero] = @Horario_Numero)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Horario_Trans_RutasMaster]
(
	@Ruta_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Horario_Trans].[Horario_Secuencia],
                [Horario_Trans].[Ruta_Secuencia],
                [Horario_Trans].[Horario_Numero],
                [Horario_Trans].[Semana_Codigo],
                [Horario_Trans].[Horario_Fecha_Desde],
                [Horario_Trans].[Horario_Fecha_Hasta],
                [Horario_Trans].[Horario_Publicar],
                [Horario_Trans].[Registro_Estado],
                [Horario_Trans].[Registro_Fecha],
                [Horario_Trans].[Registro_Usuario]
    FROM [Horario_Trans]
      WHERE
        ([Horario_Trans].[Ruta_Secuencia] = @Ruta_Secuencia)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Horario_Trans_HorarioSemanasCata]
(
	@Semana_Codigo  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Horario_Trans].[Horario_Secuencia],
                [Horario_Trans].[Ruta_Secuencia],
                [Horario_Trans].[Horario_Numero],
                [Horario_Trans].[Semana_Codigo],
                [Horario_Trans].[Horario_Fecha_Desde],
                [Horario_Trans].[Horario_Fecha_Hasta],
                [Horario_Trans].[Horario_Publicar],
                [Horario_Trans].[Registro_Estado],
                [Horario_Trans].[Registro_Fecha],
                [Horario_Trans].[Registro_Usuario]
    FROM [Horario_Trans]
      WHERE
        ([Horario_Trans].[Semana_Codigo] = @Semana_Codigo)


RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Horario_Trans_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [ht].[Horario_Secuencia]
 ) AS [RowNumber],
				   ht.Horario_Secuencia , 
				   ht.Ruta_Secuencia , 
				   ht.Horario_Numero , 
				   ht.Semana_Codigo , 
				   ht.Horario_Fecha_Desde , 
				   ht.Horario_Fecha_Hasta , 
				   ht.Horario_Publicar , 
				   ht.Registro_Estado , 
				   ht.Registro_Fecha , 
				   ht.Registro_Usuario
		FROM  [dbo].[Horario_Trans]	As ht	
			 Inner Join Horarios_Master As hm
			   On  hm.Horario_Numero = ht.Horario_Numero
			 Inner Join Rutas_Master As rm
			   On  rm.Ruta_Secuencia = ht.Ruta_Secuencia
			 Inner Join Horario_Semanas_Cata As hsc
			   On  hsc.Semana_Codigo = ht.Semana_Codigo

		   WHERE ht.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(ht.Horario_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(ht.Ruta_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(ht.Horario_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(ht.Semana_Codigo) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(ht.Horario_Fecha_Desde) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(ht.Horario_Fecha_Hasta) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ht.Horario_Publicar LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ht.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(ht.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ht.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Horario_Secuencia]' AND @_orderByDirection0 = 0 THEN [Horario_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Horario_Secuencia]' AND @_orderByDirection0 = 1 THEN [Horario_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Secuencia]' AND @_orderByDirection0 = 0 THEN [Ruta_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Secuencia]' AND @_orderByDirection0 = 1 THEN [Ruta_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Horario_Numero]' AND @_orderByDirection0 = 0 THEN [Horario_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Horario_Numero]' AND @_orderByDirection0 = 1 THEN [Horario_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Semana_Codigo]' AND @_orderByDirection0 = 0 THEN [Semana_Codigo]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Semana_Codigo]' AND @_orderByDirection0 = 1 THEN [Semana_Codigo]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Horario_Fecha_Desde]' AND @_orderByDirection0 = 0 THEN [Horario_Fecha_Desde]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Horario_Fecha_Desde]' AND @_orderByDirection0 = 1 THEN [Horario_Fecha_Desde]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Horario_Fecha_Hasta]' AND @_orderByDirection0 = 0 THEN [Horario_Fecha_Hasta]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Horario_Fecha_Hasta]' AND @_orderByDirection0 = 1 THEN [Horario_Fecha_Hasta]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Horario_Publicar]' AND @_orderByDirection0 = 0 THEN [Horario_Publicar]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Horario_Publicar]' AND @_orderByDirection0 = 1 THEN [Horario_Publicar]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Horario_Turno_Dias_Trans
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Dias_Trans_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Dias_Trans_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Dias_Trans_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Dias_Trans_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Dias_Trans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Dias_Trans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Dias_Trans_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Dias_Trans_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Dias_Trans_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Dias_Trans_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Dias_Trans_DiasCata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Dias_Trans_DiasCata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Dias_Trans_HorarioTurnoTrans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Dias_Trans_HorarioTurnoTrans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Dias_Trans_DeleteHorario]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Dias_Trans_DeleteHorario]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Dias_Trans_LoadPuestoHorario]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Dias_Trans_LoadPuestoHorario]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Dias_Trans_Editar]
(
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Turno_Estado  [Char]  (1) = ' ',
	@Turno_Estudios_Iniciado_Cantidad  [Int]  = 0,
	@Turno_Fecha  [DateTime] ,
	@Turno_Razon_Inactivo  [VarChar]  (500),
	@Dia_Secuencia  [Int] ,
	@Horario_Turno_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Horario_Turno_Dias_Trans] 
SET
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario,
	[Turno_Estado] = @Turno_Estado,
	[Turno_Estudios_Iniciado_Cantidad] = @Turno_Estudios_Iniciado_Cantidad,
	[Turno_Fecha] = @Turno_Fecha,
	[Turno_Razon_Inactivo] = @Turno_Razon_Inactivo

WHERE
	[dbo].[Horario_Turno_Dias_Trans].[Dia_Secuencia] = @Dia_Secuencia AND
	[dbo].[Horario_Turno_Dias_Trans].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Horario_Turno_Dias_Trans]
(
	[Dia_Secuencia],
	[Horario_Turno_Secuencia],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Turno_Estado],
	[Turno_Estudios_Iniciado_Cantidad],
	[Turno_Fecha],
	[Turno_Razon_Inactivo]
)
VALUES
(
	@Dia_Secuencia,
	@Horario_Turno_Secuencia,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Turno_Estado,
	@Turno_Estudios_Iniciado_Cantidad,
	@Turno_Fecha,
	@Turno_Razon_Inactivo
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Dias_Trans_Borrar]
(
	@Dia_Secuencia  [Int] ,
	@Horario_Turno_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Personas_Turnos_Trans] SET
     [Personas_Turnos_Trans].[Horario_Turno_Secuencia] = NULL,
     [Personas_Turnos_Trans].[Dia_Secuencia] = NULL
    WHERE     ([Personas_Turnos_Trans].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia)  And
    ([Personas_Turnos_Trans].[Dia_Secuencia] = @Dia_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Horario_Turno_Informe_Trans] SET
     [Horario_Turno_Informe_Trans].[Horario_Turno_Secuencia] = NULL,
     [Horario_Turno_Informe_Trans].[Dia_Secuencia] = NULL
    WHERE     ([Horario_Turno_Informe_Trans].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia)  And
    ([Horario_Turno_Informe_Trans].[Dia_Secuencia] = @Dia_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Horario_Turno_Dias_Trans]
    WHERE 
      ([Horario_Turno_Dias_Trans].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia)
     AND       ([Horario_Turno_Dias_Trans].[Dia_Secuencia] = @Dia_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Dias_Trans]
(
	@Dia_Secuencia  [Int] ,
	@Horario_Turno_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Horario_Turno_Dias_Trans].[Horario_Turno_Secuencia],
                [Horario_Turno_Dias_Trans].[Dia_Secuencia],
                [Horario_Turno_Dias_Trans].[Turno_Fecha],
                [Horario_Turno_Dias_Trans].[Turno_Estado],
                [Horario_Turno_Dias_Trans].[Turno_Razon_Inactivo],
                [Horario_Turno_Dias_Trans].[Turno_Estudios_Iniciado_Cantidad],
                [Horario_Turno_Dias_Trans].[Registro_Estado],
                [Horario_Turno_Dias_Trans].[Registro_Fecha],
                [Horario_Turno_Dias_Trans].[Registro_Usuario]
    FROM [Horario_Turno_Dias_Trans]
    WHERE 
     ( [Horario_Turno_Dias_Trans].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia)
     AND      ( [Horario_Turno_Dias_Trans].[Dia_Secuencia] = @Dia_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Dias_Trans_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Horario_Turno_Dias_Trans].[Horario_Turno_Secuencia],
                [Horario_Turno_Dias_Trans].[Dia_Secuencia],
                [Horario_Turno_Dias_Trans].[Turno_Fecha],
                [Horario_Turno_Dias_Trans].[Turno_Estado],
                [Horario_Turno_Dias_Trans].[Turno_Razon_Inactivo],
                [Horario_Turno_Dias_Trans].[Turno_Estudios_Iniciado_Cantidad],
                [Horario_Turno_Dias_Trans].[Registro_Estado],
                [Horario_Turno_Dias_Trans].[Registro_Fecha],
                [Horario_Turno_Dias_Trans].[Registro_Usuario]
    FROM [Horario_Turno_Dias_Trans]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Dias_Trans_DiasCata]
(
	@Dia_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Horario_Turno_Dias_Trans].[Horario_Turno_Secuencia],
                [Horario_Turno_Dias_Trans].[Dia_Secuencia],
                [Horario_Turno_Dias_Trans].[Turno_Fecha],
                [Horario_Turno_Dias_Trans].[Turno_Estado],
                [Horario_Turno_Dias_Trans].[Turno_Razon_Inactivo],
                [Horario_Turno_Dias_Trans].[Turno_Estudios_Iniciado_Cantidad],
                [Horario_Turno_Dias_Trans].[Registro_Estado],
                [Horario_Turno_Dias_Trans].[Registro_Fecha],
                [Horario_Turno_Dias_Trans].[Registro_Usuario]
    FROM [Horario_Turno_Dias_Trans]
      WHERE
        ([Horario_Turno_Dias_Trans].[Dia_Secuencia] = @Dia_Secuencia)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Dias_Trans_HorarioTurnoTrans]
(
	@Horario_Turno_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Horario_Turno_Dias_Trans].[Horario_Turno_Secuencia],
                [Horario_Turno_Dias_Trans].[Dia_Secuencia],
                [Horario_Turno_Dias_Trans].[Turno_Fecha],
                [Horario_Turno_Dias_Trans].[Turno_Estado],
                [Horario_Turno_Dias_Trans].[Turno_Razon_Inactivo],
                [Horario_Turno_Dias_Trans].[Turno_Estudios_Iniciado_Cantidad],
                [Horario_Turno_Dias_Trans].[Registro_Estado],
                [Horario_Turno_Dias_Trans].[Registro_Fecha],
                [Horario_Turno_Dias_Trans].[Registro_Usuario]
    FROM [Horario_Turno_Dias_Trans]
      WHERE
        ([Horario_Turno_Dias_Trans].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia)


RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Dias_Trans_DeleteHorario]
(
    @Horario_Turno_Secuencia [Int] 
)
AS

SET NOCOUNT ON
DELETE
    FROM [Horario_Turno_Dias_Trans]
      WHERE Horario_Turno_Dias_Trans.Registro_Estado = 'A'
      AND 
         [Horario_Turno_Dias_Trans].[Horario_Turno_Secuencia] = @horario_turno_secuencia

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Dias_Trans_LoadPuestoHorario]
(
    @Puesto_Numero [int] ,
    @Horario_Secuencia [int] ,
		@PageIndex 		int = 1,
		@PageSize  		int = 1000000,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
SELECT 				ROW_NUMBER() OVER ( ORDER BY 		                [Horario_Turno_Dias_Trans].[Horario_Turno_Secuencia],
		                [Horario_Turno_Dias_Trans].[Dia_Secuencia]
 ) AS [RowNumber],

          [Horario_Turno_Dias_Trans].[Horario_Turno_Secuencia],
          [Horario_Turno_Dias_Trans].[Dia_Secuencia],
          [Horario_Turno_Dias_Trans].[Turno_Fecha],
          [Horario_Turno_Dias_Trans].[Turno_Estado],
          [Horario_Turno_Dias_Trans].[Turno_Razon_Inactivo],
          [Horario_Turno_Dias_Trans].[Turno_Estudios_Iniciado_Cantidad],
          [Horario_Turno_Dias_Trans].[Registro_Estado],
          [Horario_Turno_Dias_Trans].[Registro_Fecha],
          [Horario_Turno_Dias_Trans].[Registro_Usuario]
    FROM [Horario_Turno_Dias_Trans]
		LEFT OUTER JOIN [Horario_Turno_Trans]
			On              [Horario_Turno_Trans].[Horario_Turno_Secuencia] =  [Horario_Turno_Dias_Trans].[Horario_Turno_Secuencia]
		LEFT OUTER JOIN [Horario_Trans]
			On              [Horario_Trans].[Horario_Secuencia] =  [Horario_Turno_Trans].[Horario_Secuencia]
		LEFT OUTER JOIN [Horario_Turno_Trans]
			On              [Horario_Turno_Trans].[Horario_Turno_Secuencia] =  [Horario_Turno_Dias_Trans].[Horario_Turno_Secuencia]
		LEFT OUTER JOIN [Horario_Trans]
			On              [Horario_Trans].[Horario_Secuencia] =  [Horario_Turno_Trans].[Horario_Secuencia]
      WHERE Horario_Turno_Dias_Trans.Registro_Estado = 'A'
      AND 
         [Horario_Trans].[Horario_Secuencia] = @horario_secuencia
 AND  [Horario_Trans].[Ruta_Secuencia] = @puesto_numero
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Dias_Trans_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [htdt].[Horario_Turno_Secuencia],
		                [htdt].[Dia_Secuencia]
 ) AS [RowNumber],
				   htdt.Horario_Turno_Secuencia , 
				   htdt.Dia_Secuencia , 
				   htdt.Turno_Fecha , 
				   htdt.Turno_Estado , 
				   htdt.Turno_Razon_Inactivo , 
				   htdt.Turno_Estudios_Iniciado_Cantidad , 
				   htdt.Registro_Estado , 
				   htdt.Registro_Fecha , 
				   htdt.Registro_Usuario
		FROM  [dbo].[Horario_Turno_Dias_Trans]	As htdt	
			 Inner Join Dias_Cata As dc
			   On  dc.Dia_Secuencia = htdt.Dia_Secuencia
			 Inner Join Horario_Turno_Trans As htt
			   On  htt.Horario_Turno_Secuencia = htdt.Horario_Turno_Secuencia

		   WHERE htdt.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(htdt.Horario_Turno_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(htdt.Dia_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(htdt.Turno_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR htdt.Turno_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR htdt.Turno_Razon_Inactivo LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(htdt.Turno_Estudios_Iniciado_Cantidad) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR htdt.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(htdt.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR htdt.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Horario_Turno_Secuencia]' AND @_orderByDirection0 = 0 THEN [Horario_Turno_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Horario_Turno_Secuencia]' AND @_orderByDirection0 = 1 THEN [Horario_Turno_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Dia_Secuencia]' AND @_orderByDirection0 = 0 THEN [Dia_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Dia_Secuencia]' AND @_orderByDirection0 = 1 THEN [Dia_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Turno_Fecha]' AND @_orderByDirection0 = 0 THEN [Turno_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Turno_Fecha]' AND @_orderByDirection0 = 1 THEN [Turno_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Turno_Estado]' AND @_orderByDirection0 = 0 THEN [Turno_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Turno_Estado]' AND @_orderByDirection0 = 1 THEN [Turno_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Turno_Razon_Inactivo]' AND @_orderByDirection0 = 0 THEN [Turno_Razon_Inactivo]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Turno_Razon_Inactivo]' AND @_orderByDirection0 = 1 THEN [Turno_Razon_Inactivo]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Turno_Estudios_Iniciado_Cantidad]' AND @_orderByDirection0 = 0 THEN [Turno_Estudios_Iniciado_Cantidad]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Turno_Estudios_Iniciado_Cantidad]' AND @_orderByDirection0 = 1 THEN [Turno_Estudios_Iniciado_Cantidad]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Horario_Turno_Informe_Trans
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Informe_Trans_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Informe_Trans_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Informe_Trans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Informe_Trans_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Informe_Trans_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Informe_Trans_IdiomasCata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans_IdiomasCata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Informe_Trans_PublicacionesCata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans_PublicacionesCata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Informe_Trans_HorarioTurnoDiasTrans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans_HorarioTurnoDiasTrans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Informe_Trans_PersonasMaster]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans_PersonasMaster]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Informe_Trans_DeleteInforme]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans_DeleteInforme]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans_Editar]
(
	@Publicacion_Cantidad  [Int] ,
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Dia_Secuencia  [Int] ,
	@Horario_Turno_Secuencia  [Int] ,
	@Idioma_Numero  [Int] ,
	@Persona_Secuencia  [Int] ,
	@Publicacion_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Horario_Turno_Informe_Trans] 
SET
	[Publicacion_Cantidad] = @Publicacion_Cantidad,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Horario_Turno_Informe_Trans].[Dia_Secuencia] = @Dia_Secuencia AND
	[dbo].[Horario_Turno_Informe_Trans].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia AND
	[dbo].[Horario_Turno_Informe_Trans].[Idioma_Numero] = @Idioma_Numero AND
	[dbo].[Horario_Turno_Informe_Trans].[Persona_Secuencia] = @Persona_Secuencia AND
	[dbo].[Horario_Turno_Informe_Trans].[Publicacion_Numero] = @Publicacion_Numero



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Horario_Turno_Informe_Trans]
(
	[Dia_Secuencia],
	[Horario_Turno_Secuencia],
	[Idioma_Numero],
	[Persona_Secuencia],
	[Publicacion_Cantidad],
	[Publicacion_Numero],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Dia_Secuencia,
	@Horario_Turno_Secuencia,
	@Idioma_Numero,
	@Persona_Secuencia,
	@Publicacion_Cantidad,
	@Publicacion_Numero,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans_Borrar]
(
	@Dia_Secuencia  [Int]  = 1,
	@Horario_Turno_Secuencia  [Int] ,
	@Idioma_Numero  [Int] ,
	@Persona_Secuencia  [Int] ,
	@Publicacion_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END


  DELETE FROM [Horario_Turno_Informe_Trans]
    WHERE 
      ([Horario_Turno_Informe_Trans].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia)
     AND       ([Horario_Turno_Informe_Trans].[Dia_Secuencia] = @Dia_Secuencia)
     AND       ([Horario_Turno_Informe_Trans].[Publicacion_Numero] = @Publicacion_Numero)
     AND       ([Horario_Turno_Informe_Trans].[Idioma_Numero] = @Idioma_Numero)
     AND       ([Horario_Turno_Informe_Trans].[Persona_Secuencia] = @Persona_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans]
(
	@Dia_Secuencia  [Int]  = 1,
	@Horario_Turno_Secuencia  [Int] ,
	@Idioma_Numero  [Int] ,
	@Persona_Secuencia  [Int] ,
	@Publicacion_Numero  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Horario_Turno_Informe_Trans].[Horario_Turno_Secuencia],
                [Horario_Turno_Informe_Trans].[Dia_Secuencia],
                [Horario_Turno_Informe_Trans].[Publicacion_Numero],
                [Horario_Turno_Informe_Trans].[Idioma_Numero],
                [Horario_Turno_Informe_Trans].[Persona_Secuencia],
                [Horario_Turno_Informe_Trans].[Publicacion_Cantidad],
                [Horario_Turno_Informe_Trans].[Registro_Estado],
                [Horario_Turno_Informe_Trans].[Registro_Fecha],
                [Horario_Turno_Informe_Trans].[Registro_Usuario]
    FROM [Horario_Turno_Informe_Trans]
    WHERE 
     ( [Horario_Turno_Informe_Trans].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia)
     AND      ( [Horario_Turno_Informe_Trans].[Dia_Secuencia] = @Dia_Secuencia)
     AND      ( [Horario_Turno_Informe_Trans].[Publicacion_Numero] = @Publicacion_Numero)
     AND      ( [Horario_Turno_Informe_Trans].[Idioma_Numero] = @Idioma_Numero)
     AND      ( [Horario_Turno_Informe_Trans].[Persona_Secuencia] = @Persona_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Horario_Turno_Informe_Trans].[Horario_Turno_Secuencia],
                [Horario_Turno_Informe_Trans].[Dia_Secuencia],
                [Horario_Turno_Informe_Trans].[Publicacion_Numero],
                [Horario_Turno_Informe_Trans].[Idioma_Numero],
                [Horario_Turno_Informe_Trans].[Persona_Secuencia],
                [Horario_Turno_Informe_Trans].[Publicacion_Cantidad],
                [Horario_Turno_Informe_Trans].[Registro_Estado],
                [Horario_Turno_Informe_Trans].[Registro_Fecha],
                [Horario_Turno_Informe_Trans].[Registro_Usuario]
    FROM [Horario_Turno_Informe_Trans]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans_IdiomasCata]
(
	@Idioma_Numero  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Horario_Turno_Informe_Trans].[Horario_Turno_Secuencia],
                [Horario_Turno_Informe_Trans].[Dia_Secuencia],
                [Horario_Turno_Informe_Trans].[Publicacion_Numero],
                [Horario_Turno_Informe_Trans].[Idioma_Numero],
                [Horario_Turno_Informe_Trans].[Persona_Secuencia],
                [Horario_Turno_Informe_Trans].[Publicacion_Cantidad],
                [Horario_Turno_Informe_Trans].[Registro_Estado],
                [Horario_Turno_Informe_Trans].[Registro_Fecha],
                [Horario_Turno_Informe_Trans].[Registro_Usuario]
    FROM [Horario_Turno_Informe_Trans]
      WHERE
        ([Horario_Turno_Informe_Trans].[Idioma_Numero] = @Idioma_Numero)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans_PublicacionesCata]
(
	@Publicacion_Numero  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Horario_Turno_Informe_Trans].[Horario_Turno_Secuencia],
                [Horario_Turno_Informe_Trans].[Dia_Secuencia],
                [Horario_Turno_Informe_Trans].[Publicacion_Numero],
                [Horario_Turno_Informe_Trans].[Idioma_Numero],
                [Horario_Turno_Informe_Trans].[Persona_Secuencia],
                [Horario_Turno_Informe_Trans].[Publicacion_Cantidad],
                [Horario_Turno_Informe_Trans].[Registro_Estado],
                [Horario_Turno_Informe_Trans].[Registro_Fecha],
                [Horario_Turno_Informe_Trans].[Registro_Usuario]
    FROM [Horario_Turno_Informe_Trans]
      WHERE
        ([Horario_Turno_Informe_Trans].[Publicacion_Numero] = @Publicacion_Numero)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans_HorarioTurnoDiasTrans]
(
	@Dia_Secuencia  [Int]  = 1,
	@Horario_Turno_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Horario_Turno_Informe_Trans].[Horario_Turno_Secuencia],
                [Horario_Turno_Informe_Trans].[Dia_Secuencia],
                [Horario_Turno_Informe_Trans].[Publicacion_Numero],
                [Horario_Turno_Informe_Trans].[Idioma_Numero],
                [Horario_Turno_Informe_Trans].[Persona_Secuencia],
                [Horario_Turno_Informe_Trans].[Publicacion_Cantidad],
                [Horario_Turno_Informe_Trans].[Registro_Estado],
                [Horario_Turno_Informe_Trans].[Registro_Fecha],
                [Horario_Turno_Informe_Trans].[Registro_Usuario]
    FROM [Horario_Turno_Informe_Trans]
      WHERE
        ([Horario_Turno_Informe_Trans].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia)
 And 
        ([Horario_Turno_Informe_Trans].[Dia_Secuencia] = @Dia_Secuencia)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans_PersonasMaster]
(
	@Persona_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Horario_Turno_Informe_Trans].[Horario_Turno_Secuencia],
                [Horario_Turno_Informe_Trans].[Dia_Secuencia],
                [Horario_Turno_Informe_Trans].[Publicacion_Numero],
                [Horario_Turno_Informe_Trans].[Idioma_Numero],
                [Horario_Turno_Informe_Trans].[Persona_Secuencia],
                [Horario_Turno_Informe_Trans].[Publicacion_Cantidad],
                [Horario_Turno_Informe_Trans].[Registro_Estado],
                [Horario_Turno_Informe_Trans].[Registro_Fecha],
                [Horario_Turno_Informe_Trans].[Registro_Usuario]
    FROM [Horario_Turno_Informe_Trans]
      WHERE
        ([Horario_Turno_Informe_Trans].[Persona_Secuencia] = @Persona_Secuencia)


RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans_DeleteInforme]
(
    @Horario_Turno_Secuencia [Int] ,
    @Dia_Secuencia [Int]  = 1
)
AS

SET NOCOUNT ON
DELETE
    FROM [Horario_Turno_Informe_Trans]
      WHERE Horario_Turno_Informe_Trans.Registro_Estado = 'A'
      AND 
         [Horario_Turno_Informe_Trans].[Horario_Turno_Secuencia] = @horario_turno_secuencia
 AND  [Horario_Turno_Informe_Trans].[Dia_Secuencia] = @dia_secuencia

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Informe_Trans_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [htit].[Horario_Turno_Secuencia],
		                [htit].[Dia_Secuencia],
		                [htit].[Publicacion_Numero],
		                [htit].[Idioma_Numero],
		                [htit].[Persona_Secuencia]
 ) AS [RowNumber],
				   htit.Horario_Turno_Secuencia , 
				   htit.Dia_Secuencia , 
				   htit.Publicacion_Numero , 
				   htit.Idioma_Numero , 
				   htit.Persona_Secuencia , 
				   htit.Publicacion_Cantidad , 
				   htit.Registro_Estado , 
				   htit.Registro_Fecha , 
				   htit.Registro_Usuario
		FROM  [dbo].[Horario_Turno_Informe_Trans]	As htit	
			 Inner Join Idiomas_Cata As ic
			   On  ic.Idioma_Numero = htit.Idioma_Numero
			 Inner Join Publicaciones_Cata As pc
			   On  pc.Publicacion_Numero = htit.Publicacion_Numero
			 Inner Join Horario_Turno_Dias_Trans As htdt
			   On  htdt.Horario_Turno_Secuencia = htit.Horario_Turno_Secuencia
			      And  htdt.Dia_Secuencia = htit.Dia_Secuencia
			 Inner Join Personas_Master As pm
			   On  pm.Persona_Secuencia = htit.Persona_Secuencia

		   WHERE htit.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(htit.Horario_Turno_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(htit.Dia_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(htit.Publicacion_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(htit.Idioma_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(htit.Persona_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(htit.Publicacion_Cantidad) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR htit.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(htit.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR htit.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Horario_Turno_Secuencia]' AND @_orderByDirection0 = 0 THEN [Horario_Turno_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Horario_Turno_Secuencia]' AND @_orderByDirection0 = 1 THEN [Horario_Turno_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Dia_Secuencia]' AND @_orderByDirection0 = 0 THEN [Dia_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Dia_Secuencia]' AND @_orderByDirection0 = 1 THEN [Dia_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Publicacion_Numero]' AND @_orderByDirection0 = 0 THEN [Publicacion_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Publicacion_Numero]' AND @_orderByDirection0 = 1 THEN [Publicacion_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Idioma_Numero]' AND @_orderByDirection0 = 0 THEN [Idioma_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Idioma_Numero]' AND @_orderByDirection0 = 1 THEN [Idioma_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 0 THEN [Persona_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 1 THEN [Persona_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Publicacion_Cantidad]' AND @_orderByDirection0 = 0 THEN [Publicacion_Cantidad]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Publicacion_Cantidad]' AND @_orderByDirection0 = 1 THEN [Publicacion_Cantidad]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Horario_Turno_Trans
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Trans_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Trans_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Trans_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Trans_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Trans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Trans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Trans_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Trans_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Trans_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Trans_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horario_Turno_Trans_HorarioTrans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horario_Turno_Trans_HorarioTrans]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Trans_Editar]
(
	@Horario_Secuencia  [Int] ,
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Turno_Cantidad_Publicadores  [Int]  = 0,
	@Turno_Descripcion  [VarChar]  (50),
	@Turno_Hora_Desde  [VarChar]  (50),
	@Turno_Hora_Hasta  [VarChar]  (50),
	@Turno_Minutos_Cantidad  [Int] ,
	@Horario_Turno_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Horario_Turno_Trans] 
SET
	[Horario_Secuencia] = @Horario_Secuencia,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario,
	[Turno_Cantidad_Publicadores] = @Turno_Cantidad_Publicadores,
	[Turno_Descripcion] = @Turno_Descripcion,
	[Turno_Hora_Desde] = @Turno_Hora_Desde,
	[Turno_Hora_Hasta] = @Turno_Hora_Hasta,
	[Turno_Minutos_Cantidad] = @Turno_Minutos_Cantidad

WHERE
	[dbo].[Horario_Turno_Trans].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Horario_Turno_Trans]
(
	[Horario_Secuencia],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Turno_Cantidad_Publicadores],
	[Turno_Descripcion],
	[Turno_Hora_Desde],
	[Turno_Hora_Hasta],
	[Turno_Minutos_Cantidad]
)
VALUES
(
	@Horario_Secuencia,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Turno_Cantidad_Publicadores,
	@Turno_Descripcion,
	@Turno_Hora_Desde,
	@Turno_Hora_Hasta,
	@Turno_Minutos_Cantidad
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Horario_Turno_Secuencia = SCOPE_IDENTITY() 
    SELECT DISTINCT @Horario_Turno_Secuencia AS 'Horario_Turno_Secuencia' 
        FROM [Horario_Turno_Trans]
        WHERE ([Horario_Turno_Trans].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Trans_Borrar]
(
	@Horario_Turno_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Horario_Turno_Dias_Trans] SET
     [Horario_Turno_Dias_Trans].[Horario_Turno_Secuencia] = NULL
    WHERE     ([Horario_Turno_Dias_Trans].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Horario_Turno_Trans]
    WHERE 
      ([Horario_Turno_Trans].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Trans]
(
	@Horario_Turno_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Horario_Turno_Trans].[Horario_Turno_Secuencia],
                [Horario_Turno_Trans].[Horario_Secuencia],
                [Horario_Turno_Trans].[Turno_Descripcion],
                [Horario_Turno_Trans].[Turno_Hora_Desde],
                [Horario_Turno_Trans].[Turno_Hora_Hasta],
                [Horario_Turno_Trans].[Turno_Minutos_Cantidad],
                [Horario_Turno_Trans].[Turno_Cantidad_Publicadores],
                [Horario_Turno_Trans].[Registro_Estado],
                [Horario_Turno_Trans].[Registro_Fecha],
                [Horario_Turno_Trans].[Registro_Usuario]
    FROM [Horario_Turno_Trans]
    WHERE 
     ( [Horario_Turno_Trans].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Trans_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Horario_Turno_Trans].[Horario_Turno_Secuencia],
                [Horario_Turno_Trans].[Horario_Secuencia],
                [Horario_Turno_Trans].[Turno_Descripcion],
                [Horario_Turno_Trans].[Turno_Hora_Desde],
                [Horario_Turno_Trans].[Turno_Hora_Hasta],
                [Horario_Turno_Trans].[Turno_Minutos_Cantidad],
                [Horario_Turno_Trans].[Turno_Cantidad_Publicadores],
                [Horario_Turno_Trans].[Registro_Estado],
                [Horario_Turno_Trans].[Registro_Fecha],
                [Horario_Turno_Trans].[Registro_Usuario]
    FROM [Horario_Turno_Trans]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Trans_HorarioTrans]
(
	@Horario_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Horario_Turno_Trans].[Horario_Turno_Secuencia],
                [Horario_Turno_Trans].[Horario_Secuencia],
                [Horario_Turno_Trans].[Turno_Descripcion],
                [Horario_Turno_Trans].[Turno_Hora_Desde],
                [Horario_Turno_Trans].[Turno_Hora_Hasta],
                [Horario_Turno_Trans].[Turno_Minutos_Cantidad],
                [Horario_Turno_Trans].[Turno_Cantidad_Publicadores],
                [Horario_Turno_Trans].[Registro_Estado],
                [Horario_Turno_Trans].[Registro_Fecha],
                [Horario_Turno_Trans].[Registro_Usuario]
    FROM [Horario_Turno_Trans]
      WHERE
        ([Horario_Turno_Trans].[Horario_Secuencia] = @Horario_Secuencia)


RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Horario_Turno_Trans_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [htt].[Horario_Turno_Secuencia]
 ) AS [RowNumber],
				   htt.Horario_Turno_Secuencia , 
				   htt.Horario_Secuencia , 
				   htt.Turno_Descripcion , 
				   htt.Turno_Hora_Desde , 
				   htt.Turno_Hora_Hasta , 
				   htt.Turno_Minutos_Cantidad , 
				   htt.Turno_Cantidad_Publicadores , 
				   htt.Registro_Estado , 
				   htt.Registro_Fecha , 
				   htt.Registro_Usuario
		FROM  [dbo].[Horario_Turno_Trans]	As htt	
			 Inner Join Horario_Trans As ht
			   On  ht.Horario_Secuencia = htt.Horario_Secuencia

		   WHERE htt.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(htt.Horario_Turno_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(htt.Horario_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR htt.Turno_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR htt.Turno_Hora_Desde LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR htt.Turno_Hora_Hasta LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(htt.Turno_Minutos_Cantidad) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(htt.Turno_Cantidad_Publicadores) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR htt.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(htt.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR htt.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Horario_Turno_Secuencia]' AND @_orderByDirection0 = 0 THEN [Horario_Turno_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Horario_Turno_Secuencia]' AND @_orderByDirection0 = 1 THEN [Horario_Turno_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Horario_Secuencia]' AND @_orderByDirection0 = 0 THEN [Horario_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Horario_Secuencia]' AND @_orderByDirection0 = 1 THEN [Horario_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Turno_Descripcion]' AND @_orderByDirection0 = 0 THEN [Turno_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Turno_Descripcion]' AND @_orderByDirection0 = 1 THEN [Turno_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Turno_Hora_Desde]' AND @_orderByDirection0 = 0 THEN [Turno_Hora_Desde]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Turno_Hora_Desde]' AND @_orderByDirection0 = 1 THEN [Turno_Hora_Desde]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Turno_Hora_Hasta]' AND @_orderByDirection0 = 0 THEN [Turno_Hora_Hasta]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Turno_Hora_Hasta]' AND @_orderByDirection0 = 1 THEN [Turno_Hora_Hasta]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Turno_Minutos_Cantidad]' AND @_orderByDirection0 = 0 THEN [Turno_Minutos_Cantidad]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Turno_Minutos_Cantidad]' AND @_orderByDirection0 = 1 THEN [Turno_Minutos_Cantidad]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Turno_Cantidad_Publicadores]' AND @_orderByDirection0 = 0 THEN [Turno_Cantidad_Publicadores]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Turno_Cantidad_Publicadores]' AND @_orderByDirection0 = 1 THEN [Turno_Cantidad_Publicadores]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Horarios_Master
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horarios_Master_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horarios_Master_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horarios_Master_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horarios_Master_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horarios_Master]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horarios_Master]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horarios_Master_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horarios_Master_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horarios_Master_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horarios_Master_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horarios_Master_RutasMaster]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horarios_Master_RutasMaster]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Horarios_Master_Editar]
(
	@Horario_Cantidad_Dias  [Int] ,
	@Horario_Descripcion  [VarChar]  (50),
	@Horario_Turnos_Cantidad  [Int] ,
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Ruta_Secuencia  [Int] ,
	@Horario_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Horarios_Master] 
SET
	[Horario_Cantidad_Dias] = @Horario_Cantidad_Dias,
	[Horario_Descripcion] = @Horario_Descripcion,
	[Horario_Turnos_Cantidad] = @Horario_Turnos_Cantidad,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario,
	[Ruta_Secuencia] = @Ruta_Secuencia

WHERE
	[dbo].[Horarios_Master].[Horario_Numero] = @Horario_Numero



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Horarios_Master]
(
	[Horario_Cantidad_Dias],
	[Horario_Descripcion],
	[Horario_Turnos_Cantidad],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Ruta_Secuencia]
)
VALUES
(
	@Horario_Cantidad_Dias,
	@Horario_Descripcion,
	@Horario_Turnos_Cantidad,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Ruta_Secuencia
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Horario_Numero = SCOPE_IDENTITY() 
    SELECT DISTINCT @Horario_Numero AS 'Horario_Numero' 
        FROM [Horarios_Master]
        WHERE ([Horarios_Master].[Horario_Numero] = @Horario_Numero)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Horarios_Master_Borrar]
(
	@Horario_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Horario_Trans] SET
     [Horario_Trans].[Horario_Numero] = NULL
    WHERE     ([Horario_Trans].[Horario_Numero] = @Horario_Numero)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Turnos_Master] SET
     [Turnos_Master].[Horario_Numero] = NULL
    WHERE     ([Turnos_Master].[Horario_Numero] = @Horario_Numero)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Horarios_Master]
    WHERE 
      ([Horarios_Master].[Horario_Numero] = @Horario_Numero)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Horarios_Master]
(
	@Horario_Numero  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Horarios_Master].[Horario_Numero],
                [Horarios_Master].[Ruta_Secuencia],
                [Horarios_Master].[Horario_Descripcion],
                [Horarios_Master].[Horario_Cantidad_Dias],
                [Horarios_Master].[Horario_Turnos_Cantidad],
                [Horarios_Master].[Registro_Estado],
                [Horarios_Master].[Registro_Fecha],
                [Horarios_Master].[Registro_Usuario]
    FROM [Horarios_Master]
    WHERE 
     ( [Horarios_Master].[Horario_Numero] = @Horario_Numero)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Horarios_Master_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Horarios_Master].[Horario_Numero],
                [Horarios_Master].[Ruta_Secuencia],
                [Horarios_Master].[Horario_Descripcion],
                [Horarios_Master].[Horario_Cantidad_Dias],
                [Horarios_Master].[Horario_Turnos_Cantidad],
                [Horarios_Master].[Registro_Estado],
                [Horarios_Master].[Registro_Fecha],
                [Horarios_Master].[Registro_Usuario]
    FROM [Horarios_Master]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Horarios_Master_RutasMaster]
(
	@Ruta_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Horarios_Master].[Horario_Numero],
                [Horarios_Master].[Ruta_Secuencia],
                [Horarios_Master].[Horario_Descripcion],
                [Horarios_Master].[Horario_Cantidad_Dias],
                [Horarios_Master].[Horario_Turnos_Cantidad],
                [Horarios_Master].[Registro_Estado],
                [Horarios_Master].[Registro_Fecha],
                [Horarios_Master].[Registro_Usuario]
    FROM [Horarios_Master]
      WHERE
        ([Horarios_Master].[Ruta_Secuencia] = @Ruta_Secuencia)


RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Horarios_Master_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [hm].[Horario_Numero]
 ) AS [RowNumber],
				   hm.Horario_Numero , 
				   hm.Ruta_Secuencia , 
				   hm.Horario_Descripcion , 
				   hm.Horario_Cantidad_Dias , 
				   hm.Horario_Turnos_Cantidad , 
				   hm.Registro_Estado , 
				   hm.Registro_Fecha , 
				   hm.Registro_Usuario
		FROM  [dbo].[Horarios_Master]	As hm	
			 Inner Join Rutas_Master As rm
			   On  rm.Ruta_Secuencia = hm.Ruta_Secuencia

		   WHERE hm.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(hm.Horario_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(hm.Ruta_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR hm.Horario_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(hm.Horario_Cantidad_Dias) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(hm.Horario_Turnos_Cantidad) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR hm.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(hm.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR hm.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Horario_Numero]' AND @_orderByDirection0 = 0 THEN [Horario_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Horario_Numero]' AND @_orderByDirection0 = 1 THEN [Horario_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Secuencia]' AND @_orderByDirection0 = 0 THEN [Ruta_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Secuencia]' AND @_orderByDirection0 = 1 THEN [Ruta_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Horario_Descripcion]' AND @_orderByDirection0 = 0 THEN [Horario_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Horario_Descripcion]' AND @_orderByDirection0 = 1 THEN [Horario_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Horario_Cantidad_Dias]' AND @_orderByDirection0 = 0 THEN [Horario_Cantidad_Dias]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Horario_Cantidad_Dias]' AND @_orderByDirection0 = 1 THEN [Horario_Cantidad_Dias]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Horario_Turnos_Cantidad]' AND @_orderByDirection0 = 0 THEN [Horario_Turnos_Cantidad]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Horario_Turnos_Cantidad]' AND @_orderByDirection0 = 1 THEN [Horario_Turnos_Cantidad]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Horas_Cata
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horas_Cata_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horas_Cata_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horas_Cata_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horas_Cata_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horas_Cata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horas_Cata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horas_Cata_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horas_Cata_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Horas_Cata_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Horas_Cata_Paging]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Horas_Cata_Editar]
(
	@Hora_Desde  [VarChar]  (50),
	@Hora_Hasta  [VarChar]  (50),
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Hora_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Horas_Cata] 
SET
	[Hora_Desde] = @Hora_Desde,
	[Hora_Hasta] = @Hora_Hasta,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Horas_Cata].[Hora_Secuencia] = @Hora_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Horas_Cata]
(
	[Hora_Desde],
	[Hora_Hasta],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Hora_Desde,
	@Hora_Hasta,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Hora_Secuencia = SCOPE_IDENTITY() 
    SELECT DISTINCT @Hora_Secuencia AS 'Hora_Secuencia' 
        FROM [Horas_Cata]
        WHERE ([Horas_Cata].[Hora_Secuencia] = @Hora_Secuencia)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Horas_Cata_Borrar]
(
	@Hora_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Personas_Diponibilidad] SET
     [Personas_Diponibilidad].[Hora_Secuencia] = NULL
    WHERE     ([Personas_Diponibilidad].[Hora_Secuencia] = @Hora_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Horas_Cata]
    WHERE 
      ([Horas_Cata].[Hora_Secuencia] = @Hora_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Horas_Cata]
(
	@Hora_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Horas_Cata].[Hora_Secuencia],
                [Horas_Cata].[Hora_Desde],
                [Horas_Cata].[Hora_Hasta],
                [Horas_Cata].[Registro_Estado],
                [Horas_Cata].[Registro_Fecha],
                [Horas_Cata].[Registro_Usuario]
    FROM [Horas_Cata]
    WHERE 
     ( [Horas_Cata].[Hora_Secuencia] = @Hora_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Horas_Cata_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Horas_Cata].[Hora_Secuencia],
                [Horas_Cata].[Hora_Desde],
                [Horas_Cata].[Hora_Hasta],
                [Horas_Cata].[Registro_Estado],
                [Horas_Cata].[Registro_Fecha],
                [Horas_Cata].[Registro_Usuario]
    FROM [Horas_Cata]

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Horas_Cata_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [hc].[Hora_Secuencia]
 ) AS [RowNumber],
				   hc.Hora_Secuencia , 
				   hc.Hora_Desde , 
				   hc.Hora_Hasta , 
				   hc.Registro_Estado , 
				   hc.Registro_Fecha , 
				   hc.Registro_Usuario
		FROM  [dbo].[Horas_Cata]	As hc	

		   WHERE hc.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(hc.Hora_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR hc.Hora_Desde LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR hc.Hora_Hasta LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR hc.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(hc.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR hc.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Hora_Secuencia]' AND @_orderByDirection0 = 0 THEN [Hora_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Hora_Secuencia]' AND @_orderByDirection0 = 1 THEN [Hora_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Hora_Desde]' AND @_orderByDirection0 = 0 THEN [Hora_Desde]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Hora_Desde]' AND @_orderByDirection0 = 1 THEN [Hora_Desde]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Hora_Hasta]' AND @_orderByDirection0 = 0 THEN [Hora_Hasta]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Hora_Hasta]' AND @_orderByDirection0 = 1 THEN [Hora_Hasta]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Idiomas_Cata
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Idiomas_Cata_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Idiomas_Cata_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Idiomas_Cata_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Idiomas_Cata_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Idiomas_Cata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Idiomas_Cata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Idiomas_Cata_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Idiomas_Cata_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Idiomas_Cata_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Idiomas_Cata_Paging]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Idiomas_Cata_Editar]
(
	@Idioma_Descripcion  [VarChar]  (50),
	@Idioma_Orden  [Int] ,
	@Idioma_Simbolo  [VarChar]  (50),
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Idioma_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Idiomas_Cata] 
SET
	[Idioma_Descripcion] = @Idioma_Descripcion,
	[Idioma_Orden] = @Idioma_Orden,
	[Idioma_Simbolo] = @Idioma_Simbolo,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Idiomas_Cata].[Idioma_Numero] = @Idioma_Numero



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Idiomas_Cata]
(
	[Idioma_Descripcion],
	[Idioma_Orden],
	[Idioma_Simbolo],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Idioma_Descripcion,
	@Idioma_Orden,
	@Idioma_Simbolo,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Idioma_Numero = SCOPE_IDENTITY() 
    SELECT DISTINCT @Idioma_Numero AS 'Idioma_Numero' 
        FROM [Idiomas_Cata]
        WHERE ([Idiomas_Cata].[Idioma_Numero] = @Idioma_Numero)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Idiomas_Cata_Borrar]
(
	@Idioma_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Horario_Turno_Informe_Trans] SET
     [Horario_Turno_Informe_Trans].[Idioma_Numero] = NULL
    WHERE     ([Horario_Turno_Informe_Trans].[Idioma_Numero] = @Idioma_Numero)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Idiomas_Cata]
    WHERE 
      ([Idiomas_Cata].[Idioma_Numero] = @Idioma_Numero)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Idiomas_Cata]
(
	@Idioma_Numero  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Idiomas_Cata].[Idioma_Numero],
                [Idiomas_Cata].[Idioma_Descripcion],
                [Idiomas_Cata].[Idioma_Simbolo],
                [Idiomas_Cata].[Idioma_Orden],
                [Idiomas_Cata].[Registro_Estado],
                [Idiomas_Cata].[Registro_Fecha],
                [Idiomas_Cata].[Registro_Usuario]
    FROM [Idiomas_Cata]
    WHERE 
     ( [Idiomas_Cata].[Idioma_Numero] = @Idioma_Numero)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Idiomas_Cata_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Idiomas_Cata].[Idioma_Numero],
                [Idiomas_Cata].[Idioma_Descripcion],
                [Idiomas_Cata].[Idioma_Simbolo],
                [Idiomas_Cata].[Idioma_Orden],
                [Idiomas_Cata].[Registro_Estado],
                [Idiomas_Cata].[Registro_Fecha],
                [Idiomas_Cata].[Registro_Usuario]
    FROM [Idiomas_Cata]

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Idiomas_Cata_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [ic].[Idioma_Numero]
 ) AS [RowNumber],
				   ic.Idioma_Numero , 
				   ic.Idioma_Descripcion , 
				   ic.Idioma_Simbolo , 
				   ic.Idioma_Orden , 
				   ic.Registro_Estado , 
				   ic.Registro_Fecha , 
				   ic.Registro_Usuario
		FROM  [dbo].[Idiomas_Cata]	As ic	

		   WHERE ic.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(ic.Idioma_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ic.Idioma_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ic.Idioma_Simbolo LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(ic.Idioma_Orden) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ic.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(ic.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ic.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Idioma_Numero]' AND @_orderByDirection0 = 0 THEN [Idioma_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Idioma_Numero]' AND @_orderByDirection0 = 1 THEN [Idioma_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Idioma_Descripcion]' AND @_orderByDirection0 = 0 THEN [Idioma_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Idioma_Descripcion]' AND @_orderByDirection0 = 1 THEN [Idioma_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Idioma_Simbolo]' AND @_orderByDirection0 = 0 THEN [Idioma_Simbolo]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Idioma_Simbolo]' AND @_orderByDirection0 = 1 THEN [Idioma_Simbolo]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Idioma_Orden]' AND @_orderByDirection0 = 0 THEN [Idioma_Orden]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Idioma_Orden]' AND @_orderByDirection0 = 1 THEN [Idioma_Orden]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Notificaciones_Master
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Master_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Master_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Master_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Master_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Master]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Master]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Master_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Master_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Master_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Master_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Master_NotificacionesPrioridadesCata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Master_NotificacionesPrioridadesCata]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Notificaciones_Master_Editar]
(
	@Notificacion_Descripcion  [VarChar]  (500),
	@Notificacion_Mensaje  [VarChar]  (8000),
	@Prioridad_Numero  [Int] ,
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Notificacion_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Notificaciones_Master] 
SET
	[Notificacion_Descripcion] = @Notificacion_Descripcion,
	[Notificacion_Mensaje] = @Notificacion_Mensaje,
	[Prioridad_Numero] = @Prioridad_Numero,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Notificaciones_Master].[Notificacion_Numero] = @Notificacion_Numero



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Notificaciones_Master]
(
	[Notificacion_Descripcion],
	[Notificacion_Mensaje],
	[Prioridad_Numero],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Notificacion_Descripcion,
	@Notificacion_Mensaje,
	@Prioridad_Numero,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Notificacion_Numero = SCOPE_IDENTITY() 
    SELECT DISTINCT @Notificacion_Numero AS 'Notificacion_Numero' 
        FROM [Notificaciones_Master]
        WHERE ([Notificaciones_Master].[Notificacion_Numero] = @Notificacion_Numero)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Notificaciones_Master_Borrar]
(
	@Notificacion_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Personas_Notificaciones_Trans] SET
     [Personas_Notificaciones_Trans].[Notificacion_Numero] = NULL
    WHERE     ([Personas_Notificaciones_Trans].[Notificacion_Numero] = @Notificacion_Numero)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Notificaciones_Objetivo_Trans] SET
     [Notificaciones_Objetivo_Trans].[Notificacion_Numero] = NULL
    WHERE     ([Notificaciones_Objetivo_Trans].[Notificacion_Numero] = @Notificacion_Numero)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Notificaciones_Master]
    WHERE 
      ([Notificaciones_Master].[Notificacion_Numero] = @Notificacion_Numero)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Notificaciones_Master]
(
	@Notificacion_Numero  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Notificaciones_Master].[Notificacion_Numero],
                [Notificaciones_Master].[Prioridad_Numero],
                [Notificaciones_Master].[Notificacion_Descripcion],
                [Notificaciones_Master].[Notificacion_Mensaje],
                [Notificaciones_Master].[Registro_Estado],
                [Notificaciones_Master].[Registro_Fecha],
                [Notificaciones_Master].[Registro_Usuario]
    FROM [Notificaciones_Master]
    WHERE 
     ( [Notificaciones_Master].[Notificacion_Numero] = @Notificacion_Numero)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Notificaciones_Master_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Notificaciones_Master].[Notificacion_Numero],
                [Notificaciones_Master].[Prioridad_Numero],
                [Notificaciones_Master].[Notificacion_Descripcion],
                [Notificaciones_Master].[Notificacion_Mensaje],
                [Notificaciones_Master].[Registro_Estado],
                [Notificaciones_Master].[Registro_Fecha],
                [Notificaciones_Master].[Registro_Usuario]
    FROM [Notificaciones_Master]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Notificaciones_Master_NotificacionesPrioridadesCata]
(
	@Prioridad_Numero  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Notificaciones_Master].[Notificacion_Numero],
                [Notificaciones_Master].[Prioridad_Numero],
                [Notificaciones_Master].[Notificacion_Descripcion],
                [Notificaciones_Master].[Notificacion_Mensaje],
                [Notificaciones_Master].[Registro_Estado],
                [Notificaciones_Master].[Registro_Fecha],
                [Notificaciones_Master].[Registro_Usuario]
    FROM [Notificaciones_Master]
      WHERE
        ([Notificaciones_Master].[Prioridad_Numero] = @Prioridad_Numero)


RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Notificaciones_Master_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [nm].[Notificacion_Numero]
 ) AS [RowNumber],
				   nm.Notificacion_Numero , 
				   nm.Prioridad_Numero , 
				   nm.Notificacion_Descripcion , 
				   nm.Notificacion_Mensaje , 
				   nm.Registro_Estado , 
				   nm.Registro_Fecha , 
				   nm.Registro_Usuario
		FROM  [dbo].[Notificaciones_Master]	As nm	
			 Inner Join Notificaciones_Prioridades_Cata As npc
			   On  npc.Prioridad_Numero = nm.Prioridad_Numero

		   WHERE nm.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(nm.Notificacion_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(nm.Prioridad_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR nm.Notificacion_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR nm.Notificacion_Mensaje LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR nm.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(nm.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR nm.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Notificacion_Numero]' AND @_orderByDirection0 = 0 THEN [Notificacion_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Notificacion_Numero]' AND @_orderByDirection0 = 1 THEN [Notificacion_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Prioridad_Numero]' AND @_orderByDirection0 = 0 THEN [Prioridad_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Prioridad_Numero]' AND @_orderByDirection0 = 1 THEN [Prioridad_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Notificacion_Descripcion]' AND @_orderByDirection0 = 0 THEN [Notificacion_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Notificacion_Descripcion]' AND @_orderByDirection0 = 1 THEN [Notificacion_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Notificacion_Mensaje]' AND @_orderByDirection0 = 0 THEN [Notificacion_Mensaje]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Notificacion_Mensaje]' AND @_orderByDirection0 = 1 THEN [Notificacion_Mensaje]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Notificaciones_Objetivo_Trans
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Objetivo_Trans_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Objetivo_Trans_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Objetivo_Trans_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Objetivo_Trans_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Objetivo_Trans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Objetivo_Trans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Objetivo_Trans_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Objetivo_Trans_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Objetivo_Trans_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Objetivo_Trans_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Objetivo_Trans_NotificacionesMaster]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Objetivo_Trans_NotificacionesMaster]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Objetivo_Trans_RolesCata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Objetivo_Trans_RolesCata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Objetivo_Trans_RutasMaster]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Objetivo_Trans_RutasMaster]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Objetivo_Trans_ZonasMaster]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Objetivo_Trans_ZonasMaster]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Notificaciones_Objetivo_Trans_Editar]
(
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Notificacion_Numero  [Int] ,
	@Role_Numero  [Int] ,
	@Ruta_Secuencia  [Int] ,
	@Zona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Notificaciones_Objetivo_Trans] 
SET
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Notificaciones_Objetivo_Trans].[Notificacion_Numero] = @Notificacion_Numero AND
	[dbo].[Notificaciones_Objetivo_Trans].[Role_Numero] = @Role_Numero AND
	[dbo].[Notificaciones_Objetivo_Trans].[Ruta_Secuencia] = @Ruta_Secuencia AND
	[dbo].[Notificaciones_Objetivo_Trans].[Zona_Secuencia] = @Zona_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Notificaciones_Objetivo_Trans]
(
	[Notificacion_Numero],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Role_Numero],
	[Ruta_Secuencia],
	[Zona_Secuencia]
)
VALUES
(
	@Notificacion_Numero,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Role_Numero,
	@Ruta_Secuencia,
	@Zona_Secuencia
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Notificaciones_Objetivo_Trans_Borrar]
(
	@Notificacion_Numero  [Int] ,
	@Role_Numero  [Int] ,
	@Ruta_Secuencia  [Int] ,
	@Zona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END


  DELETE FROM [Notificaciones_Objetivo_Trans]
    WHERE 
      ([Notificaciones_Objetivo_Trans].[Notificacion_Numero] = @Notificacion_Numero)
     AND       ([Notificaciones_Objetivo_Trans].[Zona_Secuencia] = @Zona_Secuencia)
     AND       ([Notificaciones_Objetivo_Trans].[Ruta_Secuencia] = @Ruta_Secuencia)
     AND       ([Notificaciones_Objetivo_Trans].[Role_Numero] = @Role_Numero)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Notificaciones_Objetivo_Trans]
(
	@Notificacion_Numero  [Int] ,
	@Role_Numero  [Int] ,
	@Ruta_Secuencia  [Int] ,
	@Zona_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Notificaciones_Objetivo_Trans].[Notificacion_Numero],
                [Notificaciones_Objetivo_Trans].[Zona_Secuencia],
                [Notificaciones_Objetivo_Trans].[Ruta_Secuencia],
                [Notificaciones_Objetivo_Trans].[Role_Numero],
                [Notificaciones_Objetivo_Trans].[Registro_Estado],
                [Notificaciones_Objetivo_Trans].[Registro_Fecha],
                [Notificaciones_Objetivo_Trans].[Registro_Usuario]
    FROM [Notificaciones_Objetivo_Trans]
    WHERE 
     ( [Notificaciones_Objetivo_Trans].[Notificacion_Numero] = @Notificacion_Numero)
     AND      ( [Notificaciones_Objetivo_Trans].[Zona_Secuencia] = @Zona_Secuencia)
     AND      ( [Notificaciones_Objetivo_Trans].[Ruta_Secuencia] = @Ruta_Secuencia)
     AND      ( [Notificaciones_Objetivo_Trans].[Role_Numero] = @Role_Numero)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Notificaciones_Objetivo_Trans_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Notificaciones_Objetivo_Trans].[Notificacion_Numero],
                [Notificaciones_Objetivo_Trans].[Zona_Secuencia],
                [Notificaciones_Objetivo_Trans].[Ruta_Secuencia],
                [Notificaciones_Objetivo_Trans].[Role_Numero],
                [Notificaciones_Objetivo_Trans].[Registro_Estado],
                [Notificaciones_Objetivo_Trans].[Registro_Fecha],
                [Notificaciones_Objetivo_Trans].[Registro_Usuario]
    FROM [Notificaciones_Objetivo_Trans]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Notificaciones_Objetivo_Trans_NotificacionesMaster]
(
	@Notificacion_Numero  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Notificaciones_Objetivo_Trans].[Notificacion_Numero],
                [Notificaciones_Objetivo_Trans].[Zona_Secuencia],
                [Notificaciones_Objetivo_Trans].[Ruta_Secuencia],
                [Notificaciones_Objetivo_Trans].[Role_Numero],
                [Notificaciones_Objetivo_Trans].[Registro_Estado],
                [Notificaciones_Objetivo_Trans].[Registro_Fecha],
                [Notificaciones_Objetivo_Trans].[Registro_Usuario]
    FROM [Notificaciones_Objetivo_Trans]
      WHERE
        ([Notificaciones_Objetivo_Trans].[Notificacion_Numero] = @Notificacion_Numero)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Notificaciones_Objetivo_Trans_RolesCata]
(
	@Role_Numero  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Notificaciones_Objetivo_Trans].[Notificacion_Numero],
                [Notificaciones_Objetivo_Trans].[Zona_Secuencia],
                [Notificaciones_Objetivo_Trans].[Ruta_Secuencia],
                [Notificaciones_Objetivo_Trans].[Role_Numero],
                [Notificaciones_Objetivo_Trans].[Registro_Estado],
                [Notificaciones_Objetivo_Trans].[Registro_Fecha],
                [Notificaciones_Objetivo_Trans].[Registro_Usuario]
    FROM [Notificaciones_Objetivo_Trans]
      WHERE
        ([Notificaciones_Objetivo_Trans].[Role_Numero] = @Role_Numero)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Notificaciones_Objetivo_Trans_RutasMaster]
(
	@Ruta_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Notificaciones_Objetivo_Trans].[Notificacion_Numero],
                [Notificaciones_Objetivo_Trans].[Zona_Secuencia],
                [Notificaciones_Objetivo_Trans].[Ruta_Secuencia],
                [Notificaciones_Objetivo_Trans].[Role_Numero],
                [Notificaciones_Objetivo_Trans].[Registro_Estado],
                [Notificaciones_Objetivo_Trans].[Registro_Fecha],
                [Notificaciones_Objetivo_Trans].[Registro_Usuario]
    FROM [Notificaciones_Objetivo_Trans]
      WHERE
        ([Notificaciones_Objetivo_Trans].[Ruta_Secuencia] = @Ruta_Secuencia)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Notificaciones_Objetivo_Trans_ZonasMaster]
(
	@Zona_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Notificaciones_Objetivo_Trans].[Notificacion_Numero],
                [Notificaciones_Objetivo_Trans].[Zona_Secuencia],
                [Notificaciones_Objetivo_Trans].[Ruta_Secuencia],
                [Notificaciones_Objetivo_Trans].[Role_Numero],
                [Notificaciones_Objetivo_Trans].[Registro_Estado],
                [Notificaciones_Objetivo_Trans].[Registro_Fecha],
                [Notificaciones_Objetivo_Trans].[Registro_Usuario]
    FROM [Notificaciones_Objetivo_Trans]
      WHERE
        ([Notificaciones_Objetivo_Trans].[Zona_Secuencia] = @Zona_Secuencia)


RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Notificaciones_Objetivo_Trans_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [not].[Notificacion_Numero],
		                [not].[Zona_Secuencia],
		                [not].[Ruta_Secuencia],
		                [not].[Role_Numero]
 ) AS [RowNumber],
				   not.Notificacion_Numero , 
				   not.Zona_Secuencia , 
				   not.Ruta_Secuencia , 
				   not.Role_Numero , 
				   not.Registro_Estado , 
				   not.Registro_Fecha , 
				   not.Registro_Usuario
		FROM  [dbo].[Notificaciones_Objetivo_Trans]	As not	
			 Inner Join Notificaciones_Master As nm
			   On  nm.Notificacion_Numero = not.Notificacion_Numero
			 Inner Join Roles_Cata As rc
			   On  rc.Role_Numero = not.Role_Numero
			 Inner Join Rutas_Master As rm
			   On  rm.Ruta_Secuencia = not.Ruta_Secuencia
			 Inner Join Zonas_Master As zm
			   On  zm.Zona_Secuencia = not.Zona_Secuencia

		   WHERE not.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(not.Notificacion_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(not.Zona_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(not.Ruta_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(not.Role_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR not.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(not.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR not.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Notificacion_Numero]' AND @_orderByDirection0 = 0 THEN [Notificacion_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Notificacion_Numero]' AND @_orderByDirection0 = 1 THEN [Notificacion_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Zona_Secuencia]' AND @_orderByDirection0 = 0 THEN [Zona_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Zona_Secuencia]' AND @_orderByDirection0 = 1 THEN [Zona_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Secuencia]' AND @_orderByDirection0 = 0 THEN [Ruta_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Secuencia]' AND @_orderByDirection0 = 1 THEN [Ruta_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Role_Numero]' AND @_orderByDirection0 = 0 THEN [Role_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Role_Numero]' AND @_orderByDirection0 = 1 THEN [Role_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Notificaciones_Personas_Trans
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Personas_Trans_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Personas_Trans_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Personas_Trans_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Personas_Trans_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Personas_Trans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Personas_Trans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Personas_Trans_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Personas_Trans_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Personas_Trans_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Personas_Trans_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Personas_Trans_PersonasMaster]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Personas_Trans_PersonasMaster]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Notificaciones_Personas_Trans_Editar]
(
	@Notificacion_Persona_Vista  [Char]  (1) = 'N',
	@Notificacion_Persona_Vista_Fecha  [DateTime] ,
	@Registro_Estado  [Char]  (1) = 'A',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (150),
	@Notifcacion_Secuencia  [Int] ,
	@Persona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Notificaciones_Personas_Trans] 
SET
	[Notificacion_Persona_Vista] = @Notificacion_Persona_Vista,
	[Notificacion_Persona_Vista_Fecha] = @Notificacion_Persona_Vista_Fecha,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Notificaciones_Personas_Trans].[Notifcacion_Secuencia] = @Notifcacion_Secuencia AND
	[dbo].[Notificaciones_Personas_Trans].[Persona_Secuencia] = @Persona_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Notificaciones_Personas_Trans]
(
	[Notifcacion_Secuencia],
	[Notificacion_Persona_Vista],
	[Notificacion_Persona_Vista_Fecha],
	[Persona_Secuencia],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Notifcacion_Secuencia,
	@Notificacion_Persona_Vista,
	@Notificacion_Persona_Vista_Fecha,
	@Persona_Secuencia,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Notificaciones_Personas_Trans_Borrar]
(
	@Notifcacion_Secuencia  [Int] ,
	@Persona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END


  DELETE FROM [Notificaciones_Personas_Trans]
    WHERE 
      ([Notificaciones_Personas_Trans].[Persona_Secuencia] = @Persona_Secuencia)
     AND       ([Notificaciones_Personas_Trans].[Notifcacion_Secuencia] = @Notifcacion_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Notificaciones_Personas_Trans]
(
	@Notifcacion_Secuencia  [Int] ,
	@Persona_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Notificaciones_Personas_Trans].[Persona_Secuencia],
                [Notificaciones_Personas_Trans].[Notifcacion_Secuencia],
                [Notificaciones_Personas_Trans].[Notificacion_Persona_Vista],
                [Notificaciones_Personas_Trans].[Notificacion_Persona_Vista_Fecha],
                [Notificaciones_Personas_Trans].[Registro_Estado],
                [Notificaciones_Personas_Trans].[Registro_Fecha],
                [Notificaciones_Personas_Trans].[Registro_Usuario]
    FROM [Notificaciones_Personas_Trans]
    WHERE 
     ( [Notificaciones_Personas_Trans].[Persona_Secuencia] = @Persona_Secuencia)
     AND      ( [Notificaciones_Personas_Trans].[Notifcacion_Secuencia] = @Notifcacion_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Notificaciones_Personas_Trans_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Notificaciones_Personas_Trans].[Persona_Secuencia],
                [Notificaciones_Personas_Trans].[Notifcacion_Secuencia],
                [Notificaciones_Personas_Trans].[Notificacion_Persona_Vista],
                [Notificaciones_Personas_Trans].[Notificacion_Persona_Vista_Fecha],
                [Notificaciones_Personas_Trans].[Registro_Estado],
                [Notificaciones_Personas_Trans].[Registro_Fecha],
                [Notificaciones_Personas_Trans].[Registro_Usuario]
    FROM [Notificaciones_Personas_Trans]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Notificaciones_Personas_Trans_PersonasMaster]
(
	@Persona_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Notificaciones_Personas_Trans].[Persona_Secuencia],
                [Notificaciones_Personas_Trans].[Notifcacion_Secuencia],
                [Notificaciones_Personas_Trans].[Notificacion_Persona_Vista],
                [Notificaciones_Personas_Trans].[Notificacion_Persona_Vista_Fecha],
                [Notificaciones_Personas_Trans].[Registro_Estado],
                [Notificaciones_Personas_Trans].[Registro_Fecha],
                [Notificaciones_Personas_Trans].[Registro_Usuario]
    FROM [Notificaciones_Personas_Trans]
      WHERE
        ([Notificaciones_Personas_Trans].[Persona_Secuencia] = @Persona_Secuencia)


RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Notificaciones_Personas_Trans_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [npt].[Persona_Secuencia],
		                [npt].[Notifcacion_Secuencia]
 ) AS [RowNumber],
				   npt.Persona_Secuencia , 
				   npt.Notifcacion_Secuencia , 
				   npt.Notificacion_Persona_Vista , 
				   npt.Notificacion_Persona_Vista_Fecha , 
				   npt.Registro_Estado , 
				   npt.Registro_Fecha , 
				   npt.Registro_Usuario
		FROM  [dbo].[Notificaciones_Personas_Trans]	As npt	
			 Inner Join Personas_Master As pm
			   On  pm.Persona_Secuencia = npt.Persona_Secuencia

		   WHERE npt.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(npt.Persona_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(npt.Notifcacion_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR npt.Notificacion_Persona_Vista LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(npt.Notificacion_Persona_Vista_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR npt.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(npt.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR npt.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 0 THEN [Persona_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 1 THEN [Persona_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Notifcacion_Secuencia]' AND @_orderByDirection0 = 0 THEN [Notifcacion_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Notifcacion_Secuencia]' AND @_orderByDirection0 = 1 THEN [Notifcacion_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Notificacion_Persona_Vista]' AND @_orderByDirection0 = 0 THEN [Notificacion_Persona_Vista]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Notificacion_Persona_Vista]' AND @_orderByDirection0 = 1 THEN [Notificacion_Persona_Vista]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Notificacion_Persona_Vista_Fecha]' AND @_orderByDirection0 = 0 THEN [Notificacion_Persona_Vista_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Notificacion_Persona_Vista_Fecha]' AND @_orderByDirection0 = 1 THEN [Notificacion_Persona_Vista_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Notificaciones_Prioridades_Cata
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Prioridades_Cata_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Prioridades_Cata_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Prioridades_Cata_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Prioridades_Cata_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Prioridades_Cata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Prioridades_Cata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Prioridades_Cata_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Prioridades_Cata_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Notificaciones_Prioridades_Cata_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Notificaciones_Prioridades_Cata_Paging]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Notificaciones_Prioridades_Cata_Editar]
(
	@Prioridad_Color  [VarChar]  (50),
	@Prioridad_Descripcion  [VarChar]  (50),
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Prioridad_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Notificaciones_Prioridades_Cata] 
SET
	[Prioridad_Color] = @Prioridad_Color,
	[Prioridad_Descripcion] = @Prioridad_Descripcion,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Notificaciones_Prioridades_Cata].[Prioridad_Numero] = @Prioridad_Numero



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Notificaciones_Prioridades_Cata]
(
	[Prioridad_Color],
	[Prioridad_Descripcion],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Prioridad_Color,
	@Prioridad_Descripcion,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Prioridad_Numero = SCOPE_IDENTITY() 
    SELECT DISTINCT @Prioridad_Numero AS 'Prioridad_Numero' 
        FROM [Notificaciones_Prioridades_Cata]
        WHERE ([Notificaciones_Prioridades_Cata].[Prioridad_Numero] = @Prioridad_Numero)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Notificaciones_Prioridades_Cata_Borrar]
(
	@Prioridad_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Notificaciones_Master] SET
     [Notificaciones_Master].[Prioridad_Numero] = NULL
    WHERE     ([Notificaciones_Master].[Prioridad_Numero] = @Prioridad_Numero)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Notificaciones_Prioridades_Cata]
    WHERE 
      ([Notificaciones_Prioridades_Cata].[Prioridad_Numero] = @Prioridad_Numero)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Notificaciones_Prioridades_Cata]
(
	@Prioridad_Numero  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Notificaciones_Prioridades_Cata].[Prioridad_Numero],
                [Notificaciones_Prioridades_Cata].[Prioridad_Descripcion],
                [Notificaciones_Prioridades_Cata].[Prioridad_Color],
                [Notificaciones_Prioridades_Cata].[Registro_Estado],
                [Notificaciones_Prioridades_Cata].[Registro_Fecha],
                [Notificaciones_Prioridades_Cata].[Registro_Usuario]
    FROM [Notificaciones_Prioridades_Cata]
    WHERE 
     ( [Notificaciones_Prioridades_Cata].[Prioridad_Numero] = @Prioridad_Numero)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Notificaciones_Prioridades_Cata_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Notificaciones_Prioridades_Cata].[Prioridad_Numero],
                [Notificaciones_Prioridades_Cata].[Prioridad_Descripcion],
                [Notificaciones_Prioridades_Cata].[Prioridad_Color],
                [Notificaciones_Prioridades_Cata].[Registro_Estado],
                [Notificaciones_Prioridades_Cata].[Registro_Fecha],
                [Notificaciones_Prioridades_Cata].[Registro_Usuario]
    FROM [Notificaciones_Prioridades_Cata]

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Notificaciones_Prioridades_Cata_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [npc].[Prioridad_Numero]
 ) AS [RowNumber],
				   npc.Prioridad_Numero , 
				   npc.Prioridad_Descripcion , 
				   npc.Prioridad_Color , 
				   npc.Registro_Estado , 
				   npc.Registro_Fecha , 
				   npc.Registro_Usuario
		FROM  [dbo].[Notificaciones_Prioridades_Cata]	As npc	

		   WHERE npc.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(npc.Prioridad_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR npc.Prioridad_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR npc.Prioridad_Color LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR npc.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(npc.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR npc.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Prioridad_Numero]' AND @_orderByDirection0 = 0 THEN [Prioridad_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Prioridad_Numero]' AND @_orderByDirection0 = 1 THEN [Prioridad_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Prioridad_Descripcion]' AND @_orderByDirection0 = 0 THEN [Prioridad_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Prioridad_Descripcion]' AND @_orderByDirection0 = 1 THEN [Prioridad_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Prioridad_Color]' AND @_orderByDirection0 = 0 THEN [Prioridad_Color]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Prioridad_Color]' AND @_orderByDirection0 = 1 THEN [Prioridad_Color]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Parametros_Trans
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Parametros_Trans_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Parametros_Trans_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Parametros_Trans_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Parametros_Trans_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Parametros_Trans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Parametros_Trans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Parametros_Trans_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Parametros_Trans_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Parametros_Trans_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Parametros_Trans_Paging]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Parametros_Trans_Editar]
(
	@Parametro_Descripcion  [VarChar]  (150),
	@Parametro_Explicacion  [VarChar]  (500),
	@Parametro_Valor  [VarChar]  (200),
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Parametro_Codigo  [VarChar]  (50)

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Parametros_Trans] 
SET
	[Parametro_Descripcion] = @Parametro_Descripcion,
	[Parametro_Explicacion] = @Parametro_Explicacion,
	[Parametro_Valor] = @Parametro_Valor,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Parametros_Trans].[Parametro_Codigo] = @Parametro_Codigo



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Parametros_Trans]
(
	[Parametro_Codigo],
	[Parametro_Descripcion],
	[Parametro_Explicacion],
	[Parametro_Valor],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Parametro_Codigo,
	@Parametro_Descripcion,
	@Parametro_Explicacion,
	@Parametro_Valor,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Parametros_Trans_Borrar]
(
	@Parametro_Codigo  [VarChar]  (50)

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END


  DELETE FROM [Parametros_Trans]
    WHERE 
      ([Parametros_Trans].[Parametro_Codigo] = @Parametro_Codigo)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Parametros_Trans]
(
	@Parametro_Codigo  [VarChar]  (50)

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Parametros_Trans].[Parametro_Codigo],
                [Parametros_Trans].[Parametro_Descripcion],
                [Parametros_Trans].[Parametro_Explicacion],
                [Parametros_Trans].[Parametro_Valor],
                [Parametros_Trans].[Registro_Estado],
                [Parametros_Trans].[Registro_Fecha],
                [Parametros_Trans].[Registro_Usuario]
    FROM [Parametros_Trans]
    WHERE 
     ( [Parametros_Trans].[Parametro_Codigo] = @Parametro_Codigo)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Parametros_Trans_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Parametros_Trans].[Parametro_Codigo],
                [Parametros_Trans].[Parametro_Descripcion],
                [Parametros_Trans].[Parametro_Explicacion],
                [Parametros_Trans].[Parametro_Valor],
                [Parametros_Trans].[Registro_Estado],
                [Parametros_Trans].[Registro_Fecha],
                [Parametros_Trans].[Registro_Usuario]
    FROM [Parametros_Trans]

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Parametros_Trans_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [pt].[Parametro_Codigo]
 ) AS [RowNumber],
				   pt.Parametro_Codigo , 
				   pt.Parametro_Descripcion , 
				   pt.Parametro_Explicacion , 
				   pt.Parametro_Valor , 
				   pt.Registro_Estado , 
				   pt.Registro_Fecha , 
				   pt.Registro_Usuario
		FROM  [dbo].[Parametros_Trans]	As pt	

		   WHERE pt.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR pt.Parametro_Codigo LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pt.Parametro_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pt.Parametro_Explicacion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pt.Parametro_Valor LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pt.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(pt.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pt.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Parametro_Codigo]' AND @_orderByDirection0 = 0 THEN [Parametro_Codigo]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Parametro_Codigo]' AND @_orderByDirection0 = 1 THEN [Parametro_Codigo]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Parametro_Descripcion]' AND @_orderByDirection0 = 0 THEN [Parametro_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Parametro_Descripcion]' AND @_orderByDirection0 = 1 THEN [Parametro_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Parametro_Explicacion]' AND @_orderByDirection0 = 0 THEN [Parametro_Explicacion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Parametro_Explicacion]' AND @_orderByDirection0 = 1 THEN [Parametro_Explicacion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Parametro_Valor]' AND @_orderByDirection0 = 0 THEN [Parametro_Valor]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Parametro_Valor]' AND @_orderByDirection0 = 1 THEN [Parametro_Valor]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Persona_Contactos_Trans
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Persona_Contactos_Trans_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Persona_Contactos_Trans_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Persona_Contactos_Trans_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Persona_Contactos_Trans_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Persona_Contactos_Trans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Persona_Contactos_Trans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Persona_Contactos_Trans_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Persona_Contactos_Trans_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Persona_Contactos_Trans_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Persona_Contactos_Trans_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Persona_Contactos_Trans_ContactoTipo]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Persona_Contactos_Trans_ContactoTipo]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Persona_Contactos_Trans_Persona]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Persona_Contactos_Trans_Persona]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Persona_Contactos_Trans_Editar]
(
	@Persona_Contacto_Informacion  [VarChar]  (150),
	@Persona_Contacto_Nota  [VarChar]  (500) = null,
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Contacto_Tipo_Secuencia  [Int] ,
	@Persona_Contacto_Secuencia  [Int] ,
	@Persona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Persona_Contactos_Trans] 
SET
	[Persona_Contacto_Informacion] = @Persona_Contacto_Informacion,
	[Persona_Contacto_Nota] = @Persona_Contacto_Nota,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Persona_Contactos_Trans].[Contacto_Tipo_Secuencia] = @Contacto_Tipo_Secuencia AND
	[dbo].[Persona_Contactos_Trans].[Persona_Contacto_Secuencia] = @Persona_Contacto_Secuencia AND
	[dbo].[Persona_Contactos_Trans].[Persona_Secuencia] = @Persona_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Persona_Contactos_Trans]
(
	[Contacto_Tipo_Secuencia],
	[Persona_Contacto_Informacion],
	[Persona_Contacto_Nota],
	[Persona_Secuencia],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Contacto_Tipo_Secuencia,
	@Persona_Contacto_Informacion,
	@Persona_Contacto_Nota,
	@Persona_Secuencia,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Persona_Contacto_Secuencia = SCOPE_IDENTITY() 
    SELECT DISTINCT @Persona_Contacto_Secuencia AS 'Persona_Contacto_Secuencia' 
        FROM [Persona_Contactos_Trans]
        WHERE ([Persona_Contactos_Trans].[Persona_Contacto_Secuencia] = @Persona_Contacto_Secuencia)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Persona_Contactos_Trans_Borrar]
(
	@Contacto_Tipo_Secuencia  [Int] ,
	@Persona_Contacto_Secuencia  [Int] ,
	@Persona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END


  DELETE FROM [Persona_Contactos_Trans]
    WHERE 
      ([Persona_Contactos_Trans].[Persona_Contacto_Secuencia] = @Persona_Contacto_Secuencia)
     AND       ([Persona_Contactos_Trans].[Persona_Secuencia] = @Persona_Secuencia)
     AND       ([Persona_Contactos_Trans].[Contacto_Tipo_Secuencia] = @Contacto_Tipo_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Persona_Contactos_Trans]
(
	@Contacto_Tipo_Secuencia  [Int] ,
	@Persona_Contacto_Secuencia  [Int] ,
	@Persona_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Persona_Contactos_Trans].[Persona_Contacto_Secuencia],
                [Persona_Contactos_Trans].[Persona_Secuencia],
                [Persona_Contactos_Trans].[Contacto_Tipo_Secuencia],
                [Persona_Contactos_Trans].[Persona_Contacto_Informacion],
                [Persona_Contactos_Trans].[Persona_Contacto_Nota],
                [Persona_Contactos_Trans].[Registro_Estado],
                [Persona_Contactos_Trans].[Registro_Fecha],
                [Persona_Contactos_Trans].[Registro_Usuario]
    FROM [Persona_Contactos_Trans]
    WHERE 
     ( [Persona_Contactos_Trans].[Persona_Contacto_Secuencia] = @Persona_Contacto_Secuencia)
     AND      ( [Persona_Contactos_Trans].[Persona_Secuencia] = @Persona_Secuencia)
     AND      ( [Persona_Contactos_Trans].[Contacto_Tipo_Secuencia] = @Contacto_Tipo_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Persona_Contactos_Trans_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Persona_Contactos_Trans].[Persona_Contacto_Secuencia],
                [Persona_Contactos_Trans].[Persona_Secuencia],
                [Persona_Contactos_Trans].[Contacto_Tipo_Secuencia],
                [Persona_Contactos_Trans].[Persona_Contacto_Informacion],
                [Persona_Contactos_Trans].[Persona_Contacto_Nota],
                [Persona_Contactos_Trans].[Registro_Estado],
                [Persona_Contactos_Trans].[Registro_Fecha],
                [Persona_Contactos_Trans].[Registro_Usuario]
    FROM [Persona_Contactos_Trans]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Persona_Contactos_Trans_ContactoTipo]
(
	@Contacto_Tipo_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Persona_Contactos_Trans].[Persona_Contacto_Secuencia],
                [Persona_Contactos_Trans].[Persona_Secuencia],
                [Persona_Contactos_Trans].[Contacto_Tipo_Secuencia],
                [Persona_Contactos_Trans].[Persona_Contacto_Informacion],
                [Persona_Contactos_Trans].[Persona_Contacto_Nota],
                [Persona_Contactos_Trans].[Registro_Estado],
                [Persona_Contactos_Trans].[Registro_Fecha],
                [Persona_Contactos_Trans].[Registro_Usuario]
    FROM [Persona_Contactos_Trans]
      WHERE
        ([Persona_Contactos_Trans].[Contacto_Tipo_Secuencia] = @Contacto_Tipo_Secuencia)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Persona_Contactos_Trans_Persona]
(
	@Persona_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Persona_Contactos_Trans].[Persona_Contacto_Secuencia],
                [Persona_Contactos_Trans].[Persona_Secuencia],
                [Persona_Contactos_Trans].[Contacto_Tipo_Secuencia],
                [Persona_Contactos_Trans].[Persona_Contacto_Informacion],
                [Persona_Contactos_Trans].[Persona_Contacto_Nota],
                [Persona_Contactos_Trans].[Registro_Estado],
                [Persona_Contactos_Trans].[Registro_Fecha],
                [Persona_Contactos_Trans].[Registro_Usuario]
    FROM [Persona_Contactos_Trans]
      WHERE
        ([Persona_Contactos_Trans].[Persona_Secuencia] = @Persona_Secuencia)


RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Persona_Contactos_Trans_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [pct].[Persona_Contacto_Secuencia],
		                [pct].[Persona_Secuencia],
		                [pct].[Contacto_Tipo_Secuencia]
 ) AS [RowNumber],
				   pct.Persona_Contacto_Secuencia , 
				   pct.Persona_Secuencia , 
				   pct.Contacto_Tipo_Secuencia , 
				   pct.Persona_Contacto_Informacion , 
				   pct.Persona_Contacto_Nota , 
				   pct.Registro_Estado , 
				   pct.Registro_Fecha , 
				   pct.Registro_Usuario
		FROM  [dbo].[Persona_Contactos_Trans]	As pct	
			 Inner Join Contacto_Tipo_Cata As ctc
			   On  ctc.Contacto_Tipo_Secuencia = pct.Contacto_Tipo_Secuencia
			 Inner Join Personas_Master As pm
			   On  pm.Persona_Secuencia = pct.Persona_Secuencia

		   WHERE pct.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(pct.Persona_Contacto_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(pct.Persona_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(pct.Contacto_Tipo_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pct.Persona_Contacto_Informacion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pct.Persona_Contacto_Nota LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pct.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(pct.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pct.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Persona_Contacto_Secuencia]' AND @_orderByDirection0 = 0 THEN [Persona_Contacto_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Contacto_Secuencia]' AND @_orderByDirection0 = 1 THEN [Persona_Contacto_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 0 THEN [Persona_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 1 THEN [Persona_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Contacto_Tipo_Secuencia]' AND @_orderByDirection0 = 0 THEN [Contacto_Tipo_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Contacto_Tipo_Secuencia]' AND @_orderByDirection0 = 1 THEN [Contacto_Tipo_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Contacto_Informacion]' AND @_orderByDirection0 = 0 THEN [Persona_Contacto_Informacion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Contacto_Informacion]' AND @_orderByDirection0 = 1 THEN [Persona_Contacto_Informacion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Contacto_Nota]' AND @_orderByDirection0 = 0 THEN [Persona_Contacto_Nota]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Contacto_Nota]' AND @_orderByDirection0 = 1 THEN [Persona_Contacto_Nota]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Persona_Estado_Cata
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Persona_Estado_Cata_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Persona_Estado_Cata_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Persona_Estado_Cata_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Persona_Estado_Cata_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Persona_Estado_Cata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Persona_Estado_Cata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Persona_Estado_Cata_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Persona_Estado_Cata_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Persona_Estado_Cata_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Persona_Estado_Cata_Paging]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Persona_Estado_Cata_Editar]
(
	@Persona_Estado_Descripcion  [VarChar]  (50),
	@Persona_Estado_Explicacion  [VarChar]  (500),
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Persona_Estado_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Persona_Estado_Cata] 
SET
	[Persona_Estado_Descripcion] = @Persona_Estado_Descripcion,
	[Persona_Estado_Explicacion] = @Persona_Estado_Explicacion,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Persona_Estado_Cata].[Persona_Estado_Secuencia] = @Persona_Estado_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Persona_Estado_Cata]
(
	[Persona_Estado_Descripcion],
	[Persona_Estado_Explicacion],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Persona_Estado_Descripcion,
	@Persona_Estado_Explicacion,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Persona_Estado_Secuencia = SCOPE_IDENTITY() 
    SELECT DISTINCT @Persona_Estado_Secuencia AS 'Persona_Estado_Secuencia' 
        FROM [Persona_Estado_Cata]
        WHERE ([Persona_Estado_Cata].[Persona_Estado_Secuencia] = @Persona_Estado_Secuencia)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Persona_Estado_Cata_Borrar]
(
	@Persona_Estado_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Personas_Master] SET
     [Personas_Master].[Persona_Estado_Secuencia] = NULL
    WHERE     ([Personas_Master].[Persona_Estado_Secuencia] = @Persona_Estado_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Persona_Estado_Cata]
    WHERE 
      ([Persona_Estado_Cata].[Persona_Estado_Secuencia] = @Persona_Estado_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Persona_Estado_Cata]
(
	@Persona_Estado_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Persona_Estado_Cata].[Persona_Estado_Secuencia],
                [Persona_Estado_Cata].[Persona_Estado_Descripcion],
                [Persona_Estado_Cata].[Persona_Estado_Explicacion],
                [Persona_Estado_Cata].[Registro_Estado],
                [Persona_Estado_Cata].[Registro_Fecha],
                [Persona_Estado_Cata].[Registro_Usuario]
    FROM [Persona_Estado_Cata]
    WHERE 
     ( [Persona_Estado_Cata].[Persona_Estado_Secuencia] = @Persona_Estado_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Persona_Estado_Cata_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Persona_Estado_Cata].[Persona_Estado_Secuencia],
                [Persona_Estado_Cata].[Persona_Estado_Descripcion],
                [Persona_Estado_Cata].[Persona_Estado_Explicacion],
                [Persona_Estado_Cata].[Registro_Estado],
                [Persona_Estado_Cata].[Registro_Fecha],
                [Persona_Estado_Cata].[Registro_Usuario]
    FROM [Persona_Estado_Cata]

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Persona_Estado_Cata_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [pec].[Persona_Estado_Secuencia]
 ) AS [RowNumber],
				   pec.Persona_Estado_Secuencia , 
				   pec.Persona_Estado_Descripcion , 
				   pec.Persona_Estado_Explicacion , 
				   pec.Registro_Estado , 
				   pec.Registro_Fecha , 
				   pec.Registro_Usuario
		FROM  [dbo].[Persona_Estado_Cata]	As pec	

		   WHERE pec.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(pec.Persona_Estado_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pec.Persona_Estado_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pec.Persona_Estado_Explicacion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pec.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(pec.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pec.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Persona_Estado_Secuencia]' AND @_orderByDirection0 = 0 THEN [Persona_Estado_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Estado_Secuencia]' AND @_orderByDirection0 = 1 THEN [Persona_Estado_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Estado_Descripcion]' AND @_orderByDirection0 = 0 THEN [Persona_Estado_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Estado_Descripcion]' AND @_orderByDirection0 = 1 THEN [Persona_Estado_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Estado_Explicacion]' AND @_orderByDirection0 = 0 THEN [Persona_Estado_Explicacion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Estado_Explicacion]' AND @_orderByDirection0 = 1 THEN [Persona_Estado_Explicacion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Persona_Roles_Trans
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Persona_Roles_Trans_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Persona_Roles_Trans_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Persona_Roles_Trans_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Persona_Roles_Trans_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Persona_Roles_Trans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Persona_Roles_Trans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Persona_Roles_Trans_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Persona_Roles_Trans_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Persona_Roles_Trans_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Persona_Roles_Trans_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Persona_Roles_Trans_PersonasMaster]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Persona_Roles_Trans_PersonasMaster]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Persona_Roles_Trans_RolesCata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Persona_Roles_Trans_RolesCata]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Persona_Roles_Trans_Editar]
(
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Persona_Secuencia  [Int] ,
	@Role_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Persona_Roles_Trans] 
SET
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Persona_Roles_Trans].[Persona_Secuencia] = @Persona_Secuencia AND
	[dbo].[Persona_Roles_Trans].[Role_Numero] = @Role_Numero



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Persona_Roles_Trans]
(
	[Persona_Secuencia],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Role_Numero]
)
VALUES
(
	@Persona_Secuencia,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Role_Numero
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Persona_Roles_Trans_Borrar]
(
	@Persona_Secuencia  [Int] ,
	@Role_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END


  DELETE FROM [Persona_Roles_Trans]
    WHERE 
      ([Persona_Roles_Trans].[Persona_Secuencia] = @Persona_Secuencia)
     AND       ([Persona_Roles_Trans].[Role_Numero] = @Role_Numero)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Persona_Roles_Trans]
(
	@Persona_Secuencia  [Int] ,
	@Role_Numero  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Persona_Roles_Trans].[Persona_Secuencia],
                [Persona_Roles_Trans].[Role_Numero],
                [Persona_Roles_Trans].[Registro_Estado],
                [Persona_Roles_Trans].[Registro_Fecha],
                [Persona_Roles_Trans].[Registro_Usuario]
    FROM [Persona_Roles_Trans]
    WHERE 
     ( [Persona_Roles_Trans].[Persona_Secuencia] = @Persona_Secuencia)
     AND      ( [Persona_Roles_Trans].[Role_Numero] = @Role_Numero)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Persona_Roles_Trans_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Persona_Roles_Trans].[Persona_Secuencia],
                [Persona_Roles_Trans].[Role_Numero],
                [Persona_Roles_Trans].[Registro_Estado],
                [Persona_Roles_Trans].[Registro_Fecha],
                [Persona_Roles_Trans].[Registro_Usuario]
    FROM [Persona_Roles_Trans]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Persona_Roles_Trans_PersonasMaster]
(
	@Persona_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Persona_Roles_Trans].[Persona_Secuencia],
                [Persona_Roles_Trans].[Role_Numero],
                [Persona_Roles_Trans].[Registro_Estado],
                [Persona_Roles_Trans].[Registro_Fecha],
                [Persona_Roles_Trans].[Registro_Usuario]
    FROM [Persona_Roles_Trans]
      WHERE
        ([Persona_Roles_Trans].[Persona_Secuencia] = @Persona_Secuencia)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Persona_Roles_Trans_RolesCata]
(
	@Role_Numero  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Persona_Roles_Trans].[Persona_Secuencia],
                [Persona_Roles_Trans].[Role_Numero],
                [Persona_Roles_Trans].[Registro_Estado],
                [Persona_Roles_Trans].[Registro_Fecha],
                [Persona_Roles_Trans].[Registro_Usuario]
    FROM [Persona_Roles_Trans]
      WHERE
        ([Persona_Roles_Trans].[Role_Numero] = @Role_Numero)


RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Persona_Roles_Trans_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [prt].[Persona_Secuencia],
		                [prt].[Role_Numero]
 ) AS [RowNumber],
				   prt.Persona_Secuencia , 
				   prt.Role_Numero , 
				   prt.Registro_Estado , 
				   prt.Registro_Fecha , 
				   prt.Registro_Usuario
		FROM  [dbo].[Persona_Roles_Trans]	As prt	
			 Inner Join Personas_Master As pm
			   On  pm.Persona_Secuencia = prt.Persona_Secuencia
			 Inner Join Roles_Cata As rc
			   On  rc.Role_Numero = prt.Role_Numero

		   WHERE prt.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(prt.Persona_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(prt.Role_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR prt.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(prt.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR prt.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 0 THEN [Persona_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 1 THEN [Persona_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Role_Numero]' AND @_orderByDirection0 = 0 THEN [Role_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Role_Numero]' AND @_orderByDirection0 = 1 THEN [Role_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Personas_Diponibilidad
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Diponibilidad_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Diponibilidad_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Diponibilidad_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Diponibilidad_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Diponibilidad]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Diponibilidad]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Diponibilidad_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Diponibilidad_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Diponibilidad_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Diponibilidad_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Diponibilidad_DiasCata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Diponibilidad_DiasCata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Diponibilidad_HorasCata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Diponibilidad_HorasCata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Diponibilidad_PersonasMaster]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Diponibilidad_PersonasMaster]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Diponibilidad_PersonaSecuencia]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Diponibilidad_PersonaSecuencia]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Diponibilidad_LoadPersona]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Diponibilidad_LoadPersona]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Diponibilidad_DeletePersona]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Diponibilidad_DeletePersona]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Personas_Diponibilidad_Editar]
(
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Dia_Secuencia  [Int] ,
	@Hora_Secuencia  [Int] ,
	@Persona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Personas_Diponibilidad] 
SET
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Personas_Diponibilidad].[Dia_Secuencia] = @Dia_Secuencia AND
	[dbo].[Personas_Diponibilidad].[Hora_Secuencia] = @Hora_Secuencia AND
	[dbo].[Personas_Diponibilidad].[Persona_Secuencia] = @Persona_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Personas_Diponibilidad]
(
	[Dia_Secuencia],
	[Hora_Secuencia],
	[Persona_Secuencia],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Dia_Secuencia,
	@Hora_Secuencia,
	@Persona_Secuencia,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Personas_Diponibilidad_Borrar]
(
	@Dia_Secuencia  [Int] ,
	@Hora_Secuencia  [Int] ,
	@Persona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END


  DELETE FROM [Personas_Diponibilidad]
    WHERE 
      ([Personas_Diponibilidad].[Persona_Secuencia] = @Persona_Secuencia)
     AND       ([Personas_Diponibilidad].[Dia_Secuencia] = @Dia_Secuencia)
     AND       ([Personas_Diponibilidad].[Hora_Secuencia] = @Hora_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Diponibilidad]
(
	@Dia_Secuencia  [Int] ,
	@Hora_Secuencia  [Int] ,
	@Persona_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Personas_Diponibilidad].[Persona_Secuencia],
                [Personas_Diponibilidad].[Dia_Secuencia],
                [Personas_Diponibilidad].[Hora_Secuencia],
                [Personas_Diponibilidad].[Registro_Estado],
                [Personas_Diponibilidad].[Registro_Fecha],
                [Personas_Diponibilidad].[Registro_Usuario]
    FROM [Personas_Diponibilidad]
    WHERE 
     ( [Personas_Diponibilidad].[Persona_Secuencia] = @Persona_Secuencia)
     AND      ( [Personas_Diponibilidad].[Dia_Secuencia] = @Dia_Secuencia)
     AND      ( [Personas_Diponibilidad].[Hora_Secuencia] = @Hora_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Personas_Diponibilidad_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Personas_Diponibilidad].[Persona_Secuencia],
                [Personas_Diponibilidad].[Dia_Secuencia],
                [Personas_Diponibilidad].[Hora_Secuencia],
                [Personas_Diponibilidad].[Registro_Estado],
                [Personas_Diponibilidad].[Registro_Fecha],
                [Personas_Diponibilidad].[Registro_Usuario]
    FROM [Personas_Diponibilidad]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Diponibilidad_DiasCata]
(
	@Dia_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Personas_Diponibilidad].[Persona_Secuencia],
                [Personas_Diponibilidad].[Dia_Secuencia],
                [Personas_Diponibilidad].[Hora_Secuencia],
                [Personas_Diponibilidad].[Registro_Estado],
                [Personas_Diponibilidad].[Registro_Fecha],
                [Personas_Diponibilidad].[Registro_Usuario]
    FROM [Personas_Diponibilidad]
      WHERE
        ([Personas_Diponibilidad].[Dia_Secuencia] = @Dia_Secuencia)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Diponibilidad_HorasCata]
(
	@Hora_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Personas_Diponibilidad].[Persona_Secuencia],
                [Personas_Diponibilidad].[Dia_Secuencia],
                [Personas_Diponibilidad].[Hora_Secuencia],
                [Personas_Diponibilidad].[Registro_Estado],
                [Personas_Diponibilidad].[Registro_Fecha],
                [Personas_Diponibilidad].[Registro_Usuario]
    FROM [Personas_Diponibilidad]
      WHERE
        ([Personas_Diponibilidad].[Hora_Secuencia] = @Hora_Secuencia)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Diponibilidad_PersonasMaster]
(
	@Persona_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Personas_Diponibilidad].[Persona_Secuencia],
                [Personas_Diponibilidad].[Dia_Secuencia],
                [Personas_Diponibilidad].[Hora_Secuencia],
                [Personas_Diponibilidad].[Registro_Estado],
                [Personas_Diponibilidad].[Registro_Fecha],
                [Personas_Diponibilidad].[Registro_Usuario]
    FROM [Personas_Diponibilidad]
      WHERE
        ([Personas_Diponibilidad].[Persona_Secuencia] = @Persona_Secuencia)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Diponibilidad_PersonaSecuencia]
(
	@Persona_Secuencia  [Int] 
,
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
          [Personas_Diponibilidad].[Persona_Secuencia],
          [Personas_Diponibilidad].[Dia_Secuencia],
          [Personas_Diponibilidad].[Hora_Secuencia],
          [Personas_Diponibilidad].[Registro_Estado],
          [Personas_Diponibilidad].[Registro_Fecha],
          [Personas_Diponibilidad].[Registro_Usuario]
    FROM [Personas_Diponibilidad]
      WHERE
        ([Personas_Diponibilidad].[Persona_Secuencia] = @Persona_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Personas_Diponibilidad_LoadPersona]
(
    @Persona_Secuencia [Int] ,
		@PageIndex 		int = 1,
		@PageSize  		int = 1000000,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
SELECT 				ROW_NUMBER() OVER ( ORDER BY 		                [Personas_Diponibilidad].[Persona_Secuencia],
		                [Personas_Diponibilidad].[Dia_Secuencia],
		                [Personas_Diponibilidad].[Hora_Secuencia]
 ) AS [RowNumber],

          [Personas_Diponibilidad].[Persona_Secuencia],
          [Personas_Diponibilidad].[Dia_Secuencia],
          [Personas_Diponibilidad].[Hora_Secuencia],
          [Personas_Diponibilidad].[Registro_Estado],
          [Personas_Diponibilidad].[Registro_Fecha],
          [Personas_Diponibilidad].[Registro_Usuario]
    FROM [Personas_Diponibilidad]
      WHERE Personas_Diponibilidad.Registro_Estado = 'A'
      AND 
         [Personas_Diponibilidad].[Persona_Secuencia] = @persona_secuencia
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Diponibilidad_DeletePersona]
(
    @Persona_Secuencia [Int] 
)
AS

SET NOCOUNT ON
DELETE
    FROM [Personas_Diponibilidad]
      WHERE Personas_Diponibilidad.Registro_Estado = 'A'
      AND 
         [Personas_Diponibilidad].[Persona_Secuencia] = @persona_secuencia

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Personas_Diponibilidad_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [pd].[Persona_Secuencia],
		                [pd].[Dia_Secuencia],
		                [pd].[Hora_Secuencia]
 ) AS [RowNumber],
				   pd.Persona_Secuencia , 
				   pd.Dia_Secuencia , 
				   pd.Hora_Secuencia , 
				   pd.Registro_Estado , 
				   pd.Registro_Fecha , 
				   pd.Registro_Usuario
		FROM  [dbo].[Personas_Diponibilidad]	As pd	
			 Inner Join Dias_Cata As dc
			   On  dc.Dia_Secuencia = pd.Dia_Secuencia
			 Inner Join Horas_Cata As hc
			   On  hc.Hora_Secuencia = pd.Hora_Secuencia
			 Inner Join Personas_Master As pm
			   On  pm.Persona_Secuencia = pd.Persona_Secuencia

		   WHERE pd.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(pd.Persona_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(pd.Dia_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(pd.Hora_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pd.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(pd.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pd.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 0 THEN [Persona_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 1 THEN [Persona_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Dia_Secuencia]' AND @_orderByDirection0 = 0 THEN [Dia_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Dia_Secuencia]' AND @_orderByDirection0 = 1 THEN [Dia_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Hora_Secuencia]' AND @_orderByDirection0 = 0 THEN [Hora_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Hora_Secuencia]' AND @_orderByDirection0 = 1 THEN [Hora_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Personas_Master
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Master_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Master_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Master_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Master_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Master]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Master]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Master_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Master_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Master_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Master_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Master_Congregacion]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Master_Congregacion]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Master_PersonasTipoCata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Master_PersonasTipoCata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Master_PersonaEstadoCata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Master_PersonaEstadoCata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Master_PersonaCorreo]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Master_PersonaCorreo]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Personas_Master_Editar]
(
	@Congregacion_Secuencia  [Int] ,
	@Persona_Apellidos  [VarChar]  (50),
	@Persona_Clave  [VarChar]  (50),
	@Persona_Congregacion  [VarChar]  (50) = 'N/E',
	@Persona_Conyuge_Apellido  [VarChar]  (50),
	@Persona_Correo  [VarChar]  (50),
	@Persona_Estado_Secuencia  [Int]  = 0,
	@Persona_Nombres  [VarChar]  (50),
	@Persona_Sexo  [NChar]  (1),
	@Persona_Tipo_Secuencia  [Int]  = 1,
	@Persona_Verificacion_Numero  [VarChar]  (50),
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Persona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Personas_Master] 
SET
	[Congregacion_Secuencia] = @Congregacion_Secuencia,
	[Persona_Apellidos] = @Persona_Apellidos,
	[Persona_Clave] = @Persona_Clave,
	[Persona_Congregacion] = @Persona_Congregacion,
	[Persona_Conyuge_Apellido] = @Persona_Conyuge_Apellido,
	[Persona_Correo] = @Persona_Correo,
	[Persona_Estado_Secuencia] = @Persona_Estado_Secuencia,
	[Persona_Nombres] = @Persona_Nombres,
	[Persona_Sexo] = @Persona_Sexo,
	[Persona_Tipo_Secuencia] = @Persona_Tipo_Secuencia,
	[Persona_Verificacion_Numero] = @Persona_Verificacion_Numero,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Personas_Master].[Persona_Secuencia] = @Persona_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Personas_Master]
(
	[Congregacion_Secuencia],
	[Persona_Apellidos],
	[Persona_Clave],
	[Persona_Congregacion],
	[Persona_Conyuge_Apellido],
	[Persona_Correo],
	[Persona_Estado_Secuencia],
	[Persona_Nombres],
	[Persona_Sexo],
	[Persona_Tipo_Secuencia],
	[Persona_Verificacion_Numero],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Congregacion_Secuencia,
	@Persona_Apellidos,
	@Persona_Clave,
	@Persona_Congregacion,
	@Persona_Conyuge_Apellido,
	@Persona_Correo,
	@Persona_Estado_Secuencia,
	@Persona_Nombres,
	@Persona_Sexo,
	@Persona_Tipo_Secuencia,
	@Persona_Verificacion_Numero,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Persona_Secuencia = SCOPE_IDENTITY() 
    SELECT DISTINCT @Persona_Secuencia AS 'Persona_Secuencia' 
        FROM [Personas_Master]
        WHERE ([Personas_Master].[Persona_Secuencia] = @Persona_Secuencia)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Personas_Master_Borrar]
(
	@Persona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Persona_Contactos_Trans] SET
     [Persona_Contactos_Trans].[Persona_Secuencia] = NULL
    WHERE     ([Persona_Contactos_Trans].[Persona_Secuencia] = @Persona_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Personas_Notificaciones_Trans] SET
     [Personas_Notificaciones_Trans].[Persona_Secuencia] = NULL
    WHERE     ([Personas_Notificaciones_Trans].[Persona_Secuencia] = @Persona_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Personas_Turnos_Trans] SET
     [Personas_Turnos_Trans].[Persona_Secuencia] = NULL
    WHERE     ([Personas_Turnos_Trans].[Persona_Secuencia] = @Persona_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Rutas_Master] SET
     [Rutas_Master].[Ruta_Persona_Encargado] = NULL
    WHERE     ([Rutas_Master].[Ruta_Persona_Encargado] = @Persona_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Rutas_Master] SET
     [Rutas_Master].[Ruta_Persona_Auxiliar] = NULL
    WHERE     ([Rutas_Master].[Ruta_Persona_Auxiliar] = @Persona_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Zonas_Encargados_Trans] SET
     [Zonas_Encargados_Trans].[Persona_Secuencia] = NULL
    WHERE     ([Zonas_Encargados_Trans].[Persona_Secuencia] = @Persona_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Personas_Tipos_Trans] SET
     [Personas_Tipos_Trans].[Persona_Secuencia] = NULL
    WHERE     ([Personas_Tipos_Trans].[Persona_Secuencia] = @Persona_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Persona_Roles_Trans] SET
     [Persona_Roles_Trans].[Persona_Secuencia] = NULL
    WHERE     ([Persona_Roles_Trans].[Persona_Secuencia] = @Persona_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Notificaciones_Personas_Trans] SET
     [Notificaciones_Personas_Trans].[Persona_Secuencia] = NULL
    WHERE     ([Notificaciones_Personas_Trans].[Persona_Secuencia] = @Persona_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Personas_Diponibilidad] SET
     [Personas_Diponibilidad].[Persona_Secuencia] = NULL
    WHERE     ([Personas_Diponibilidad].[Persona_Secuencia] = @Persona_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Horario_Turno_Informe_Trans] SET
     [Horario_Turno_Informe_Trans].[Persona_Secuencia] = NULL
    WHERE     ([Horario_Turno_Informe_Trans].[Persona_Secuencia] = @Persona_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Personas_Master]
    WHERE 
      ([Personas_Master].[Persona_Secuencia] = @Persona_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Master]
(
	@Persona_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Personas_Master].[Persona_Secuencia],
                [Personas_Master].[Congregacion_Secuencia],
                [Personas_Master].[Persona_Congregacion],
                [Personas_Master].[Persona_Tipo_Secuencia],
                [Personas_Master].[Persona_Nombres],
                [Personas_Master].[Persona_Apellidos],
                [Personas_Master].[Persona_Conyuge_Apellido],
                [Personas_Master].[Persona_Sexo],
                [Personas_Master].[Persona_Correo],
                [Personas_Master].[Persona_Clave],
                [Personas_Master].[Persona_Verificacion_Numero],
                [Personas_Master].[Persona_Estado_Secuencia],
                [Personas_Master].[Registro_Estado],
                [Personas_Master].[Registro_Fecha],
                [Personas_Master].[Registro_Usuario]
    FROM [Personas_Master]
    WHERE 
     ( [Personas_Master].[Persona_Secuencia] = @Persona_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Personas_Master_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Personas_Master].[Persona_Secuencia],
                [Personas_Master].[Congregacion_Secuencia],
                [Personas_Master].[Persona_Congregacion],
                [Personas_Master].[Persona_Tipo_Secuencia],
                [Personas_Master].[Persona_Nombres],
                [Personas_Master].[Persona_Apellidos],
                [Personas_Master].[Persona_Conyuge_Apellido],
                [Personas_Master].[Persona_Sexo],
                [Personas_Master].[Persona_Correo],
                [Personas_Master].[Persona_Clave],
                [Personas_Master].[Persona_Verificacion_Numero],
                [Personas_Master].[Persona_Estado_Secuencia],
                [Personas_Master].[Registro_Estado],
                [Personas_Master].[Registro_Fecha],
                [Personas_Master].[Registro_Usuario]
    FROM [Personas_Master]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Master_Congregacion]
(
	@Congregacion_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Personas_Master].[Persona_Secuencia],
                [Personas_Master].[Congregacion_Secuencia],
                [Personas_Master].[Persona_Congregacion],
                [Personas_Master].[Persona_Tipo_Secuencia],
                [Personas_Master].[Persona_Nombres],
                [Personas_Master].[Persona_Apellidos],
                [Personas_Master].[Persona_Conyuge_Apellido],
                [Personas_Master].[Persona_Sexo],
                [Personas_Master].[Persona_Correo],
                [Personas_Master].[Persona_Clave],
                [Personas_Master].[Persona_Verificacion_Numero],
                [Personas_Master].[Persona_Estado_Secuencia],
                [Personas_Master].[Registro_Estado],
                [Personas_Master].[Registro_Fecha],
                [Personas_Master].[Registro_Usuario]
    FROM [Personas_Master]
      WHERE
        ([Personas_Master].[Congregacion_Secuencia] = @Congregacion_Secuencia)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Master_PersonasTipoCata]
(
	@Persona_Tipo_Secuencia  [Int]  = 1,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Personas_Master].[Persona_Secuencia],
                [Personas_Master].[Congregacion_Secuencia],
                [Personas_Master].[Persona_Congregacion],
                [Personas_Master].[Persona_Tipo_Secuencia],
                [Personas_Master].[Persona_Nombres],
                [Personas_Master].[Persona_Apellidos],
                [Personas_Master].[Persona_Conyuge_Apellido],
                [Personas_Master].[Persona_Sexo],
                [Personas_Master].[Persona_Correo],
                [Personas_Master].[Persona_Clave],
                [Personas_Master].[Persona_Verificacion_Numero],
                [Personas_Master].[Persona_Estado_Secuencia],
                [Personas_Master].[Registro_Estado],
                [Personas_Master].[Registro_Fecha],
                [Personas_Master].[Registro_Usuario]
    FROM [Personas_Master]
      WHERE
        ([Personas_Master].[Persona_Tipo_Secuencia] = @Persona_Tipo_Secuencia)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Master_PersonaEstadoCata]
(
	@Persona_Estado_Secuencia  [Int]  = 0,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Personas_Master].[Persona_Secuencia],
                [Personas_Master].[Congregacion_Secuencia],
                [Personas_Master].[Persona_Congregacion],
                [Personas_Master].[Persona_Tipo_Secuencia],
                [Personas_Master].[Persona_Nombres],
                [Personas_Master].[Persona_Apellidos],
                [Personas_Master].[Persona_Conyuge_Apellido],
                [Personas_Master].[Persona_Sexo],
                [Personas_Master].[Persona_Correo],
                [Personas_Master].[Persona_Clave],
                [Personas_Master].[Persona_Verificacion_Numero],
                [Personas_Master].[Persona_Estado_Secuencia],
                [Personas_Master].[Registro_Estado],
                [Personas_Master].[Registro_Fecha],
                [Personas_Master].[Registro_Usuario]
    FROM [Personas_Master]
      WHERE
        ([Personas_Master].[Persona_Estado_Secuencia] = @Persona_Estado_Secuencia)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Master_PersonaCorreo]
(
	@Persona_Correo  [VarChar]  (50)
,
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
          [Personas_Master].[Persona_Secuencia],
          [Personas_Master].[Congregacion_Secuencia],
          [Personas_Master].[Persona_Congregacion],
          [Personas_Master].[Persona_Tipo_Secuencia],
          [Personas_Master].[Persona_Nombres],
          [Personas_Master].[Persona_Apellidos],
          [Personas_Master].[Persona_Conyuge_Apellido],
          [Personas_Master].[Persona_Sexo],
          [Personas_Master].[Persona_Correo],
          [Personas_Master].[Persona_Clave],
          [Personas_Master].[Persona_Verificacion_Numero],
          [Personas_Master].[Persona_Estado_Secuencia],
          [Personas_Master].[Registro_Estado],
          [Personas_Master].[Registro_Fecha],
          [Personas_Master].[Registro_Usuario]
    FROM [Personas_Master]
      WHERE
        ([Personas_Master].[Persona_Correo] = @Persona_Correo)

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Personas_Master_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [pm].[Persona_Secuencia]
 ) AS [RowNumber],
				   pm.Persona_Secuencia , 
				   pm.Congregacion_Secuencia , 
				   pm.Persona_Congregacion , 
				   pm.Persona_Tipo_Secuencia , 
				   pm.Persona_Nombres , 
				   pm.Persona_Apellidos , 
				   pm.Persona_Conyuge_Apellido , 
				   pm.Persona_Sexo , 
				   pm.Persona_Correo , 
				   pm.Persona_Clave , 
				   pm.Persona_Verificacion_Numero , 
				   pm.Persona_Estado_Secuencia , 
				   pm.Registro_Estado , 
				   pm.Registro_Fecha , 
				   pm.Registro_Usuario
		FROM  [dbo].[Personas_Master]	As pm	
			 Inner Join Congregaciones_Master As cm
			   On  cm.Congregacion_Secuencia = pm.Congregacion_Secuencia
			 Inner Join Personas_Tipo_Cata As ptc
			   On  ptc.Persona_Tipo_Secuencia = pm.Persona_Tipo_Secuencia
			 Inner Join Persona_Estado_Cata As pec
			   On  pec.Persona_Estado_Secuencia = pm.Persona_Estado_Secuencia

		   WHERE pm.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(pm.Persona_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(pm.Congregacion_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pm.Persona_Congregacion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(pm.Persona_Tipo_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pm.Persona_Nombres LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pm.Persona_Apellidos LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pm.Persona_Conyuge_Apellido LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pm.Persona_Sexo LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pm.Persona_Correo LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pm.Persona_Clave LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pm.Persona_Verificacion_Numero LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(pm.Persona_Estado_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pm.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(pm.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pm.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 0 THEN [Persona_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 1 THEN [Persona_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Congregacion_Secuencia]' AND @_orderByDirection0 = 0 THEN [Congregacion_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Congregacion_Secuencia]' AND @_orderByDirection0 = 1 THEN [Congregacion_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Congregacion]' AND @_orderByDirection0 = 0 THEN [Persona_Congregacion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Congregacion]' AND @_orderByDirection0 = 1 THEN [Persona_Congregacion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Tipo_Secuencia]' AND @_orderByDirection0 = 0 THEN [Persona_Tipo_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Tipo_Secuencia]' AND @_orderByDirection0 = 1 THEN [Persona_Tipo_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Nombres]' AND @_orderByDirection0 = 0 THEN [Persona_Nombres]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Nombres]' AND @_orderByDirection0 = 1 THEN [Persona_Nombres]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Apellidos]' AND @_orderByDirection0 = 0 THEN [Persona_Apellidos]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Apellidos]' AND @_orderByDirection0 = 1 THEN [Persona_Apellidos]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Conyuge_Apellido]' AND @_orderByDirection0 = 0 THEN [Persona_Conyuge_Apellido]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Conyuge_Apellido]' AND @_orderByDirection0 = 1 THEN [Persona_Conyuge_Apellido]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Sexo]' AND @_orderByDirection0 = 0 THEN [Persona_Sexo]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Sexo]' AND @_orderByDirection0 = 1 THEN [Persona_Sexo]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Correo]' AND @_orderByDirection0 = 0 THEN [Persona_Correo]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Correo]' AND @_orderByDirection0 = 1 THEN [Persona_Correo]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Clave]' AND @_orderByDirection0 = 0 THEN [Persona_Clave]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Clave]' AND @_orderByDirection0 = 1 THEN [Persona_Clave]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Verificacion_Numero]' AND @_orderByDirection0 = 0 THEN [Persona_Verificacion_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Verificacion_Numero]' AND @_orderByDirection0 = 1 THEN [Persona_Verificacion_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Estado_Secuencia]' AND @_orderByDirection0 = 0 THEN [Persona_Estado_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Estado_Secuencia]' AND @_orderByDirection0 = 1 THEN [Persona_Estado_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Personas_Notificaciones_Trans
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Notificaciones_Trans_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Notificaciones_Trans_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Notificaciones_Trans_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Notificaciones_Trans_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Notificaciones_Trans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Notificaciones_Trans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Notificaciones_Trans_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Notificaciones_Trans_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Notificaciones_Trans_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Notificaciones_Trans_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Notificaciones_Trans_Notificaciones]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Notificaciones_Trans_Notificaciones]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Notificaciones_Trans_Personas]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Notificaciones_Trans_Personas]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Personas_Notificaciones_Trans_Editar]
(
	@Notificacion_Vista  [Char]  (1) = ' ',
	@Notificacion_Vista_Fecha  [DateTime] ,
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Notificacion_Numero  [Int] ,
	@Persona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Personas_Notificaciones_Trans] 
SET
	[Notificacion_Vista] = @Notificacion_Vista,
	[Notificacion_Vista_Fecha] = @Notificacion_Vista_Fecha,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Personas_Notificaciones_Trans].[Notificacion_Numero] = @Notificacion_Numero AND
	[dbo].[Personas_Notificaciones_Trans].[Persona_Secuencia] = @Persona_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Personas_Notificaciones_Trans]
(
	[Notificacion_Numero],
	[Notificacion_Vista],
	[Notificacion_Vista_Fecha],
	[Persona_Secuencia],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Notificacion_Numero,
	@Notificacion_Vista,
	@Notificacion_Vista_Fecha,
	@Persona_Secuencia,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Personas_Notificaciones_Trans_Borrar]
(
	@Notificacion_Numero  [Int] ,
	@Persona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END


  DELETE FROM [Personas_Notificaciones_Trans]
    WHERE 
      ([Personas_Notificaciones_Trans].[Persona_Secuencia] = @Persona_Secuencia)
     AND       ([Personas_Notificaciones_Trans].[Notificacion_Numero] = @Notificacion_Numero)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Notificaciones_Trans]
(
	@Notificacion_Numero  [Int] ,
	@Persona_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Personas_Notificaciones_Trans].[Persona_Secuencia],
                [Personas_Notificaciones_Trans].[Notificacion_Numero],
                [Personas_Notificaciones_Trans].[Notificacion_Vista],
                [Personas_Notificaciones_Trans].[Notificacion_Vista_Fecha],
                [Personas_Notificaciones_Trans].[Registro_Estado],
                [Personas_Notificaciones_Trans].[Registro_Fecha],
                [Personas_Notificaciones_Trans].[Registro_Usuario]
    FROM [Personas_Notificaciones_Trans]
    WHERE 
     ( [Personas_Notificaciones_Trans].[Persona_Secuencia] = @Persona_Secuencia)
     AND      ( [Personas_Notificaciones_Trans].[Notificacion_Numero] = @Notificacion_Numero)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Personas_Notificaciones_Trans_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Personas_Notificaciones_Trans].[Persona_Secuencia],
                [Personas_Notificaciones_Trans].[Notificacion_Numero],
                [Personas_Notificaciones_Trans].[Notificacion_Vista],
                [Personas_Notificaciones_Trans].[Notificacion_Vista_Fecha],
                [Personas_Notificaciones_Trans].[Registro_Estado],
                [Personas_Notificaciones_Trans].[Registro_Fecha],
                [Personas_Notificaciones_Trans].[Registro_Usuario]
    FROM [Personas_Notificaciones_Trans]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Notificaciones_Trans_Notificaciones]
(
	@Notificacion_Numero  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Personas_Notificaciones_Trans].[Persona_Secuencia],
                [Personas_Notificaciones_Trans].[Notificacion_Numero],
                [Personas_Notificaciones_Trans].[Notificacion_Vista],
                [Personas_Notificaciones_Trans].[Notificacion_Vista_Fecha],
                [Personas_Notificaciones_Trans].[Registro_Estado],
                [Personas_Notificaciones_Trans].[Registro_Fecha],
                [Personas_Notificaciones_Trans].[Registro_Usuario]
    FROM [Personas_Notificaciones_Trans]
      WHERE
        ([Personas_Notificaciones_Trans].[Notificacion_Numero] = @Notificacion_Numero)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Notificaciones_Trans_Personas]
(
	@Persona_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Personas_Notificaciones_Trans].[Persona_Secuencia],
                [Personas_Notificaciones_Trans].[Notificacion_Numero],
                [Personas_Notificaciones_Trans].[Notificacion_Vista],
                [Personas_Notificaciones_Trans].[Notificacion_Vista_Fecha],
                [Personas_Notificaciones_Trans].[Registro_Estado],
                [Personas_Notificaciones_Trans].[Registro_Fecha],
                [Personas_Notificaciones_Trans].[Registro_Usuario]
    FROM [Personas_Notificaciones_Trans]
      WHERE
        ([Personas_Notificaciones_Trans].[Persona_Secuencia] = @Persona_Secuencia)


RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Personas_Notificaciones_Trans_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [pnt].[Persona_Secuencia],
		                [pnt].[Notificacion_Numero]
 ) AS [RowNumber],
				   pnt.Persona_Secuencia , 
				   pnt.Notificacion_Numero , 
				   pnt.Notificacion_Vista , 
				   pnt.Notificacion_Vista_Fecha , 
				   pnt.Registro_Estado , 
				   pnt.Registro_Fecha , 
				   pnt.Registro_Usuario
		FROM  [dbo].[Personas_Notificaciones_Trans]	As pnt	
			 Inner Join Notificaciones_Master As nm
			   On  nm.Notificacion_Numero = pnt.Notificacion_Numero
			 Inner Join Personas_Master As pm
			   On  pm.Persona_Secuencia = pnt.Persona_Secuencia

		   WHERE pnt.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(pnt.Persona_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(pnt.Notificacion_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pnt.Notificacion_Vista LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(pnt.Notificacion_Vista_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pnt.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(pnt.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pnt.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 0 THEN [Persona_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 1 THEN [Persona_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Notificacion_Numero]' AND @_orderByDirection0 = 0 THEN [Notificacion_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Notificacion_Numero]' AND @_orderByDirection0 = 1 THEN [Notificacion_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Notificacion_Vista]' AND @_orderByDirection0 = 0 THEN [Notificacion_Vista]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Notificacion_Vista]' AND @_orderByDirection0 = 1 THEN [Notificacion_Vista]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Notificacion_Vista_Fecha]' AND @_orderByDirection0 = 0 THEN [Notificacion_Vista_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Notificacion_Vista_Fecha]' AND @_orderByDirection0 = 1 THEN [Notificacion_Vista_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Personas_Tipo_Cata
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Tipo_Cata_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Tipo_Cata_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Tipo_Cata_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Tipo_Cata_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Tipo_Cata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Tipo_Cata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Tipo_Cata_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Tipo_Cata_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Tipo_Cata_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Tipo_Cata_Paging]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Personas_Tipo_Cata_Editar]
(
	@Persona_Tipo_Descripcion  [VarChar]  (50),
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Persona_Tipo_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Personas_Tipo_Cata] 
SET
	[Persona_Tipo_Descripcion] = @Persona_Tipo_Descripcion,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Personas_Tipo_Cata].[Persona_Tipo_Secuencia] = @Persona_Tipo_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Personas_Tipo_Cata]
(
	[Persona_Tipo_Descripcion],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Persona_Tipo_Descripcion,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Persona_Tipo_Secuencia = SCOPE_IDENTITY() 
    SELECT DISTINCT @Persona_Tipo_Secuencia AS 'Persona_Tipo_Secuencia' 
        FROM [Personas_Tipo_Cata]
        WHERE ([Personas_Tipo_Cata].[Persona_Tipo_Secuencia] = @Persona_Tipo_Secuencia)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Personas_Tipo_Cata_Borrar]
(
	@Persona_Tipo_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Personas_Master] SET
     [Personas_Master].[Persona_Tipo_Secuencia] = NULL
    WHERE     ([Personas_Master].[Persona_Tipo_Secuencia] = @Persona_Tipo_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Personas_Tipos_Trans] SET
     [Personas_Tipos_Trans].[Persona_Tipo_Secuencia] = NULL
    WHERE     ([Personas_Tipos_Trans].[Persona_Tipo_Secuencia] = @Persona_Tipo_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Personas_Tipo_Cata]
    WHERE 
      ([Personas_Tipo_Cata].[Persona_Tipo_Secuencia] = @Persona_Tipo_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Tipo_Cata]
(
	@Persona_Tipo_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Personas_Tipo_Cata].[Persona_Tipo_Secuencia],
                [Personas_Tipo_Cata].[Persona_Tipo_Descripcion],
                [Personas_Tipo_Cata].[Registro_Estado],
                [Personas_Tipo_Cata].[Registro_Fecha],
                [Personas_Tipo_Cata].[Registro_Usuario]
    FROM [Personas_Tipo_Cata]
    WHERE 
     ( [Personas_Tipo_Cata].[Persona_Tipo_Secuencia] = @Persona_Tipo_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Personas_Tipo_Cata_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Personas_Tipo_Cata].[Persona_Tipo_Secuencia],
                [Personas_Tipo_Cata].[Persona_Tipo_Descripcion],
                [Personas_Tipo_Cata].[Registro_Estado],
                [Personas_Tipo_Cata].[Registro_Fecha],
                [Personas_Tipo_Cata].[Registro_Usuario]
    FROM [Personas_Tipo_Cata]

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Personas_Tipo_Cata_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [ptc].[Persona_Tipo_Secuencia]
 ) AS [RowNumber],
				   ptc.Persona_Tipo_Secuencia , 
				   ptc.Persona_Tipo_Descripcion , 
				   ptc.Registro_Estado , 
				   ptc.Registro_Fecha , 
				   ptc.Registro_Usuario
		FROM  [dbo].[Personas_Tipo_Cata]	As ptc	

		   WHERE ptc.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(ptc.Persona_Tipo_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ptc.Persona_Tipo_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ptc.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(ptc.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ptc.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Persona_Tipo_Secuencia]' AND @_orderByDirection0 = 0 THEN [Persona_Tipo_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Tipo_Secuencia]' AND @_orderByDirection0 = 1 THEN [Persona_Tipo_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Tipo_Descripcion]' AND @_orderByDirection0 = 0 THEN [Persona_Tipo_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Tipo_Descripcion]' AND @_orderByDirection0 = 1 THEN [Persona_Tipo_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Personas_Tipos_Trans
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Tipos_Trans_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Tipos_Trans_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Tipos_Trans_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Tipos_Trans_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Tipos_Trans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Tipos_Trans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Tipos_Trans_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Tipos_Trans_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Tipos_Trans_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Tipos_Trans_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Tipos_Trans_PersonasMaster]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Tipos_Trans_PersonasMaster]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Tipos_Trans_PersonasTipoCata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Tipos_Trans_PersonasTipoCata]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Personas_Tipos_Trans_Editar]
(
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Persona_Secuencia  [Int] ,
	@Persona_Tipo_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Personas_Tipos_Trans] 
SET
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Personas_Tipos_Trans].[Persona_Secuencia] = @Persona_Secuencia AND
	[dbo].[Personas_Tipos_Trans].[Persona_Tipo_Secuencia] = @Persona_Tipo_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Personas_Tipos_Trans]
(
	[Persona_Secuencia],
	[Persona_Tipo_Secuencia],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Persona_Secuencia,
	@Persona_Tipo_Secuencia,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Personas_Tipos_Trans_Borrar]
(
	@Persona_Secuencia  [Int] ,
	@Persona_Tipo_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END


  DELETE FROM [Personas_Tipos_Trans]
    WHERE 
      ([Personas_Tipos_Trans].[Persona_Secuencia] = @Persona_Secuencia)
     AND       ([Personas_Tipos_Trans].[Persona_Tipo_Secuencia] = @Persona_Tipo_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Tipos_Trans]
(
	@Persona_Secuencia  [Int] ,
	@Persona_Tipo_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Personas_Tipos_Trans].[Persona_Secuencia],
                [Personas_Tipos_Trans].[Persona_Tipo_Secuencia],
                [Personas_Tipos_Trans].[Registro_Estado],
                [Personas_Tipos_Trans].[Registro_Fecha],
                [Personas_Tipos_Trans].[Registro_Usuario]
    FROM [Personas_Tipos_Trans]
    WHERE 
     ( [Personas_Tipos_Trans].[Persona_Secuencia] = @Persona_Secuencia)
     AND      ( [Personas_Tipos_Trans].[Persona_Tipo_Secuencia] = @Persona_Tipo_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Personas_Tipos_Trans_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Personas_Tipos_Trans].[Persona_Secuencia],
                [Personas_Tipos_Trans].[Persona_Tipo_Secuencia],
                [Personas_Tipos_Trans].[Registro_Estado],
                [Personas_Tipos_Trans].[Registro_Fecha],
                [Personas_Tipos_Trans].[Registro_Usuario]
    FROM [Personas_Tipos_Trans]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Tipos_Trans_PersonasMaster]
(
	@Persona_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Personas_Tipos_Trans].[Persona_Secuencia],
                [Personas_Tipos_Trans].[Persona_Tipo_Secuencia],
                [Personas_Tipos_Trans].[Registro_Estado],
                [Personas_Tipos_Trans].[Registro_Fecha],
                [Personas_Tipos_Trans].[Registro_Usuario]
    FROM [Personas_Tipos_Trans]
      WHERE
        ([Personas_Tipos_Trans].[Persona_Secuencia] = @Persona_Secuencia)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Tipos_Trans_PersonasTipoCata]
(
	@Persona_Tipo_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Personas_Tipos_Trans].[Persona_Secuencia],
                [Personas_Tipos_Trans].[Persona_Tipo_Secuencia],
                [Personas_Tipos_Trans].[Registro_Estado],
                [Personas_Tipos_Trans].[Registro_Fecha],
                [Personas_Tipos_Trans].[Registro_Usuario]
    FROM [Personas_Tipos_Trans]
      WHERE
        ([Personas_Tipos_Trans].[Persona_Tipo_Secuencia] = @Persona_Tipo_Secuencia)


RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Personas_Tipos_Trans_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [ptt].[Persona_Secuencia],
		                [ptt].[Persona_Tipo_Secuencia]
 ) AS [RowNumber],
				   ptt.Persona_Secuencia , 
				   ptt.Persona_Tipo_Secuencia , 
				   ptt.Registro_Estado , 
				   ptt.Registro_Fecha , 
				   ptt.Registro_Usuario
		FROM  [dbo].[Personas_Tipos_Trans]	As ptt	
			 Inner Join Personas_Master As pm
			   On  pm.Persona_Secuencia = ptt.Persona_Secuencia
			 Inner Join Personas_Tipo_Cata As ptc
			   On  ptc.Persona_Tipo_Secuencia = ptt.Persona_Tipo_Secuencia

		   WHERE ptt.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(ptt.Persona_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(ptt.Persona_Tipo_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ptt.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(ptt.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ptt.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 0 THEN [Persona_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 1 THEN [Persona_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Tipo_Secuencia]' AND @_orderByDirection0 = 0 THEN [Persona_Tipo_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Tipo_Secuencia]' AND @_orderByDirection0 = 1 THEN [Persona_Tipo_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Personas_Turnos_Trans
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Turnos_Trans_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Turnos_Trans_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Turnos_Trans_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Turnos_Trans_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Turnos_Trans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Turnos_Trans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Turnos_Trans_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Turnos_Trans_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Turnos_Trans_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Turnos_Trans_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Turnos_Trans_Persona]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Turnos_Trans_Persona]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Turnos_Trans_HorarioTurnoDiasTrans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Turnos_Trans_HorarioTurnoDiasTrans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Personas_Turnos_Trans_LoadHorarioDia]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Personas_Turnos_Trans_LoadHorarioDia]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Personas_Turnos_Trans_Editar]
(
	@Persona_Turno_HC  [Char]  (1) = 'N',
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Dia_Secuencia  [Int] ,
	@Horario_Turno_Secuencia  [Int] ,
	@Persona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Personas_Turnos_Trans] 
SET
	[Persona_Turno_HC] = @Persona_Turno_HC,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Personas_Turnos_Trans].[Dia_Secuencia] = @Dia_Secuencia AND
	[dbo].[Personas_Turnos_Trans].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia AND
	[dbo].[Personas_Turnos_Trans].[Persona_Secuencia] = @Persona_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Personas_Turnos_Trans]
(
	[Dia_Secuencia],
	[Horario_Turno_Secuencia],
	[Persona_Secuencia],
	[Persona_Turno_HC],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Dia_Secuencia,
	@Horario_Turno_Secuencia,
	@Persona_Secuencia,
	@Persona_Turno_HC,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Personas_Turnos_Trans_Borrar]
(
	@Dia_Secuencia  [Int] ,
	@Horario_Turno_Secuencia  [Int] ,
	@Persona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Experiencias_Master] SET
     [Experiencias_Master].[Persona_Secuencia] = NULL,
     [Experiencias_Master].[Horario_Turno_Secuencia] = NULL,
     [Experiencias_Master].[Dia_Secuencia] = NULL
    WHERE     ([Experiencias_Master].[Persona_Secuencia] = @Persona_Secuencia)  And
    ([Experiencias_Master].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia)  And
    ([Experiencias_Master].[Dia_Secuencia] = @Dia_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Personas_Turnos_Trans]
    WHERE 
      ([Personas_Turnos_Trans].[Persona_Secuencia] = @Persona_Secuencia)
     AND       ([Personas_Turnos_Trans].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia)
     AND       ([Personas_Turnos_Trans].[Dia_Secuencia] = @Dia_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Turnos_Trans]
(
	@Dia_Secuencia  [Int] ,
	@Horario_Turno_Secuencia  [Int] ,
	@Persona_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Personas_Turnos_Trans].[Persona_Secuencia],
                [Personas_Turnos_Trans].[Horario_Turno_Secuencia],
                [Personas_Turnos_Trans].[Dia_Secuencia],
                [Personas_Turnos_Trans].[Persona_Turno_HC],
                [Personas_Turnos_Trans].[Registro_Estado],
                [Personas_Turnos_Trans].[Registro_Fecha],
                [Personas_Turnos_Trans].[Registro_Usuario]
    FROM [Personas_Turnos_Trans]
    WHERE 
     ( [Personas_Turnos_Trans].[Persona_Secuencia] = @Persona_Secuencia)
     AND      ( [Personas_Turnos_Trans].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia)
     AND      ( [Personas_Turnos_Trans].[Dia_Secuencia] = @Dia_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Personas_Turnos_Trans_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Personas_Turnos_Trans].[Persona_Secuencia],
                [Personas_Turnos_Trans].[Horario_Turno_Secuencia],
                [Personas_Turnos_Trans].[Dia_Secuencia],
                [Personas_Turnos_Trans].[Persona_Turno_HC],
                [Personas_Turnos_Trans].[Registro_Estado],
                [Personas_Turnos_Trans].[Registro_Fecha],
                [Personas_Turnos_Trans].[Registro_Usuario]
    FROM [Personas_Turnos_Trans]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Turnos_Trans_Persona]
(
	@Persona_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Personas_Turnos_Trans].[Persona_Secuencia],
                [Personas_Turnos_Trans].[Horario_Turno_Secuencia],
                [Personas_Turnos_Trans].[Dia_Secuencia],
                [Personas_Turnos_Trans].[Persona_Turno_HC],
                [Personas_Turnos_Trans].[Registro_Estado],
                [Personas_Turnos_Trans].[Registro_Fecha],
                [Personas_Turnos_Trans].[Registro_Usuario]
    FROM [Personas_Turnos_Trans]
      WHERE
        ([Personas_Turnos_Trans].[Persona_Secuencia] = @Persona_Secuencia)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Personas_Turnos_Trans_HorarioTurnoDiasTrans]
(
	@Dia_Secuencia  [Int] ,
	@Horario_Turno_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Personas_Turnos_Trans].[Persona_Secuencia],
                [Personas_Turnos_Trans].[Horario_Turno_Secuencia],
                [Personas_Turnos_Trans].[Dia_Secuencia],
                [Personas_Turnos_Trans].[Persona_Turno_HC],
                [Personas_Turnos_Trans].[Registro_Estado],
                [Personas_Turnos_Trans].[Registro_Fecha],
                [Personas_Turnos_Trans].[Registro_Usuario]
    FROM [Personas_Turnos_Trans]
      WHERE
        ([Personas_Turnos_Trans].[Horario_Turno_Secuencia] = @Horario_Turno_Secuencia)
 And 
        ([Personas_Turnos_Trans].[Dia_Secuencia] = @Dia_Secuencia)


RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Personas_Turnos_Trans_LoadHorarioDia]
(
    @Horario_Turno_Secuencia [Int] ,
    @Dia_Secuencia [Int] ,
		@PageIndex 		int = 1,
		@PageSize  		int = 1000000,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
SELECT 				ROW_NUMBER() OVER ( ORDER BY 		                [Personas_Turnos_Trans].[Persona_Secuencia],
		                [Personas_Turnos_Trans].[Horario_Turno_Secuencia],
		                [Personas_Turnos_Trans].[Dia_Secuencia]
 ) AS [RowNumber],

          [Personas_Turnos_Trans].[Persona_Secuencia],
          [Personas_Turnos_Trans].[Horario_Turno_Secuencia],
          [Personas_Turnos_Trans].[Dia_Secuencia],
          [Personas_Turnos_Trans].[Persona_Turno_HC],
          [Personas_Turnos_Trans].[Registro_Estado],
          [Personas_Turnos_Trans].[Registro_Fecha],
          [Personas_Turnos_Trans].[Registro_Usuario]
    FROM [Personas_Turnos_Trans]
      WHERE Personas_Turnos_Trans.Registro_Estado = 'A'
      AND 
         [Personas_Turnos_Trans].[Horario_Turno_Secuencia] = @horario_turno_secuencia
 AND  [Personas_Turnos_Trans].[Dia_Secuencia] = @dia_secuencia 
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Personas_Turnos_Trans_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [ptt].[Persona_Secuencia],
		                [ptt].[Horario_Turno_Secuencia],
		                [ptt].[Dia_Secuencia]
 ) AS [RowNumber],
				   ptt.Persona_Secuencia , 
				   ptt.Horario_Turno_Secuencia , 
				   ptt.Dia_Secuencia , 
				   ptt.Persona_Turno_HC , 
				   ptt.Registro_Estado , 
				   ptt.Registro_Fecha , 
				   ptt.Registro_Usuario
		FROM  [dbo].[Personas_Turnos_Trans]	As ptt	
			 Inner Join Personas_Master As pm
			   On  pm.Persona_Secuencia = ptt.Persona_Secuencia
			 Inner Join Horario_Turno_Dias_Trans As htdt
			   On  htdt.Horario_Turno_Secuencia = ptt.Horario_Turno_Secuencia
			      And  htdt.Dia_Secuencia = ptt.Dia_Secuencia

		   WHERE ptt.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(ptt.Persona_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(ptt.Horario_Turno_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(ptt.Dia_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ptt.Persona_Turno_HC LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ptt.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(ptt.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ptt.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 0 THEN [Persona_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 1 THEN [Persona_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Horario_Turno_Secuencia]' AND @_orderByDirection0 = 0 THEN [Horario_Turno_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Horario_Turno_Secuencia]' AND @_orderByDirection0 = 1 THEN [Horario_Turno_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Dia_Secuencia]' AND @_orderByDirection0 = 0 THEN [Dia_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Dia_Secuencia]' AND @_orderByDirection0 = 1 THEN [Dia_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Persona_Turno_HC]' AND @_orderByDirection0 = 0 THEN [Persona_Turno_HC]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Turno_HC]' AND @_orderByDirection0 = 1 THEN [Persona_Turno_HC]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Publicaciones_Cata
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Publicaciones_Cata_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Publicaciones_Cata_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Publicaciones_Cata_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Publicaciones_Cata_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Publicaciones_Cata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Publicaciones_Cata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Publicaciones_Cata_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Publicaciones_Cata_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Publicaciones_Cata_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Publicaciones_Cata_Paging]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Publicaciones_Cata_Editar]
(
	@Publicacion_Descripcion  [VarChar]  (150),
	@Publicacion_Orden  [Int] ,
	@Publicacion_Simbolo  [VarChar]  (50),
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Publicacion_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Publicaciones_Cata] 
SET
	[Publicacion_Descripcion] = @Publicacion_Descripcion,
	[Publicacion_Orden] = @Publicacion_Orden,
	[Publicacion_Simbolo] = @Publicacion_Simbolo,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Publicaciones_Cata].[Publicacion_Numero] = @Publicacion_Numero



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Publicaciones_Cata]
(
	[Publicacion_Descripcion],
	[Publicacion_Orden],
	[Publicacion_Simbolo],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Publicacion_Descripcion,
	@Publicacion_Orden,
	@Publicacion_Simbolo,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Publicacion_Numero = SCOPE_IDENTITY() 
    SELECT DISTINCT @Publicacion_Numero AS 'Publicacion_Numero' 
        FROM [Publicaciones_Cata]
        WHERE ([Publicaciones_Cata].[Publicacion_Numero] = @Publicacion_Numero)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Publicaciones_Cata_Borrar]
(
	@Publicacion_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Horario_Turno_Informe_Trans] SET
     [Horario_Turno_Informe_Trans].[Publicacion_Numero] = NULL
    WHERE     ([Horario_Turno_Informe_Trans].[Publicacion_Numero] = @Publicacion_Numero)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Publicaciones_Cata]
    WHERE 
      ([Publicaciones_Cata].[Publicacion_Numero] = @Publicacion_Numero)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Publicaciones_Cata]
(
	@Publicacion_Numero  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Publicaciones_Cata].[Publicacion_Numero],
                [Publicaciones_Cata].[Publicacion_Descripcion],
                [Publicaciones_Cata].[Publicacion_Simbolo],
                [Publicaciones_Cata].[Publicacion_Orden],
                [Publicaciones_Cata].[Registro_Estado],
                [Publicaciones_Cata].[Registro_Fecha],
                [Publicaciones_Cata].[Registro_Usuario]
    FROM [Publicaciones_Cata]
    WHERE 
     ( [Publicaciones_Cata].[Publicacion_Numero] = @Publicacion_Numero)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Publicaciones_Cata_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Publicaciones_Cata].[Publicacion_Numero],
                [Publicaciones_Cata].[Publicacion_Descripcion],
                [Publicaciones_Cata].[Publicacion_Simbolo],
                [Publicaciones_Cata].[Publicacion_Orden],
                [Publicaciones_Cata].[Registro_Estado],
                [Publicaciones_Cata].[Registro_Fecha],
                [Publicaciones_Cata].[Registro_Usuario]
    FROM [Publicaciones_Cata]

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Publicaciones_Cata_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [pc].[Publicacion_Numero]
 ) AS [RowNumber],
				   pc.Publicacion_Numero , 
				   pc.Publicacion_Descripcion , 
				   pc.Publicacion_Simbolo , 
				   pc.Publicacion_Orden , 
				   pc.Registro_Estado , 
				   pc.Registro_Fecha , 
				   pc.Registro_Usuario
		FROM  [dbo].[Publicaciones_Cata]	As pc	

		   WHERE pc.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(pc.Publicacion_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pc.Publicacion_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pc.Publicacion_Simbolo LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(pc.Publicacion_Orden) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pc.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(pc.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR pc.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Publicacion_Numero]' AND @_orderByDirection0 = 0 THEN [Publicacion_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Publicacion_Numero]' AND @_orderByDirection0 = 1 THEN [Publicacion_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Publicacion_Descripcion]' AND @_orderByDirection0 = 0 THEN [Publicacion_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Publicacion_Descripcion]' AND @_orderByDirection0 = 1 THEN [Publicacion_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Publicacion_Simbolo]' AND @_orderByDirection0 = 0 THEN [Publicacion_Simbolo]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Publicacion_Simbolo]' AND @_orderByDirection0 = 1 THEN [Publicacion_Simbolo]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Publicacion_Orden]' AND @_orderByDirection0 = 0 THEN [Publicacion_Orden]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Publicacion_Orden]' AND @_orderByDirection0 = 1 THEN [Publicacion_Orden]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Registro_Preguntas_Cata
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Registro_Preguntas_Cata_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Registro_Preguntas_Cata_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Registro_Preguntas_Cata_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Registro_Preguntas_Cata_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Registro_Preguntas_Cata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Registro_Preguntas_Cata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Registro_Preguntas_Cata_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Registro_Preguntas_Cata_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Registro_Preguntas_Cata_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Registro_Preguntas_Cata_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Registro_Preguntas_Cata_RegistroRespuestasCata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Registro_Preguntas_Cata_RegistroRespuestasCata]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Registro_Preguntas_Cata_Editar]
(
	@Pregunta_Descripcion  [VarChar]  (500),
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Respuesta_Secuencia  [Int]  = 1,
	@Pregunta_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Registro_Preguntas_Cata] 
SET
	[Pregunta_Descripcion] = @Pregunta_Descripcion,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario,
	[Respuesta_Secuencia] = @Respuesta_Secuencia

WHERE
	[dbo].[Registro_Preguntas_Cata].[Pregunta_Secuencia] = @Pregunta_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Registro_Preguntas_Cata]
(
	[Pregunta_Descripcion],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Respuesta_Secuencia]
)
VALUES
(
	@Pregunta_Descripcion,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Respuesta_Secuencia
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Pregunta_Secuencia = SCOPE_IDENTITY() 
    SELECT DISTINCT @Pregunta_Secuencia AS 'Pregunta_Secuencia' 
        FROM [Registro_Preguntas_Cata]
        WHERE ([Registro_Preguntas_Cata].[Pregunta_Secuencia] = @Pregunta_Secuencia)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Registro_Preguntas_Cata_Borrar]
(
	@Pregunta_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END


  DELETE FROM [Registro_Preguntas_Cata]
    WHERE 
      ([Registro_Preguntas_Cata].[Pregunta_Secuencia] = @Pregunta_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Registro_Preguntas_Cata]
(
	@Pregunta_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Registro_Preguntas_Cata].[Pregunta_Secuencia],
                [Registro_Preguntas_Cata].[Respuesta_Secuencia],
                [Registro_Preguntas_Cata].[Pregunta_Descripcion],
                [Registro_Preguntas_Cata].[Registro_Estado],
                [Registro_Preguntas_Cata].[Registro_Fecha],
                [Registro_Preguntas_Cata].[Registro_Usuario]
    FROM [Registro_Preguntas_Cata]
    WHERE 
     ( [Registro_Preguntas_Cata].[Pregunta_Secuencia] = @Pregunta_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Registro_Preguntas_Cata_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Registro_Preguntas_Cata].[Pregunta_Secuencia],
                [Registro_Preguntas_Cata].[Respuesta_Secuencia],
                [Registro_Preguntas_Cata].[Pregunta_Descripcion],
                [Registro_Preguntas_Cata].[Registro_Estado],
                [Registro_Preguntas_Cata].[Registro_Fecha],
                [Registro_Preguntas_Cata].[Registro_Usuario]
    FROM [Registro_Preguntas_Cata]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Registro_Preguntas_Cata_RegistroRespuestasCata]
(
	@Respuesta_Secuencia  [Int]  = 1,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Registro_Preguntas_Cata].[Pregunta_Secuencia],
                [Registro_Preguntas_Cata].[Respuesta_Secuencia],
                [Registro_Preguntas_Cata].[Pregunta_Descripcion],
                [Registro_Preguntas_Cata].[Registro_Estado],
                [Registro_Preguntas_Cata].[Registro_Fecha],
                [Registro_Preguntas_Cata].[Registro_Usuario]
    FROM [Registro_Preguntas_Cata]
      WHERE
        ([Registro_Preguntas_Cata].[Respuesta_Secuencia] = @Respuesta_Secuencia)


RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Registro_Preguntas_Cata_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [rpc].[Pregunta_Secuencia]
 ) AS [RowNumber],
				   rpc.Pregunta_Secuencia , 
				   rpc.Respuesta_Secuencia , 
				   rpc.Pregunta_Descripcion , 
				   rpc.Registro_Estado , 
				   rpc.Registro_Fecha , 
				   rpc.Registro_Usuario
		FROM  [dbo].[Registro_Preguntas_Cata]	As rpc	
			 Inner Join Registro_Respuestas_Cata As rrc
			   On  rrc.Respuesta_Secuencia = rpc.Respuesta_Secuencia

		   WHERE rpc.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(rpc.Pregunta_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(rpc.Respuesta_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rpc.Pregunta_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rpc.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(rpc.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rpc.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Pregunta_Secuencia]' AND @_orderByDirection0 = 0 THEN [Pregunta_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Pregunta_Secuencia]' AND @_orderByDirection0 = 1 THEN [Pregunta_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Respuesta_Secuencia]' AND @_orderByDirection0 = 0 THEN [Respuesta_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Respuesta_Secuencia]' AND @_orderByDirection0 = 1 THEN [Respuesta_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Pregunta_Descripcion]' AND @_orderByDirection0 = 0 THEN [Pregunta_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Pregunta_Descripcion]' AND @_orderByDirection0 = 1 THEN [Pregunta_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Registro_Respuestas_Cata
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Registro_Respuestas_Cata_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Registro_Respuestas_Cata_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Registro_Respuestas_Cata_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Registro_Respuestas_Cata_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Registro_Respuestas_Cata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Registro_Respuestas_Cata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Registro_Respuestas_Cata_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Registro_Respuestas_Cata_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Registro_Respuestas_Cata_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Registro_Respuestas_Cata_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Registro_Respuestas_Cata_RegistroRespuetaCategoriasCata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Registro_Respuestas_Cata_RegistroRespuetaCategoriasCata]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Registro_Respuestas_Cata_Editar]
(
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Respuesta_Categoria_Secuencia  [Int] ,
	@Respuesta_Descripcion  [VarChar]  (150),
	@Respuesta_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Registro_Respuestas_Cata] 
SET
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario,
	[Respuesta_Categoria_Secuencia] = @Respuesta_Categoria_Secuencia,
	[Respuesta_Descripcion] = @Respuesta_Descripcion

WHERE
	[dbo].[Registro_Respuestas_Cata].[Respuesta_Secuencia] = @Respuesta_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Registro_Respuestas_Cata]
(
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Respuesta_Categoria_Secuencia],
	[Respuesta_Descripcion]
)
VALUES
(
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Respuesta_Categoria_Secuencia,
	@Respuesta_Descripcion
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Respuesta_Secuencia = SCOPE_IDENTITY() 
    SELECT DISTINCT @Respuesta_Secuencia AS 'Respuesta_Secuencia' 
        FROM [Registro_Respuestas_Cata]
        WHERE ([Registro_Respuestas_Cata].[Respuesta_Secuencia] = @Respuesta_Secuencia)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Registro_Respuestas_Cata_Borrar]
(
	@Respuesta_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Registro_Preguntas_Cata] SET
     [Registro_Preguntas_Cata].[Respuesta_Secuencia] = NULL
    WHERE     ([Registro_Preguntas_Cata].[Respuesta_Secuencia] = @Respuesta_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Registro_Respuestas_Cata]
    WHERE 
      ([Registro_Respuestas_Cata].[Respuesta_Secuencia] = @Respuesta_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Registro_Respuestas_Cata]
(
	@Respuesta_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Registro_Respuestas_Cata].[Respuesta_Secuencia],
                [Registro_Respuestas_Cata].[Respuesta_Categoria_Secuencia],
                [Registro_Respuestas_Cata].[Respuesta_Descripcion],
                [Registro_Respuestas_Cata].[Registro_Estado],
                [Registro_Respuestas_Cata].[Registro_Fecha],
                [Registro_Respuestas_Cata].[Registro_Usuario]
    FROM [Registro_Respuestas_Cata]
    WHERE 
     ( [Registro_Respuestas_Cata].[Respuesta_Secuencia] = @Respuesta_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Registro_Respuestas_Cata_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Registro_Respuestas_Cata].[Respuesta_Secuencia],
                [Registro_Respuestas_Cata].[Respuesta_Categoria_Secuencia],
                [Registro_Respuestas_Cata].[Respuesta_Descripcion],
                [Registro_Respuestas_Cata].[Registro_Estado],
                [Registro_Respuestas_Cata].[Registro_Fecha],
                [Registro_Respuestas_Cata].[Registro_Usuario]
    FROM [Registro_Respuestas_Cata]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Registro_Respuestas_Cata_RegistroRespuetaCategoriasCata]
(
	@Respuesta_Categoria_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Registro_Respuestas_Cata].[Respuesta_Secuencia],
                [Registro_Respuestas_Cata].[Respuesta_Categoria_Secuencia],
                [Registro_Respuestas_Cata].[Respuesta_Descripcion],
                [Registro_Respuestas_Cata].[Registro_Estado],
                [Registro_Respuestas_Cata].[Registro_Fecha],
                [Registro_Respuestas_Cata].[Registro_Usuario]
    FROM [Registro_Respuestas_Cata]
      WHERE
        ([Registro_Respuestas_Cata].[Respuesta_Categoria_Secuencia] = @Respuesta_Categoria_Secuencia)


RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Registro_Respuestas_Cata_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [rrc].[Respuesta_Secuencia]
 ) AS [RowNumber],
				   rrc.Respuesta_Secuencia , 
				   rrc.Respuesta_Categoria_Secuencia , 
				   rrc.Respuesta_Descripcion , 
				   rrc.Registro_Estado , 
				   rrc.Registro_Fecha , 
				   rrc.Registro_Usuario
		FROM  [dbo].[Registro_Respuestas_Cata]	As rrc	
			 Inner Join Registro_Respueta_Categorias_Cata As rrcc
			   On  rrcc.Respuesta_Categoria_Secuencia = rrc.Respuesta_Categoria_Secuencia

		   WHERE rrc.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(rrc.Respuesta_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(rrc.Respuesta_Categoria_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rrc.Respuesta_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rrc.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(rrc.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rrc.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Respuesta_Secuencia]' AND @_orderByDirection0 = 0 THEN [Respuesta_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Respuesta_Secuencia]' AND @_orderByDirection0 = 1 THEN [Respuesta_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Respuesta_Categoria_Secuencia]' AND @_orderByDirection0 = 0 THEN [Respuesta_Categoria_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Respuesta_Categoria_Secuencia]' AND @_orderByDirection0 = 1 THEN [Respuesta_Categoria_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Respuesta_Descripcion]' AND @_orderByDirection0 = 0 THEN [Respuesta_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Respuesta_Descripcion]' AND @_orderByDirection0 = 1 THEN [Respuesta_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Registro_Respueta_Categorias_Cata
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Registro_Respueta_Categorias_Cata_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Registro_Respueta_Categorias_Cata_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Registro_Respueta_Categorias_Cata_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Registro_Respueta_Categorias_Cata_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Registro_Respueta_Categorias_Cata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Registro_Respueta_Categorias_Cata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Registro_Respueta_Categorias_Cata_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Registro_Respueta_Categorias_Cata_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Registro_Respueta_Categorias_Cata_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Registro_Respueta_Categorias_Cata_Paging]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Registro_Respueta_Categorias_Cata_Editar]
(
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Respuesta_Categoria_Descripcion  [VarChar]  (50),
	@Respuesta_Categoria_Explicacion  [VarChar]  (500),
	@Respuesta_Categoria_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Registro_Respueta_Categorias_Cata] 
SET
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario,
	[Respuesta_Categoria_Descripcion] = @Respuesta_Categoria_Descripcion,
	[Respuesta_Categoria_Explicacion] = @Respuesta_Categoria_Explicacion

WHERE
	[dbo].[Registro_Respueta_Categorias_Cata].[Respuesta_Categoria_Secuencia] = @Respuesta_Categoria_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Registro_Respueta_Categorias_Cata]
(
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Respuesta_Categoria_Descripcion],
	[Respuesta_Categoria_Explicacion]
)
VALUES
(
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Respuesta_Categoria_Descripcion,
	@Respuesta_Categoria_Explicacion
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Respuesta_Categoria_Secuencia = SCOPE_IDENTITY() 
    SELECT DISTINCT @Respuesta_Categoria_Secuencia AS 'Respuesta_Categoria_Secuencia' 
        FROM [Registro_Respueta_Categorias_Cata]
        WHERE ([Registro_Respueta_Categorias_Cata].[Respuesta_Categoria_Secuencia] = @Respuesta_Categoria_Secuencia)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Registro_Respueta_Categorias_Cata_Borrar]
(
	@Respuesta_Categoria_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Registro_Respuestas_Cata] SET
     [Registro_Respuestas_Cata].[Respuesta_Categoria_Secuencia] = NULL
    WHERE     ([Registro_Respuestas_Cata].[Respuesta_Categoria_Secuencia] = @Respuesta_Categoria_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Registro_Respueta_Categorias_Cata]
    WHERE 
      ([Registro_Respueta_Categorias_Cata].[Respuesta_Categoria_Secuencia] = @Respuesta_Categoria_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Registro_Respueta_Categorias_Cata]
(
	@Respuesta_Categoria_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Registro_Respueta_Categorias_Cata].[Respuesta_Categoria_Secuencia],
                [Registro_Respueta_Categorias_Cata].[Respuesta_Categoria_Descripcion],
                [Registro_Respueta_Categorias_Cata].[Respuesta_Categoria_Explicacion],
                [Registro_Respueta_Categorias_Cata].[Registro_Estado],
                [Registro_Respueta_Categorias_Cata].[Registro_Fecha],
                [Registro_Respueta_Categorias_Cata].[Registro_Usuario]
    FROM [Registro_Respueta_Categorias_Cata]
    WHERE 
     ( [Registro_Respueta_Categorias_Cata].[Respuesta_Categoria_Secuencia] = @Respuesta_Categoria_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Registro_Respueta_Categorias_Cata_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Registro_Respueta_Categorias_Cata].[Respuesta_Categoria_Secuencia],
                [Registro_Respueta_Categorias_Cata].[Respuesta_Categoria_Descripcion],
                [Registro_Respueta_Categorias_Cata].[Respuesta_Categoria_Explicacion],
                [Registro_Respueta_Categorias_Cata].[Registro_Estado],
                [Registro_Respueta_Categorias_Cata].[Registro_Fecha],
                [Registro_Respueta_Categorias_Cata].[Registro_Usuario]
    FROM [Registro_Respueta_Categorias_Cata]

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Registro_Respueta_Categorias_Cata_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [rrcc].[Respuesta_Categoria_Secuencia]
 ) AS [RowNumber],
				   rrcc.Respuesta_Categoria_Secuencia , 
				   rrcc.Respuesta_Categoria_Descripcion , 
				   rrcc.Respuesta_Categoria_Explicacion , 
				   rrcc.Registro_Estado , 
				   rrcc.Registro_Fecha , 
				   rrcc.Registro_Usuario
		FROM  [dbo].[Registro_Respueta_Categorias_Cata]	As rrcc	

		   WHERE rrcc.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(rrcc.Respuesta_Categoria_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rrcc.Respuesta_Categoria_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rrcc.Respuesta_Categoria_Explicacion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rrcc.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(rrcc.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rrcc.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Respuesta_Categoria_Secuencia]' AND @_orderByDirection0 = 0 THEN [Respuesta_Categoria_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Respuesta_Categoria_Secuencia]' AND @_orderByDirection0 = 1 THEN [Respuesta_Categoria_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Respuesta_Categoria_Descripcion]' AND @_orderByDirection0 = 0 THEN [Respuesta_Categoria_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Respuesta_Categoria_Descripcion]' AND @_orderByDirection0 = 1 THEN [Respuesta_Categoria_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Respuesta_Categoria_Explicacion]' AND @_orderByDirection0 = 0 THEN [Respuesta_Categoria_Explicacion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Respuesta_Categoria_Explicacion]' AND @_orderByDirection0 = 1 THEN [Respuesta_Categoria_Explicacion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Roles_Cata
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Roles_Cata_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Roles_Cata_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Roles_Cata_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Roles_Cata_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Roles_Cata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Roles_Cata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Roles_Cata_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Roles_Cata_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Roles_Cata_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Roles_Cata_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Roles_Cata_RolesNivelesCata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Roles_Cata_RolesNivelesCata]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Roles_Cata_Editar]
(
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Role_Descripcion  [VarChar]  (1500),
	@Role_Nivel_Numero  [Int]  = null,
	@Role_Nombre  [VarChar]  (50),
	@Role_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Roles_Cata] 
SET
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario,
	[Role_Descripcion] = @Role_Descripcion,
	[Role_Nivel_Numero] = @Role_Nivel_Numero,
	[Role_Nombre] = @Role_Nombre

WHERE
	[dbo].[Roles_Cata].[Role_Numero] = @Role_Numero



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Roles_Cata]
(
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Role_Descripcion],
	[Role_Nivel_Numero],
	[Role_Nombre]
)
VALUES
(
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Role_Descripcion,
	@Role_Nivel_Numero,
	@Role_Nombre
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Role_Numero = SCOPE_IDENTITY() 
    SELECT DISTINCT @Role_Numero AS 'Role_Numero' 
        FROM [Roles_Cata]
        WHERE ([Roles_Cata].[Role_Numero] = @Role_Numero)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Roles_Cata_Borrar]
(
	@Role_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Persona_Roles_Trans] SET
     [Persona_Roles_Trans].[Role_Numero] = NULL
    WHERE     ([Persona_Roles_Trans].[Role_Numero] = @Role_Numero)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Roles_Funcionalidad_Acciones_Trans] SET
     [Roles_Funcionalidad_Acciones_Trans].[Role_Numero] = NULL
    WHERE     ([Roles_Funcionalidad_Acciones_Trans].[Role_Numero] = @Role_Numero)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Documentos_Objetivos_Trans] SET
     [Documentos_Objetivos_Trans].[Role_Numero] = NULL
    WHERE     ([Documentos_Objetivos_Trans].[Role_Numero] = @Role_Numero)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Notificaciones_Objetivo_Trans] SET
     [Notificaciones_Objetivo_Trans].[Role_Numero] = NULL
    WHERE     ([Notificaciones_Objetivo_Trans].[Role_Numero] = @Role_Numero)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Roles_Cata]
    WHERE 
      ([Roles_Cata].[Role_Numero] = @Role_Numero)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Roles_Cata]
(
	@Role_Numero  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Roles_Cata].[Role_Numero],
                [Roles_Cata].[Role_Nivel_Numero],
                [Roles_Cata].[Role_Nombre],
                [Roles_Cata].[Role_Descripcion],
                [Roles_Cata].[Registro_Estado],
                [Roles_Cata].[Registro_Fecha],
                [Roles_Cata].[Registro_Usuario]
    FROM [Roles_Cata]
    WHERE 
     ( [Roles_Cata].[Role_Numero] = @Role_Numero)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Roles_Cata_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Roles_Cata].[Role_Numero],
                [Roles_Cata].[Role_Nivel_Numero],
                [Roles_Cata].[Role_Nombre],
                [Roles_Cata].[Role_Descripcion],
                [Roles_Cata].[Registro_Estado],
                [Roles_Cata].[Registro_Fecha],
                [Roles_Cata].[Registro_Usuario]
    FROM [Roles_Cata]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Roles_Cata_RolesNivelesCata]
(
	@Role_Nivel_Numero  [Int]  = null,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Roles_Cata].[Role_Numero],
                [Roles_Cata].[Role_Nivel_Numero],
                [Roles_Cata].[Role_Nombre],
                [Roles_Cata].[Role_Descripcion],
                [Roles_Cata].[Registro_Estado],
                [Roles_Cata].[Registro_Fecha],
                [Roles_Cata].[Registro_Usuario]
    FROM [Roles_Cata]
      WHERE
        ([Roles_Cata].[Role_Nivel_Numero] = @Role_Nivel_Numero)


RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Roles_Cata_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [rc].[Role_Numero]
 ) AS [RowNumber],
				   rc.Role_Numero , 
				   rc.Role_Nivel_Numero , 
				   rc.Role_Nombre , 
				   rc.Role_Descripcion , 
				   rc.Registro_Estado , 
				   rc.Registro_Fecha , 
				   rc.Registro_Usuario
		FROM  [dbo].[Roles_Cata]	As rc	
			 Inner Join Roles_Niveles_Cata As rnc
			   On  rnc.Role_Nivel_Numero = rc.Role_Nivel_Numero

		   WHERE rc.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(rc.Role_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(rc.Role_Nivel_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rc.Role_Nombre LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rc.Role_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rc.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(rc.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rc.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Role_Numero]' AND @_orderByDirection0 = 0 THEN [Role_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Role_Numero]' AND @_orderByDirection0 = 1 THEN [Role_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Role_Nivel_Numero]' AND @_orderByDirection0 = 0 THEN [Role_Nivel_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Role_Nivel_Numero]' AND @_orderByDirection0 = 1 THEN [Role_Nivel_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Role_Nombre]' AND @_orderByDirection0 = 0 THEN [Role_Nombre]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Role_Nombre]' AND @_orderByDirection0 = 1 THEN [Role_Nombre]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Role_Descripcion]' AND @_orderByDirection0 = 0 THEN [Role_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Role_Descripcion]' AND @_orderByDirection0 = 1 THEN [Role_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Roles_Funcionalidad_Acciones_Trans
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Roles_Funcionalidad_Acciones_Trans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Roles_Funcionalidad_Acciones_Trans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_RolesCata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_RolesCata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_SistemasFuncionalidadesAccionesTrans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_SistemasFuncionalidadesAccionesTrans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_DeleteByRole]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_DeleteByRole]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_Editar]
(
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (150),
	@Funcionalidad_Accion_Numero  [Int] ,
	@Funcionalidad_Numero  [Int] ,
	@Role_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Roles_Funcionalidad_Acciones_Trans] 
SET
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Accion_Numero] = @Funcionalidad_Accion_Numero AND
	[dbo].[Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Numero] = @Funcionalidad_Numero AND
	[dbo].[Roles_Funcionalidad_Acciones_Trans].[Role_Numero] = @Role_Numero



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Roles_Funcionalidad_Acciones_Trans]
(
	[Funcionalidad_Accion_Numero],
	[Funcionalidad_Numero],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Role_Numero]
)
VALUES
(
	@Funcionalidad_Accion_Numero,
	@Funcionalidad_Numero,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Role_Numero
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_Borrar]
(
	@Funcionalidad_Accion_Numero  [Int] ,
	@Funcionalidad_Numero  [Int] ,
	@Role_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END


  DELETE FROM [Roles_Funcionalidad_Acciones_Trans]
    WHERE 
      ([Roles_Funcionalidad_Acciones_Trans].[Role_Numero] = @Role_Numero)
     AND       ([Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Numero] = @Funcionalidad_Numero)
     AND       ([Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Accion_Numero] = @Funcionalidad_Accion_Numero)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Roles_Funcionalidad_Acciones_Trans]
(
	@Funcionalidad_Accion_Numero  [Int] ,
	@Funcionalidad_Numero  [Int] ,
	@Role_Numero  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Roles_Funcionalidad_Acciones_Trans].[Role_Numero],
                [Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Numero],
                [Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Accion_Numero],
                [Roles_Funcionalidad_Acciones_Trans].[Registro_Estado],
                [Roles_Funcionalidad_Acciones_Trans].[Registro_Fecha],
                [Roles_Funcionalidad_Acciones_Trans].[Registro_Usuario]
    FROM [Roles_Funcionalidad_Acciones_Trans]
    WHERE 
     ( [Roles_Funcionalidad_Acciones_Trans].[Role_Numero] = @Role_Numero)
     AND      ( [Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Numero] = @Funcionalidad_Numero)
     AND      ( [Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Accion_Numero] = @Funcionalidad_Accion_Numero)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Roles_Funcionalidad_Acciones_Trans].[Role_Numero],
                [Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Numero],
                [Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Accion_Numero],
                [Roles_Funcionalidad_Acciones_Trans].[Registro_Estado],
                [Roles_Funcionalidad_Acciones_Trans].[Registro_Fecha],
                [Roles_Funcionalidad_Acciones_Trans].[Registro_Usuario]
    FROM [Roles_Funcionalidad_Acciones_Trans]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_RolesCata]
(
	@Role_Numero  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Roles_Funcionalidad_Acciones_Trans].[Role_Numero],
                [Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Numero],
                [Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Accion_Numero],
                [Roles_Funcionalidad_Acciones_Trans].[Registro_Estado],
                [Roles_Funcionalidad_Acciones_Trans].[Registro_Fecha],
                [Roles_Funcionalidad_Acciones_Trans].[Registro_Usuario]
    FROM [Roles_Funcionalidad_Acciones_Trans]
      WHERE
        ([Roles_Funcionalidad_Acciones_Trans].[Role_Numero] = @Role_Numero)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_SistemasFuncionalidadesAccionesTrans]
(
	@Funcionalidad_Accion_Numero  [Int] ,
	@Funcionalidad_Numero  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Roles_Funcionalidad_Acciones_Trans].[Role_Numero],
                [Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Numero],
                [Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Accion_Numero],
                [Roles_Funcionalidad_Acciones_Trans].[Registro_Estado],
                [Roles_Funcionalidad_Acciones_Trans].[Registro_Fecha],
                [Roles_Funcionalidad_Acciones_Trans].[Registro_Usuario]
    FROM [Roles_Funcionalidad_Acciones_Trans]
      WHERE
        ([Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Numero] = @Funcionalidad_Numero)
 And 
        ([Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Accion_Numero] = @Funcionalidad_Accion_Numero)


RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_DeleteByRole]
(
    @Role_Numero [Int] 
)
AS

SET NOCOUNT ON
DELETE
    FROM [Roles_Funcionalidad_Acciones_Trans]
      WHERE Roles_Funcionalidad_Acciones_Trans.Registro_Estado = 'A'
      AND 
         [Roles_Funcionalidad_Acciones_Trans].[Role_Numero] = @role_numero

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Roles_Funcionalidad_Acciones_Trans_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [rfat].[Role_Numero],
		                [rfat].[Funcionalidad_Numero],
		                [rfat].[Funcionalidad_Accion_Numero]
 ) AS [RowNumber],
				   rfat.Role_Numero , 
				   rfat.Funcionalidad_Numero , 
				   rfat.Funcionalidad_Accion_Numero , 
				   rfat.Registro_Estado , 
				   rfat.Registro_Fecha , 
				   rfat.Registro_Usuario
		FROM  [dbo].[Roles_Funcionalidad_Acciones_Trans]	As rfat	
			 Inner Join Roles_Cata As rc
			   On  rc.Role_Numero = rfat.Role_Numero
			 Inner Join Sistemas_Funcionalidades_Acciones_Trans As sfat
			   On  sfat.Funcionalidad_Numero = rfat.Funcionalidad_Numero
			      And  sfat.Funcionalidad_Accion_Numero = rfat.Funcionalidad_Accion_Numero

		   WHERE rfat.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(rfat.Role_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(rfat.Funcionalidad_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(rfat.Funcionalidad_Accion_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rfat.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(rfat.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rfat.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Role_Numero]' AND @_orderByDirection0 = 0 THEN [Role_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Role_Numero]' AND @_orderByDirection0 = 1 THEN [Role_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Numero]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Numero]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Numero]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Accion_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Numero]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Accion_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Roles_Niveles_Cata
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Roles_Niveles_Cata_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Roles_Niveles_Cata_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Roles_Niveles_Cata_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Roles_Niveles_Cata_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Roles_Niveles_Cata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Roles_Niveles_Cata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Roles_Niveles_Cata_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Roles_Niveles_Cata_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Roles_Niveles_Cata_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Roles_Niveles_Cata_Paging]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Roles_Niveles_Cata_Editar]
(
	@Registro_Estado  [Char]  (1) = 'A',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50) = '(suser_sname())',
	@Role_Nivel  [Int]  = 0,
	@Role_Nivel_Descripcion  [VarChar]  (500),
	@Role_Nivel_Nombre  [VarChar]  (50),
	@Role_Nivel_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Roles_Niveles_Cata] 
SET
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario,
	[Role_Nivel] = @Role_Nivel,
	[Role_Nivel_Descripcion] = @Role_Nivel_Descripcion,
	[Role_Nivel_Nombre] = @Role_Nivel_Nombre

WHERE
	[dbo].[Roles_Niveles_Cata].[Role_Nivel_Numero] = @Role_Nivel_Numero



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Roles_Niveles_Cata]
(
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Role_Nivel],
	[Role_Nivel_Descripcion],
	[Role_Nivel_Nombre]
)
VALUES
(
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Role_Nivel,
	@Role_Nivel_Descripcion,
	@Role_Nivel_Nombre
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Role_Nivel_Numero = SCOPE_IDENTITY() 
    SELECT DISTINCT @Role_Nivel_Numero AS 'Role_Nivel_Numero' 
        FROM [Roles_Niveles_Cata]
        WHERE ([Roles_Niveles_Cata].[Role_Nivel_Numero] = @Role_Nivel_Numero)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Roles_Niveles_Cata_Borrar]
(
	@Role_Nivel_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Roles_Cata] SET
     [Roles_Cata].[Role_Nivel_Numero] = NULL
    WHERE     ([Roles_Cata].[Role_Nivel_Numero] = @Role_Nivel_Numero)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Roles_Niveles_Cata]
    WHERE 
      ([Roles_Niveles_Cata].[Role_Nivel_Numero] = @Role_Nivel_Numero)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Roles_Niveles_Cata]
(
	@Role_Nivel_Numero  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Roles_Niveles_Cata].[Role_Nivel_Numero],
                [Roles_Niveles_Cata].[Role_Nivel],
                [Roles_Niveles_Cata].[Role_Nivel_Nombre],
                [Roles_Niveles_Cata].[Role_Nivel_Descripcion],
                [Roles_Niveles_Cata].[Registro_Estado],
                [Roles_Niveles_Cata].[Registro_Fecha],
                [Roles_Niveles_Cata].[Registro_Usuario]
    FROM [Roles_Niveles_Cata]
    WHERE 
     ( [Roles_Niveles_Cata].[Role_Nivel_Numero] = @Role_Nivel_Numero)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Roles_Niveles_Cata_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Roles_Niveles_Cata].[Role_Nivel_Numero],
                [Roles_Niveles_Cata].[Role_Nivel],
                [Roles_Niveles_Cata].[Role_Nivel_Nombre],
                [Roles_Niveles_Cata].[Role_Nivel_Descripcion],
                [Roles_Niveles_Cata].[Registro_Estado],
                [Roles_Niveles_Cata].[Registro_Fecha],
                [Roles_Niveles_Cata].[Registro_Usuario]
    FROM [Roles_Niveles_Cata]

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Roles_Niveles_Cata_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [rnc].[Role_Nivel_Numero]
 ) AS [RowNumber],
				   rnc.Role_Nivel_Numero , 
				   rnc.Role_Nivel , 
				   rnc.Role_Nivel_Nombre , 
				   rnc.Role_Nivel_Descripcion , 
				   rnc.Registro_Estado , 
				   rnc.Registro_Fecha , 
				   rnc.Registro_Usuario
		FROM  [dbo].[Roles_Niveles_Cata]	As rnc	

		   WHERE rnc.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(rnc.Role_Nivel_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(rnc.Role_Nivel) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rnc.Role_Nivel_Nombre LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rnc.Role_Nivel_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rnc.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(rnc.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rnc.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Role_Nivel_Numero]' AND @_orderByDirection0 = 0 THEN [Role_Nivel_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Role_Nivel_Numero]' AND @_orderByDirection0 = 1 THEN [Role_Nivel_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Role_Nivel]' AND @_orderByDirection0 = 0 THEN [Role_Nivel]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Role_Nivel]' AND @_orderByDirection0 = 1 THEN [Role_Nivel]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Role_Nivel_Nombre]' AND @_orderByDirection0 = 0 THEN [Role_Nivel_Nombre]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Role_Nivel_Nombre]' AND @_orderByDirection0 = 1 THEN [Role_Nivel_Nombre]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Role_Nivel_Descripcion]' AND @_orderByDirection0 = 0 THEN [Role_Nivel_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Role_Nivel_Descripcion]' AND @_orderByDirection0 = 1 THEN [Role_Nivel_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Rutas_Master
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Rutas_Master_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Rutas_Master_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Rutas_Master_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Rutas_Master_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Rutas_Master]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Rutas_Master]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Rutas_Master_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Rutas_Master_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Rutas_Master_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Rutas_Master_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Rutas_Master_PersonasMaster]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Rutas_Master_PersonasMaster]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Rutas_Master_PersonasMasterRutaPersonaAuxiliar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Rutas_Master_PersonasMasterRutaPersonaAuxiliar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Rutas_Master_ZonasMaster]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Rutas_Master_ZonasMaster]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Rutas_Master_LoadPersona]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Rutas_Master_LoadPersona]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Rutas_Master_LoadZona]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Rutas_Master_LoadZona]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Rutas_Master_LoadEncargadoAuxiliar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Rutas_Master_LoadEncargadoAuxiliar]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Rutas_Master_Editar]
(
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Ruta_Carros_Cantidad  [Int] ,
	@Ruta_Descripcion  [VarChar]  (150),
	@Ruta_Mapa_Url  [VarChar]  (50) = null,
	@Ruta_Persona_Auxiliar  [Int] ,
	@Ruta_Persona_Encargado  [Int] ,
	@Ruta_Publicadores_Cantidad  [Int] ,
	@Zona_Secuencia  [Int] ,
	@Ruta_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Rutas_Master] 
SET
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario,
	[Ruta_Carros_Cantidad] = @Ruta_Carros_Cantidad,
	[Ruta_Descripcion] = @Ruta_Descripcion,
	[Ruta_Mapa_Url] = @Ruta_Mapa_Url,
	[Ruta_Persona_Auxiliar] = @Ruta_Persona_Auxiliar,
	[Ruta_Persona_Encargado] = @Ruta_Persona_Encargado,
	[Ruta_Publicadores_Cantidad] = @Ruta_Publicadores_Cantidad,
	[Zona_Secuencia] = @Zona_Secuencia

WHERE
	[dbo].[Rutas_Master].[Ruta_Secuencia] = @Ruta_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Rutas_Master]
(
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Ruta_Carros_Cantidad],
	[Ruta_Descripcion],
	[Ruta_Mapa_Url],
	[Ruta_Persona_Auxiliar],
	[Ruta_Persona_Encargado],
	[Ruta_Publicadores_Cantidad],
	[Zona_Secuencia]
)
VALUES
(
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Ruta_Carros_Cantidad,
	@Ruta_Descripcion,
	@Ruta_Mapa_Url,
	@Ruta_Persona_Auxiliar,
	@Ruta_Persona_Encargado,
	@Ruta_Publicadores_Cantidad,
	@Zona_Secuencia
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Ruta_Secuencia = SCOPE_IDENTITY() 
    SELECT DISTINCT @Ruta_Secuencia AS 'Ruta_Secuencia' 
        FROM [Rutas_Master]
        WHERE ([Rutas_Master].[Ruta_Secuencia] = @Ruta_Secuencia)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Rutas_Master_Borrar]
(
	@Ruta_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Horarios_Master] SET
     [Horarios_Master].[Ruta_Secuencia] = NULL
    WHERE     ([Horarios_Master].[Ruta_Secuencia] = @Ruta_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Horario_Trans] SET
     [Horario_Trans].[Ruta_Secuencia] = NULL
    WHERE     ([Horario_Trans].[Ruta_Secuencia] = @Ruta_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Notificaciones_Objetivo_Trans] SET
     [Notificaciones_Objetivo_Trans].[Ruta_Secuencia] = NULL
    WHERE     ([Notificaciones_Objetivo_Trans].[Ruta_Secuencia] = @Ruta_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Documentos_Objetivos_Trans] SET
     [Documentos_Objetivos_Trans].[Ruta_Secuencia] = NULL
    WHERE     ([Documentos_Objetivos_Trans].[Ruta_Secuencia] = @Ruta_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Rutas_Master]
    WHERE 
      ([Rutas_Master].[Ruta_Secuencia] = @Ruta_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Rutas_Master]
(
	@Ruta_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Rutas_Master].[Ruta_Secuencia],
                [Rutas_Master].[Zona_Secuencia],
                [Rutas_Master].[Ruta_Descripcion],
                [Rutas_Master].[Ruta_Persona_Encargado],
                [Rutas_Master].[Ruta_Persona_Auxiliar],
                [Rutas_Master].[Ruta_Mapa_Url],
                [Rutas_Master].[Ruta_Carros_Cantidad],
                [Rutas_Master].[Ruta_Publicadores_Cantidad],
                [Rutas_Master].[Registro_Estado],
                [Rutas_Master].[Registro_Fecha],
                [Rutas_Master].[Registro_Usuario]
    FROM [Rutas_Master]
    WHERE 
     ( [Rutas_Master].[Ruta_Secuencia] = @Ruta_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Rutas_Master_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Rutas_Master].[Ruta_Secuencia],
                [Rutas_Master].[Zona_Secuencia],
                [Rutas_Master].[Ruta_Descripcion],
                [Rutas_Master].[Ruta_Persona_Encargado],
                [Rutas_Master].[Ruta_Persona_Auxiliar],
                [Rutas_Master].[Ruta_Mapa_Url],
                [Rutas_Master].[Ruta_Carros_Cantidad],
                [Rutas_Master].[Ruta_Publicadores_Cantidad],
                [Rutas_Master].[Registro_Estado],
                [Rutas_Master].[Registro_Fecha],
                [Rutas_Master].[Registro_Usuario]
    FROM [Rutas_Master]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Rutas_Master_PersonasMaster]
(
	@Ruta_Persona_Encargado  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Rutas_Master].[Ruta_Secuencia],
                [Rutas_Master].[Zona_Secuencia],
                [Rutas_Master].[Ruta_Descripcion],
                [Rutas_Master].[Ruta_Persona_Encargado],
                [Rutas_Master].[Ruta_Persona_Auxiliar],
                [Rutas_Master].[Ruta_Mapa_Url],
                [Rutas_Master].[Ruta_Carros_Cantidad],
                [Rutas_Master].[Ruta_Publicadores_Cantidad],
                [Rutas_Master].[Registro_Estado],
                [Rutas_Master].[Registro_Fecha],
                [Rutas_Master].[Registro_Usuario]
    FROM [Rutas_Master]
      WHERE
        ([Rutas_Master].[Ruta_Persona_Encargado] = @Ruta_Persona_Encargado)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Rutas_Master_PersonasMasterRutaPersonaAuxiliar]
(
	@Ruta_Persona_Auxiliar  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Rutas_Master].[Ruta_Secuencia],
                [Rutas_Master].[Zona_Secuencia],
                [Rutas_Master].[Ruta_Descripcion],
                [Rutas_Master].[Ruta_Persona_Encargado],
                [Rutas_Master].[Ruta_Persona_Auxiliar],
                [Rutas_Master].[Ruta_Mapa_Url],
                [Rutas_Master].[Ruta_Carros_Cantidad],
                [Rutas_Master].[Ruta_Publicadores_Cantidad],
                [Rutas_Master].[Registro_Estado],
                [Rutas_Master].[Registro_Fecha],
                [Rutas_Master].[Registro_Usuario]
    FROM [Rutas_Master]
      WHERE
        ([Rutas_Master].[Ruta_Persona_Auxiliar] = @Ruta_Persona_Auxiliar)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Rutas_Master_ZonasMaster]
(
	@Zona_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Rutas_Master].[Ruta_Secuencia],
                [Rutas_Master].[Zona_Secuencia],
                [Rutas_Master].[Ruta_Descripcion],
                [Rutas_Master].[Ruta_Persona_Encargado],
                [Rutas_Master].[Ruta_Persona_Auxiliar],
                [Rutas_Master].[Ruta_Mapa_Url],
                [Rutas_Master].[Ruta_Carros_Cantidad],
                [Rutas_Master].[Ruta_Publicadores_Cantidad],
                [Rutas_Master].[Registro_Estado],
                [Rutas_Master].[Registro_Fecha],
                [Rutas_Master].[Registro_Usuario]
    FROM [Rutas_Master]
      WHERE
        ([Rutas_Master].[Zona_Secuencia] = @Zona_Secuencia)


RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Rutas_Master_LoadPersona]
(
    @Persona_Secuencia [int] ,
		@PageIndex 		int = 1,
		@PageSize  		int = 1000000,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
SELECT 				ROW_NUMBER() OVER ( ORDER BY 		                [Rutas_Master].[Ruta_Secuencia]
 ) AS [RowNumber],

          [Rutas_Master].[Ruta_Secuencia],
          [Rutas_Master].[Zona_Secuencia],
          [Rutas_Master].[Ruta_Descripcion],
          [Rutas_Master].[Ruta_Persona_Encargado],
          [Rutas_Master].[Ruta_Persona_Auxiliar],
          [Rutas_Master].[Ruta_Mapa_Url],
          [Rutas_Master].[Ruta_Carros_Cantidad],
          [Rutas_Master].[Ruta_Publicadores_Cantidad],
          [Rutas_Master].[Registro_Estado],
          [Rutas_Master].[Registro_Fecha],
          [Rutas_Master].[Registro_Usuario]
    FROM [Rutas_Master]
		LEFT OUTER JOIN [Congregaciones_Master]
			On              [Zonas_Master].[Zona_Secuencia] =  [Congregaciones_Master].[Zona_Secuencia]
		LEFT OUTER JOIN [Personas_Master]
			On              [Congregaciones_Master].[Congregacion_Secuencia] =  [Personas_Master].[Congregacion_Secuencia]
		LEFT OUTER JOIN [Zonas_Master]
			On              [Zonas_Master].[Zona_Secuencia] =  [Rutas_Master].[Zona_Secuencia]
      WHERE Rutas_Master.Registro_Estado = 'A'
      AND 
         [Personas_Master].[Persona_Secuencia] = @persona_secuencia
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Rutas_Master_LoadZona]
(
    @Zona_Secuencia [Int] ,
		@PageIndex 		int = 1,
		@PageSize  		int = 1000000,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
SELECT 				ROW_NUMBER() OVER ( ORDER BY 		                [Rutas_Master].[Ruta_Secuencia]
 ) AS [RowNumber],

          [Rutas_Master].[Ruta_Secuencia],
          [Rutas_Master].[Zona_Secuencia],
          [Rutas_Master].[Ruta_Descripcion],
          [Rutas_Master].[Ruta_Persona_Encargado],
          [Rutas_Master].[Ruta_Persona_Auxiliar],
          [Rutas_Master].[Ruta_Mapa_Url],
          [Rutas_Master].[Ruta_Carros_Cantidad],
          [Rutas_Master].[Ruta_Publicadores_Cantidad],
          [Rutas_Master].[Registro_Estado],
          [Rutas_Master].[Registro_Fecha],
          [Rutas_Master].[Registro_Usuario]
    FROM [Rutas_Master]
      WHERE Rutas_Master.Registro_Estado = 'A'
      AND 
          [Rutas_Master].[Zona_Secuencia] = @zona_secuencia
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Rutas_Master_LoadEncargadoAuxiliar]
(
    @Persona_Secuencia [int] ,
		@PageIndex 		int = 1,
		@PageSize  		int = 1000000,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
SELECT 				ROW_NUMBER() OVER ( ORDER BY 		                [Rutas_Master].[Ruta_Secuencia]
 ) AS [RowNumber],

          [Rutas_Master].[Ruta_Secuencia],
          [Rutas_Master].[Zona_Secuencia],
          [Rutas_Master].[Ruta_Descripcion],
          [Rutas_Master].[Ruta_Persona_Encargado],
          [Rutas_Master].[Ruta_Persona_Auxiliar],
          [Rutas_Master].[Ruta_Mapa_Url],
          [Rutas_Master].[Ruta_Carros_Cantidad],
          [Rutas_Master].[Ruta_Publicadores_Cantidad],
          [Rutas_Master].[Registro_Estado],
          [Rutas_Master].[Registro_Fecha],
          [Rutas_Master].[Registro_Usuario]
    FROM [Rutas_Master]
      WHERE Rutas_Master.Registro_Estado = 'A'
      AND 
         [Rutas_Master].[Ruta_Persona_Encargado] = @persona_secuencia
 OR  [Rutas_Master].[Ruta_Persona_Auxiliar] = @persona_secuencia
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Rutas_Master_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [rm].[Ruta_Secuencia]
 ) AS [RowNumber],
				   rm.Ruta_Secuencia , 
				   rm.Zona_Secuencia , 
				   rm.Ruta_Descripcion , 
				   rm.Ruta_Persona_Encargado , 
				   rm.Ruta_Persona_Auxiliar , 
				   rm.Ruta_Mapa_Url , 
				   rm.Ruta_Carros_Cantidad , 
				   rm.Ruta_Publicadores_Cantidad , 
				   rm.Registro_Estado , 
				   rm.Registro_Fecha , 
				   rm.Registro_Usuario
		FROM  [dbo].[Rutas_Master]	As rm	
			 Inner Join Personas_Master As pm
			   On  pm.Persona_Secuencia = rm.Ruta_Persona_Encargado
			 Inner Join Personas_Master As pm1
			   On  pm1.Persona_Secuencia = rm.Ruta_Persona_Auxiliar
			 Inner Join Zonas_Master As zm
			   On  zm.Zona_Secuencia = rm.Zona_Secuencia

		   WHERE rm.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(rm.Ruta_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(rm.Zona_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rm.Ruta_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(rm.Ruta_Persona_Encargado) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(rm.Ruta_Persona_Auxiliar) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rm.Ruta_Mapa_Url LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(rm.Ruta_Carros_Cantidad) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(rm.Ruta_Publicadores_Cantidad) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rm.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(rm.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR rm.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Ruta_Secuencia]' AND @_orderByDirection0 = 0 THEN [Ruta_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Secuencia]' AND @_orderByDirection0 = 1 THEN [Ruta_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Zona_Secuencia]' AND @_orderByDirection0 = 0 THEN [Zona_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Zona_Secuencia]' AND @_orderByDirection0 = 1 THEN [Zona_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Descripcion]' AND @_orderByDirection0 = 0 THEN [Ruta_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Descripcion]' AND @_orderByDirection0 = 1 THEN [Ruta_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Persona_Encargado]' AND @_orderByDirection0 = 0 THEN [Ruta_Persona_Encargado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Persona_Encargado]' AND @_orderByDirection0 = 1 THEN [Ruta_Persona_Encargado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Persona_Auxiliar]' AND @_orderByDirection0 = 0 THEN [Ruta_Persona_Auxiliar]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Persona_Auxiliar]' AND @_orderByDirection0 = 1 THEN [Ruta_Persona_Auxiliar]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Mapa_Url]' AND @_orderByDirection0 = 0 THEN [Ruta_Mapa_Url]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Mapa_Url]' AND @_orderByDirection0 = 1 THEN [Ruta_Mapa_Url]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Carros_Cantidad]' AND @_orderByDirection0 = 0 THEN [Ruta_Carros_Cantidad]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Carros_Cantidad]' AND @_orderByDirection0 = 1 THEN [Ruta_Carros_Cantidad]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Publicadores_Cantidad]' AND @_orderByDirection0 = 0 THEN [Ruta_Publicadores_Cantidad]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Ruta_Publicadores_Cantidad]' AND @_orderByDirection0 = 1 THEN [Ruta_Publicadores_Cantidad]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Sistemas_Descripciones_Trans
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Descripciones_Trans_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Descripciones_Trans_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Descripciones_Trans_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Descripciones_Trans_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Descripciones_Trans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Descripciones_Trans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Descripciones_Trans_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Descripciones_Trans_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Descripciones_Trans_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Descripciones_Trans_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Descripciones_Trans_ObjectoCodigo]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Descripciones_Trans_ObjectoCodigo]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Sistemas_Descripciones_Trans_Editar]
(
	@Objeto_Sub_Datagrid_Mostrar  [Char]  (1) = 'S',
	@Objeto_Sub_Datagrid_Orden  [Int] ,
	@Objeto_Sub_Descripcion  [VarChar]  (250),
	@Objeto_Sub_Detalle_Mostrar  [Char]  (1) = 'S',
	@Objeto_Sub_Detalle_Orden  [Int] ,
	@Objeto_Sub_Editar_Mostrar  [Char]  (1) = 'S',
	@Objeto_Sub_Editar_Orden  [Int] ,
	@Objeto_Sub_Explicacion  [VarChar]  (5000),
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Objeto_Codigo  [VarChar]  (150),
	@Objeto_Sub_Codigo  [VarChar]  (150)

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Sistemas_Descripciones_Trans] 
SET
	[Objeto_Sub_Datagrid_Mostrar] = @Objeto_Sub_Datagrid_Mostrar,
	[Objeto_Sub_Datagrid_Orden] = @Objeto_Sub_Datagrid_Orden,
	[Objeto_Sub_Descripcion] = @Objeto_Sub_Descripcion,
	[Objeto_Sub_Detalle_Mostrar] = @Objeto_Sub_Detalle_Mostrar,
	[Objeto_Sub_Detalle_Orden] = @Objeto_Sub_Detalle_Orden,
	[Objeto_Sub_Editar_Mostrar] = @Objeto_Sub_Editar_Mostrar,
	[Objeto_Sub_Editar_Orden] = @Objeto_Sub_Editar_Orden,
	[Objeto_Sub_Explicacion] = @Objeto_Sub_Explicacion,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Sistemas_Descripciones_Trans].[Objeto_Codigo] = @Objeto_Codigo AND
	[dbo].[Sistemas_Descripciones_Trans].[Objeto_Sub_Codigo] = @Objeto_Sub_Codigo



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Sistemas_Descripciones_Trans]
(
	[Objeto_Codigo],
	[Objeto_Sub_Codigo],
	[Objeto_Sub_Datagrid_Mostrar],
	[Objeto_Sub_Datagrid_Orden],
	[Objeto_Sub_Descripcion],
	[Objeto_Sub_Detalle_Mostrar],
	[Objeto_Sub_Detalle_Orden],
	[Objeto_Sub_Editar_Mostrar],
	[Objeto_Sub_Editar_Orden],
	[Objeto_Sub_Explicacion],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Objeto_Codigo,
	@Objeto_Sub_Codigo,
	@Objeto_Sub_Datagrid_Mostrar,
	@Objeto_Sub_Datagrid_Orden,
	@Objeto_Sub_Descripcion,
	@Objeto_Sub_Detalle_Mostrar,
	@Objeto_Sub_Detalle_Orden,
	@Objeto_Sub_Editar_Mostrar,
	@Objeto_Sub_Editar_Orden,
	@Objeto_Sub_Explicacion,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Sistemas_Descripciones_Trans_Borrar]
(
	@Objeto_Codigo  [VarChar]  (150),
	@Objeto_Sub_Codigo  [VarChar]  (150)

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END


  DELETE FROM [Sistemas_Descripciones_Trans]
    WHERE 
      ([Sistemas_Descripciones_Trans].[Objeto_Codigo] = @Objeto_Codigo)
     AND       ([Sistemas_Descripciones_Trans].[Objeto_Sub_Codigo] = @Objeto_Sub_Codigo)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Sistemas_Descripciones_Trans]
(
	@Objeto_Codigo  [VarChar]  (150),
	@Objeto_Sub_Codigo  [VarChar]  (150)

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Sistemas_Descripciones_Trans].[Objeto_Codigo],
                [Sistemas_Descripciones_Trans].[Objeto_Sub_Codigo],
                [Sistemas_Descripciones_Trans].[Objeto_Sub_Descripcion],
                [Sistemas_Descripciones_Trans].[Objeto_Sub_Explicacion],
                [Sistemas_Descripciones_Trans].[Objeto_Sub_Datagrid_Orden],
                [Sistemas_Descripciones_Trans].[Objeto_Sub_Datagrid_Mostrar],
                [Sistemas_Descripciones_Trans].[Objeto_Sub_Editar_Orden],
                [Sistemas_Descripciones_Trans].[Objeto_Sub_Editar_Mostrar],
                [Sistemas_Descripciones_Trans].[Objeto_Sub_Detalle_Orden],
                [Sistemas_Descripciones_Trans].[Objeto_Sub_Detalle_Mostrar],
                [Sistemas_Descripciones_Trans].[Registro_Estado],
                [Sistemas_Descripciones_Trans].[Registro_Fecha],
                [Sistemas_Descripciones_Trans].[Registro_Usuario]
    FROM [Sistemas_Descripciones_Trans]
    WHERE 
     ( [Sistemas_Descripciones_Trans].[Objeto_Codigo] = @Objeto_Codigo)
     AND      ( [Sistemas_Descripciones_Trans].[Objeto_Sub_Codigo] = @Objeto_Sub_Codigo)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Sistemas_Descripciones_Trans_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Sistemas_Descripciones_Trans].[Objeto_Codigo],
                [Sistemas_Descripciones_Trans].[Objeto_Sub_Codigo],
                [Sistemas_Descripciones_Trans].[Objeto_Sub_Descripcion],
                [Sistemas_Descripciones_Trans].[Objeto_Sub_Explicacion],
                [Sistemas_Descripciones_Trans].[Objeto_Sub_Datagrid_Orden],
                [Sistemas_Descripciones_Trans].[Objeto_Sub_Datagrid_Mostrar],
                [Sistemas_Descripciones_Trans].[Objeto_Sub_Editar_Orden],
                [Sistemas_Descripciones_Trans].[Objeto_Sub_Editar_Mostrar],
                [Sistemas_Descripciones_Trans].[Objeto_Sub_Detalle_Orden],
                [Sistemas_Descripciones_Trans].[Objeto_Sub_Detalle_Mostrar],
                [Sistemas_Descripciones_Trans].[Registro_Estado],
                [Sistemas_Descripciones_Trans].[Registro_Fecha],
                [Sistemas_Descripciones_Trans].[Registro_Usuario]
    FROM [Sistemas_Descripciones_Trans]

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Sistemas_Descripciones_Trans_ObjectoCodigo]
(
    @ObjectoCodigo [nvarchar]  (256),
		@PageIndex 		int = 1,
		@PageSize  		int = 1000000,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
SELECT 				ROW_NUMBER() OVER ( ORDER BY 		                [Sistemas_Descripciones_Trans].[Objeto_Codigo],
		                [Sistemas_Descripciones_Trans].[Objeto_Sub_Codigo]
 ) AS [RowNumber],

          [Sistemas_Descripciones_Trans].[Objeto_Codigo],
          [Sistemas_Descripciones_Trans].[Objeto_Sub_Codigo],
          [Sistemas_Descripciones_Trans].[Objeto_Sub_Descripcion],
          [Sistemas_Descripciones_Trans].[Objeto_Sub_Explicacion],
          [Sistemas_Descripciones_Trans].[Objeto_Sub_Datagrid_Orden],
          [Sistemas_Descripciones_Trans].[Objeto_Sub_Datagrid_Mostrar],
          [Sistemas_Descripciones_Trans].[Objeto_Sub_Editar_Orden],
          [Sistemas_Descripciones_Trans].[Objeto_Sub_Editar_Mostrar],
          [Sistemas_Descripciones_Trans].[Objeto_Sub_Detalle_Orden],
          [Sistemas_Descripciones_Trans].[Objeto_Sub_Detalle_Mostrar],
          [Sistemas_Descripciones_Trans].[Registro_Estado],
          [Sistemas_Descripciones_Trans].[Registro_Fecha],
          [Sistemas_Descripciones_Trans].[Registro_Usuario]
    FROM [Sistemas_Descripciones_Trans]
      WHERE Sistemas_Descripciones_Trans.Registro_Estado = 'A'
      AND 
         [Sistemas_Descripciones_Trans].[Objeto_Codigo] = @objectocodigo
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Sistemas_Descripciones_Trans_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [sdt].[Objeto_Codigo],
		                [sdt].[Objeto_Sub_Codigo]
 ) AS [RowNumber],
				   sdt.Objeto_Codigo , 
				   sdt.Objeto_Sub_Codigo , 
				   sdt.Objeto_Sub_Descripcion , 
				   sdt.Objeto_Sub_Explicacion , 
				   sdt.Objeto_Sub_Datagrid_Orden , 
				   sdt.Objeto_Sub_Datagrid_Mostrar , 
				   sdt.Objeto_Sub_Editar_Orden , 
				   sdt.Objeto_Sub_Editar_Mostrar , 
				   sdt.Objeto_Sub_Detalle_Orden , 
				   sdt.Objeto_Sub_Detalle_Mostrar , 
				   sdt.Registro_Estado , 
				   sdt.Registro_Fecha , 
				   sdt.Registro_Usuario
		FROM  [dbo].[Sistemas_Descripciones_Trans]	As sdt	

		   WHERE sdt.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR sdt.Objeto_Codigo LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sdt.Objeto_Sub_Codigo LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sdt.Objeto_Sub_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sdt.Objeto_Sub_Explicacion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(sdt.Objeto_Sub_Datagrid_Orden) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sdt.Objeto_Sub_Datagrid_Mostrar LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(sdt.Objeto_Sub_Editar_Orden) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sdt.Objeto_Sub_Editar_Mostrar LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(sdt.Objeto_Sub_Detalle_Orden) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sdt.Objeto_Sub_Detalle_Mostrar LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sdt.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(sdt.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sdt.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Objeto_Codigo]' AND @_orderByDirection0 = 0 THEN [Objeto_Codigo]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Objeto_Codigo]' AND @_orderByDirection0 = 1 THEN [Objeto_Codigo]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Objeto_Sub_Codigo]' AND @_orderByDirection0 = 0 THEN [Objeto_Sub_Codigo]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Objeto_Sub_Codigo]' AND @_orderByDirection0 = 1 THEN [Objeto_Sub_Codigo]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Objeto_Sub_Descripcion]' AND @_orderByDirection0 = 0 THEN [Objeto_Sub_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Objeto_Sub_Descripcion]' AND @_orderByDirection0 = 1 THEN [Objeto_Sub_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Objeto_Sub_Explicacion]' AND @_orderByDirection0 = 0 THEN [Objeto_Sub_Explicacion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Objeto_Sub_Explicacion]' AND @_orderByDirection0 = 1 THEN [Objeto_Sub_Explicacion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Objeto_Sub_Datagrid_Orden]' AND @_orderByDirection0 = 0 THEN [Objeto_Sub_Datagrid_Orden]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Objeto_Sub_Datagrid_Orden]' AND @_orderByDirection0 = 1 THEN [Objeto_Sub_Datagrid_Orden]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Objeto_Sub_Datagrid_Mostrar]' AND @_orderByDirection0 = 0 THEN [Objeto_Sub_Datagrid_Mostrar]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Objeto_Sub_Datagrid_Mostrar]' AND @_orderByDirection0 = 1 THEN [Objeto_Sub_Datagrid_Mostrar]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Objeto_Sub_Editar_Orden]' AND @_orderByDirection0 = 0 THEN [Objeto_Sub_Editar_Orden]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Objeto_Sub_Editar_Orden]' AND @_orderByDirection0 = 1 THEN [Objeto_Sub_Editar_Orden]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Objeto_Sub_Editar_Mostrar]' AND @_orderByDirection0 = 0 THEN [Objeto_Sub_Editar_Mostrar]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Objeto_Sub_Editar_Mostrar]' AND @_orderByDirection0 = 1 THEN [Objeto_Sub_Editar_Mostrar]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Objeto_Sub_Detalle_Orden]' AND @_orderByDirection0 = 0 THEN [Objeto_Sub_Detalle_Orden]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Objeto_Sub_Detalle_Orden]' AND @_orderByDirection0 = 1 THEN [Objeto_Sub_Detalle_Orden]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Objeto_Sub_Detalle_Mostrar]' AND @_orderByDirection0 = 0 THEN [Objeto_Sub_Detalle_Mostrar]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Objeto_Sub_Detalle_Mostrar]' AND @_orderByDirection0 = 1 THEN [Objeto_Sub_Detalle_Mostrar]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Sistemas_Funcionalidades_Acciones_Cata
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata_FuncionalidadAccionCodigo]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata_FuncionalidadAccionCodigo]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata_LoadFuncionalidad]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata_LoadFuncionalidad]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata_Editar]
(
	@Funcionalidad_Accion_Codigo  [VarChar]  (50),
	@Funcionalidad_Accion_Css  [VarChar]  (100),
	@Funcionalidad_Accion_Descripcion  [VarChar]  (150),
	@Funcionalidad_Accion_Explicacion  [VarChar]  (500),
	@Funcionalidad_Accion_Icono_Large  [VarChar]  (50) = null,
	@Funcionalidad_Accion_Icono_Small  [VarChar]  (50) = null,
	@Funcionalidad_Accion_Menu  [Char]  (1) = 'S',
	@Funcionalidad_Accion_Permiso_Descripcion  [VarChar]  (50) = null,
	@Funcionalidad_Accion_Permiso_Necesita  [Char]  (1) = ' ',
	@Funcionalidad_Accion_Tipo_Secuencia  [Int]  = null,
	@Funcionalidad_Accion_Toolbar  [Char]  (1) = 'S',
	@Registro_Estado  [Char]  (1) = 'A',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (150),
	@Funcionalidad_Accion_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Sistemas_Funcionalidades_Acciones_Cata] 
SET
	[Funcionalidad_Accion_Codigo] = @Funcionalidad_Accion_Codigo,
	[Funcionalidad_Accion_Css] = @Funcionalidad_Accion_Css,
	[Funcionalidad_Accion_Descripcion] = @Funcionalidad_Accion_Descripcion,
	[Funcionalidad_Accion_Explicacion] = @Funcionalidad_Accion_Explicacion,
	[Funcionalidad_Accion_Icono_Large] = @Funcionalidad_Accion_Icono_Large,
	[Funcionalidad_Accion_Icono_Small] = @Funcionalidad_Accion_Icono_Small,
	[Funcionalidad_Accion_Menu] = @Funcionalidad_Accion_Menu,
	[Funcionalidad_Accion_Permiso_Descripcion] = @Funcionalidad_Accion_Permiso_Descripcion,
	[Funcionalidad_Accion_Permiso_Necesita] = @Funcionalidad_Accion_Permiso_Necesita,
	[Funcionalidad_Accion_Tipo_Secuencia] = @Funcionalidad_Accion_Tipo_Secuencia,
	[Funcionalidad_Accion_Toolbar] = @Funcionalidad_Accion_Toolbar,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Numero] = @Funcionalidad_Accion_Numero



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Sistemas_Funcionalidades_Acciones_Cata]
(
	[Funcionalidad_Accion_Codigo],
	[Funcionalidad_Accion_Css],
	[Funcionalidad_Accion_Descripcion],
	[Funcionalidad_Accion_Explicacion],
	[Funcionalidad_Accion_Icono_Large],
	[Funcionalidad_Accion_Icono_Small],
	[Funcionalidad_Accion_Menu],
	[Funcionalidad_Accion_Permiso_Descripcion],
	[Funcionalidad_Accion_Permiso_Necesita],
	[Funcionalidad_Accion_Tipo_Secuencia],
	[Funcionalidad_Accion_Toolbar],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Funcionalidad_Accion_Codigo,
	@Funcionalidad_Accion_Css,
	@Funcionalidad_Accion_Descripcion,
	@Funcionalidad_Accion_Explicacion,
	@Funcionalidad_Accion_Icono_Large,
	@Funcionalidad_Accion_Icono_Small,
	@Funcionalidad_Accion_Menu,
	@Funcionalidad_Accion_Permiso_Descripcion,
	@Funcionalidad_Accion_Permiso_Necesita,
	@Funcionalidad_Accion_Tipo_Secuencia,
	@Funcionalidad_Accion_Toolbar,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Funcionalidad_Accion_Numero = SCOPE_IDENTITY() 
    SELECT DISTINCT @Funcionalidad_Accion_Numero AS 'Funcionalidad_Accion_Numero' 
        FROM [Sistemas_Funcionalidades_Acciones_Cata]
        WHERE ([Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Numero] = @Funcionalidad_Accion_Numero)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata_Borrar]
(
	@Funcionalidad_Accion_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Sistemas_Funcionalidades_Acciones_Trans] SET
     [Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Accion_Numero] = NULL
    WHERE     ([Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Accion_Numero] = @Funcionalidad_Accion_Numero)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Sistemas_Funcionalidades_Acciones_Cata]
    WHERE 
      ([Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Numero] = @Funcionalidad_Accion_Numero)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata]
(
	@Funcionalidad_Accion_Numero  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Numero],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Tipo_Secuencia],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Codigo],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Descripcion],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Explicacion],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Icono_Small],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Icono_Large],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Css],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Toolbar],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Menu],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Permiso_Descripcion],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Permiso_Necesita],
                [Sistemas_Funcionalidades_Acciones_Cata].[Registro_Estado],
                [Sistemas_Funcionalidades_Acciones_Cata].[Registro_Fecha],
                [Sistemas_Funcionalidades_Acciones_Cata].[Registro_Usuario]
    FROM [Sistemas_Funcionalidades_Acciones_Cata]
    WHERE 
     ( [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Numero] = @Funcionalidad_Accion_Numero)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Numero],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Tipo_Secuencia],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Codigo],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Descripcion],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Explicacion],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Icono_Small],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Icono_Large],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Css],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Toolbar],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Menu],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Permiso_Descripcion],
                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Permiso_Necesita],
                [Sistemas_Funcionalidades_Acciones_Cata].[Registro_Estado],
                [Sistemas_Funcionalidades_Acciones_Cata].[Registro_Fecha],
                [Sistemas_Funcionalidades_Acciones_Cata].[Registro_Usuario]
    FROM [Sistemas_Funcionalidades_Acciones_Cata]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata_FuncionalidadAccionCodigo]
(
	@Funcionalidad_Accion_Codigo  [VarChar]  (50)
,
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Numero],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Tipo_Secuencia],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Codigo],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Descripcion],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Explicacion],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Icono_Small],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Icono_Large],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Css],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Toolbar],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Menu],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Permiso_Descripcion],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Permiso_Necesita],
          [Sistemas_Funcionalidades_Acciones_Cata].[Registro_Estado],
          [Sistemas_Funcionalidades_Acciones_Cata].[Registro_Fecha],
          [Sistemas_Funcionalidades_Acciones_Cata].[Registro_Usuario]
    FROM [Sistemas_Funcionalidades_Acciones_Cata]
      WHERE
        ([Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Codigo] = @Funcionalidad_Accion_Codigo)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata_LoadFuncionalidad]
(
    @funcionalidadNumero [int] ,
		@PageIndex 		int = 1,
		@PageSize  		int = 1000000,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
SELECT 				ROW_NUMBER() OVER ( ORDER BY 		                [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Numero]
 ) AS [RowNumber],

          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Numero],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Tipo_Secuencia],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Codigo],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Descripcion],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Explicacion],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Icono_Small],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Icono_Large],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Css],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Toolbar],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Menu],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Permiso_Descripcion],
          [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Permiso_Necesita],
          [Sistemas_Funcionalidades_Acciones_Cata].[Registro_Estado],
          [Sistemas_Funcionalidades_Acciones_Cata].[Registro_Fecha],
          [Sistemas_Funcionalidades_Acciones_Cata].[Registro_Usuario]
    FROM [Sistemas_Funcionalidades_Acciones_Cata]
		LEFT OUTER JOIN [Sistemas_Funcionalidades_Acciones_Trans]
			On              [Sistemas_Funcionalidades_Acciones_Cata].[Funcionalidad_Accion_Numero] =  [Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Accion_Numero]
		LEFT OUTER JOIN [Sistemas_Funcionalidades_Master]
			On              [Sistemas_Funcionalidades_Master].[Funcionalidad_Numero] =  [Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Numero]
      WHERE Sistemas_Funcionalidades_Acciones_Cata.Registro_Estado = 'A'
      AND 
         [Sistemas_Funcionalidades_Master].[Funcionalidad_Numero] = @funcionalidadnumero
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Cata_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [sfac].[Funcionalidad_Accion_Numero]
 ) AS [RowNumber],
				   sfac.Funcionalidad_Accion_Numero , 
				   sfac.Funcionalidad_Accion_Tipo_Secuencia , 
				   sfac.Funcionalidad_Accion_Codigo , 
				   sfac.Funcionalidad_Accion_Descripcion , 
				   sfac.Funcionalidad_Accion_Explicacion , 
				   sfac.Funcionalidad_Accion_Icono_Small , 
				   sfac.Funcionalidad_Accion_Icono_Large , 
				   sfac.Funcionalidad_Accion_Css , 
				   sfac.Funcionalidad_Accion_Toolbar , 
				   sfac.Funcionalidad_Accion_Menu , 
				   sfac.Funcionalidad_Accion_Permiso_Descripcion , 
				   sfac.Funcionalidad_Accion_Permiso_Necesita , 
				   sfac.Registro_Estado , 
				   sfac.Registro_Fecha , 
				   sfac.Registro_Usuario
		FROM  [dbo].[Sistemas_Funcionalidades_Acciones_Cata]	As sfac	

		   WHERE sfac.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(sfac.Funcionalidad_Accion_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(sfac.Funcionalidad_Accion_Tipo_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfac.Funcionalidad_Accion_Codigo LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfac.Funcionalidad_Accion_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfac.Funcionalidad_Accion_Explicacion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfac.Funcionalidad_Accion_Icono_Small LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfac.Funcionalidad_Accion_Icono_Large LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfac.Funcionalidad_Accion_Css LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfac.Funcionalidad_Accion_Toolbar LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfac.Funcionalidad_Accion_Menu LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfac.Funcionalidad_Accion_Permiso_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfac.Funcionalidad_Accion_Permiso_Necesita LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfac.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(sfac.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfac.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Numero]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Accion_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Numero]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Accion_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Tipo_Secuencia]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Accion_Tipo_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Tipo_Secuencia]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Accion_Tipo_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Codigo]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Accion_Codigo]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Codigo]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Accion_Codigo]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Descripcion]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Accion_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Descripcion]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Accion_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Explicacion]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Accion_Explicacion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Explicacion]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Accion_Explicacion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Icono_Small]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Accion_Icono_Small]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Icono_Small]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Accion_Icono_Small]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Icono_Large]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Accion_Icono_Large]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Icono_Large]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Accion_Icono_Large]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Css]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Accion_Css]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Css]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Accion_Css]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Toolbar]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Accion_Toolbar]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Toolbar]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Accion_Toolbar]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Menu]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Accion_Menu]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Menu]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Accion_Menu]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Permiso_Descripcion]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Accion_Permiso_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Permiso_Descripcion]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Accion_Permiso_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Permiso_Necesita]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Accion_Permiso_Necesita]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Permiso_Necesita]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Accion_Permiso_Necesita]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Sistemas_Funcionalidades_Acciones_Tipo_Cata
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Acciones_Tipo_Cata_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Tipo_Cata_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Acciones_Tipo_Cata_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Tipo_Cata_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Acciones_Tipo_Cata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Tipo_Cata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Acciones_Tipo_Cata_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Tipo_Cata_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Acciones_Tipo_Cata_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Tipo_Cata_Paging]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Tipo_Cata_Editar]
(
	@Funcionalidad_Accion_Tipo_Descripcion  [VarChar]  (50),
	@Funcionalidad_Accion_Tipo_Explicacion  [VarChar]  (500),
	@Registro_Estado  [Char]  (1) = 'A',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (150),
	@Funcionalidad_Accion_Tipo_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Sistemas_Funcionalidades_Acciones_Tipo_Cata] 
SET
	[Funcionalidad_Accion_Tipo_Descripcion] = @Funcionalidad_Accion_Tipo_Descripcion,
	[Funcionalidad_Accion_Tipo_Explicacion] = @Funcionalidad_Accion_Tipo_Explicacion,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Sistemas_Funcionalidades_Acciones_Tipo_Cata].[Funcionalidad_Accion_Tipo_Secuencia] = @Funcionalidad_Accion_Tipo_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Sistemas_Funcionalidades_Acciones_Tipo_Cata]
(
	[Funcionalidad_Accion_Tipo_Descripcion],
	[Funcionalidad_Accion_Tipo_Explicacion],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Funcionalidad_Accion_Tipo_Descripcion,
	@Funcionalidad_Accion_Tipo_Explicacion,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Funcionalidad_Accion_Tipo_Secuencia = SCOPE_IDENTITY() 
    SELECT DISTINCT @Funcionalidad_Accion_Tipo_Secuencia AS 'Funcionalidad_Accion_Tipo_Secuencia' 
        FROM [Sistemas_Funcionalidades_Acciones_Tipo_Cata]
        WHERE ([Sistemas_Funcionalidades_Acciones_Tipo_Cata].[Funcionalidad_Accion_Tipo_Secuencia] = @Funcionalidad_Accion_Tipo_Secuencia)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Tipo_Cata_Borrar]
(
	@Funcionalidad_Accion_Tipo_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END


  DELETE FROM [Sistemas_Funcionalidades_Acciones_Tipo_Cata]
    WHERE 
      ([Sistemas_Funcionalidades_Acciones_Tipo_Cata].[Funcionalidad_Accion_Tipo_Secuencia] = @Funcionalidad_Accion_Tipo_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Tipo_Cata]
(
	@Funcionalidad_Accion_Tipo_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Sistemas_Funcionalidades_Acciones_Tipo_Cata].[Funcionalidad_Accion_Tipo_Secuencia],
                [Sistemas_Funcionalidades_Acciones_Tipo_Cata].[Funcionalidad_Accion_Tipo_Descripcion],
                [Sistemas_Funcionalidades_Acciones_Tipo_Cata].[Funcionalidad_Accion_Tipo_Explicacion],
                [Sistemas_Funcionalidades_Acciones_Tipo_Cata].[Registro_Estado],
                [Sistemas_Funcionalidades_Acciones_Tipo_Cata].[Registro_Fecha],
                [Sistemas_Funcionalidades_Acciones_Tipo_Cata].[Registro_Usuario]
    FROM [Sistemas_Funcionalidades_Acciones_Tipo_Cata]
    WHERE 
     ( [Sistemas_Funcionalidades_Acciones_Tipo_Cata].[Funcionalidad_Accion_Tipo_Secuencia] = @Funcionalidad_Accion_Tipo_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Tipo_Cata_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Sistemas_Funcionalidades_Acciones_Tipo_Cata].[Funcionalidad_Accion_Tipo_Secuencia],
                [Sistemas_Funcionalidades_Acciones_Tipo_Cata].[Funcionalidad_Accion_Tipo_Descripcion],
                [Sistemas_Funcionalidades_Acciones_Tipo_Cata].[Funcionalidad_Accion_Tipo_Explicacion],
                [Sistemas_Funcionalidades_Acciones_Tipo_Cata].[Registro_Estado],
                [Sistemas_Funcionalidades_Acciones_Tipo_Cata].[Registro_Fecha],
                [Sistemas_Funcionalidades_Acciones_Tipo_Cata].[Registro_Usuario]
    FROM [Sistemas_Funcionalidades_Acciones_Tipo_Cata]

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Tipo_Cata_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [sfatc].[Funcionalidad_Accion_Tipo_Secuencia]
 ) AS [RowNumber],
				   sfatc.Funcionalidad_Accion_Tipo_Secuencia , 
				   sfatc.Funcionalidad_Accion_Tipo_Descripcion , 
				   sfatc.Funcionalidad_Accion_Tipo_Explicacion , 
				   sfatc.Registro_Estado , 
				   sfatc.Registro_Fecha , 
				   sfatc.Registro_Usuario
		FROM  [dbo].[Sistemas_Funcionalidades_Acciones_Tipo_Cata]	As sfatc	

		   WHERE sfatc.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(sfatc.Funcionalidad_Accion_Tipo_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfatc.Funcionalidad_Accion_Tipo_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfatc.Funcionalidad_Accion_Tipo_Explicacion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfatc.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(sfatc.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfatc.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Tipo_Secuencia]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Accion_Tipo_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Tipo_Secuencia]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Accion_Tipo_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Tipo_Descripcion]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Accion_Tipo_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Tipo_Descripcion]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Accion_Tipo_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Tipo_Explicacion]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Accion_Tipo_Explicacion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Tipo_Explicacion]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Accion_Tipo_Explicacion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Sistemas_Funcionalidades_Acciones_Trans
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans_SistemasFuncionalidadesAccionesCata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans_SistemasFuncionalidadesAccionesCata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans_Funcionalidad]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans_Funcionalidad]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans_Editar]
(
	@Funcionalidad_Numero_Url  [Int]  = null,
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (150),
	@Funcionalidad_Accion_Numero  [Int] ,
	@Funcionalidad_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Sistemas_Funcionalidades_Acciones_Trans] 
SET
	[Funcionalidad_Numero_Url] = @Funcionalidad_Numero_Url,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Accion_Numero] = @Funcionalidad_Accion_Numero AND
	[dbo].[Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Numero] = @Funcionalidad_Numero



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Sistemas_Funcionalidades_Acciones_Trans]
(
	[Funcionalidad_Accion_Numero],
	[Funcionalidad_Numero],
	[Funcionalidad_Numero_Url],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Funcionalidad_Accion_Numero,
	@Funcionalidad_Numero,
	@Funcionalidad_Numero_Url,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans_Borrar]
(
	@Funcionalidad_Accion_Numero  [Int] ,
	@Funcionalidad_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Roles_Funcionalidad_Acciones_Trans] SET
     [Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Numero] = NULL,
     [Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Accion_Numero] = NULL
    WHERE     ([Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Numero] = @Funcionalidad_Numero)  And
    ([Roles_Funcionalidad_Acciones_Trans].[Funcionalidad_Accion_Numero] = @Funcionalidad_Accion_Numero)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Sistemas_Funcionalidades_Acciones_Trans]
    WHERE 
      ([Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Numero] = @Funcionalidad_Numero)
     AND       ([Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Accion_Numero] = @Funcionalidad_Accion_Numero)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans]
(
	@Funcionalidad_Accion_Numero  [Int] ,
	@Funcionalidad_Numero  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Numero],
                [Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Accion_Numero],
                [Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Numero_Url],
                [Sistemas_Funcionalidades_Acciones_Trans].[Registro_Estado],
                [Sistemas_Funcionalidades_Acciones_Trans].[Registro_Fecha],
                [Sistemas_Funcionalidades_Acciones_Trans].[Registro_Usuario]
    FROM [Sistemas_Funcionalidades_Acciones_Trans]
    WHERE 
     ( [Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Numero] = @Funcionalidad_Numero)
     AND      ( [Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Accion_Numero] = @Funcionalidad_Accion_Numero)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Numero],
                [Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Accion_Numero],
                [Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Numero_Url],
                [Sistemas_Funcionalidades_Acciones_Trans].[Registro_Estado],
                [Sistemas_Funcionalidades_Acciones_Trans].[Registro_Fecha],
                [Sistemas_Funcionalidades_Acciones_Trans].[Registro_Usuario]
    FROM [Sistemas_Funcionalidades_Acciones_Trans]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans_SistemasFuncionalidadesAccionesCata]
(
	@Funcionalidad_Accion_Numero  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Numero],
                [Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Accion_Numero],
                [Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Numero_Url],
                [Sistemas_Funcionalidades_Acciones_Trans].[Registro_Estado],
                [Sistemas_Funcionalidades_Acciones_Trans].[Registro_Fecha],
                [Sistemas_Funcionalidades_Acciones_Trans].[Registro_Usuario]
    FROM [Sistemas_Funcionalidades_Acciones_Trans]
      WHERE
        ([Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Accion_Numero] = @Funcionalidad_Accion_Numero)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans_Funcionalidad]
(
	@Funcionalidad_Numero  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Numero],
                [Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Accion_Numero],
                [Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Numero_Url],
                [Sistemas_Funcionalidades_Acciones_Trans].[Registro_Estado],
                [Sistemas_Funcionalidades_Acciones_Trans].[Registro_Fecha],
                [Sistemas_Funcionalidades_Acciones_Trans].[Registro_Usuario]
    FROM [Sistemas_Funcionalidades_Acciones_Trans]
      WHERE
        ([Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Numero] = @Funcionalidad_Numero)


RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Acciones_Trans_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [sfat].[Funcionalidad_Numero],
		                [sfat].[Funcionalidad_Accion_Numero]
 ) AS [RowNumber],
				   sfat.Funcionalidad_Numero , 
				   sfat.Funcionalidad_Accion_Numero , 
				   sfat.Funcionalidad_Numero_Url , 
				   sfat.Registro_Estado , 
				   sfat.Registro_Fecha , 
				   sfat.Registro_Usuario
		FROM  [dbo].[Sistemas_Funcionalidades_Acciones_Trans]	As sfat	
			 Inner Join Sistemas_Funcionalidades_Acciones_Cata As sfac
			   On  sfac.Funcionalidad_Accion_Numero = sfat.Funcionalidad_Accion_Numero
			 Inner Join Sistemas_Funcionalidades_Master As sfm
			   On  sfm.Funcionalidad_Numero = sfat.Funcionalidad_Numero

		   WHERE sfat.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(sfat.Funcionalidad_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(sfat.Funcionalidad_Accion_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(sfat.Funcionalidad_Numero_Url) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfat.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(sfat.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfat.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Numero]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Numero]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Numero]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Accion_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Accion_Numero]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Accion_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Numero_Url]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Numero_Url]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Numero_Url]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Numero_Url]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Sistemas_Funcionalidades_Master
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Master_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Master_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Master_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Master_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Master]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Master]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Master_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Master_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Master_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Master_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Master_SistemasModulosMaster]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Master_SistemasModulosMaster]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Master_ModuloNumero]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Master_ModuloNumero]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Master_FuncionalidadCodigo]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Master_FuncionalidadCodigo]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Funcionalidades_Master_Loadbymodulo]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Master_Loadbymodulo]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Master_Editar]
(
	@Funcionalidad_Codigo  [VarChar]  (150),
	@Funcionalidad_Descripcion  [VarChar]  (500),
	@Funcionalidad_Explicacion  [VarChar]  (8000),
	@Funcionalidad_Nombre  [VarChar]  (150),
	@Funcionalidad_Orden  [Int]  = 0,
	@Funcionalidad_Permiso_Descripcion  [VarChar]  (50) = null,
	@Funcionalidad_Url  [VarChar]  (150),
	@Modulo_Numero  [Int] ,
	@Registro_Estado  [Char]  (1) = 'A',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (150),
	@Funcionalidad_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Sistemas_Funcionalidades_Master] 
SET
	[Funcionalidad_Codigo] = @Funcionalidad_Codigo,
	[Funcionalidad_Descripcion] = @Funcionalidad_Descripcion,
	[Funcionalidad_Explicacion] = @Funcionalidad_Explicacion,
	[Funcionalidad_Nombre] = @Funcionalidad_Nombre,
	[Funcionalidad_Orden] = @Funcionalidad_Orden,
	[Funcionalidad_Permiso_Descripcion] = @Funcionalidad_Permiso_Descripcion,
	[Funcionalidad_Url] = @Funcionalidad_Url,
	[Modulo_Numero] = @Modulo_Numero,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Sistemas_Funcionalidades_Master].[Funcionalidad_Numero] = @Funcionalidad_Numero



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Sistemas_Funcionalidades_Master]
(
	[Funcionalidad_Codigo],
	[Funcionalidad_Descripcion],
	[Funcionalidad_Explicacion],
	[Funcionalidad_Nombre],
	[Funcionalidad_Orden],
	[Funcionalidad_Permiso_Descripcion],
	[Funcionalidad_Url],
	[Modulo_Numero],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Funcionalidad_Codigo,
	@Funcionalidad_Descripcion,
	@Funcionalidad_Explicacion,
	@Funcionalidad_Nombre,
	@Funcionalidad_Orden,
	@Funcionalidad_Permiso_Descripcion,
	@Funcionalidad_Url,
	@Modulo_Numero,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Funcionalidad_Numero = SCOPE_IDENTITY() 
    SELECT DISTINCT @Funcionalidad_Numero AS 'Funcionalidad_Numero' 
        FROM [Sistemas_Funcionalidades_Master]
        WHERE ([Sistemas_Funcionalidades_Master].[Funcionalidad_Numero] = @Funcionalidad_Numero)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Master_Borrar]
(
	@Funcionalidad_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Sistemas_Funcionalidades_Acciones_Trans] SET
     [Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Numero] = NULL
    WHERE     ([Sistemas_Funcionalidades_Acciones_Trans].[Funcionalidad_Numero] = @Funcionalidad_Numero)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Sistemas_Funcionalidades_Master]
    WHERE 
      ([Sistemas_Funcionalidades_Master].[Funcionalidad_Numero] = @Funcionalidad_Numero)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Master]
(
	@Funcionalidad_Numero  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Numero],
                [Sistemas_Funcionalidades_Master].[Modulo_Numero],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Codigo],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Nombre],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Descripcion],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Explicacion],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Url],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Permiso_Descripcion],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Orden],
                [Sistemas_Funcionalidades_Master].[Registro_Estado],
                [Sistemas_Funcionalidades_Master].[Registro_Fecha],
                [Sistemas_Funcionalidades_Master].[Registro_Usuario]
    FROM [Sistemas_Funcionalidades_Master]
    WHERE 
     ( [Sistemas_Funcionalidades_Master].[Funcionalidad_Numero] = @Funcionalidad_Numero)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Master_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Numero],
                [Sistemas_Funcionalidades_Master].[Modulo_Numero],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Codigo],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Nombre],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Descripcion],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Explicacion],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Url],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Permiso_Descripcion],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Orden],
                [Sistemas_Funcionalidades_Master].[Registro_Estado],
                [Sistemas_Funcionalidades_Master].[Registro_Fecha],
                [Sistemas_Funcionalidades_Master].[Registro_Usuario]
    FROM [Sistemas_Funcionalidades_Master]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Master_SistemasModulosMaster]
(
	@Modulo_Numero  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Numero],
                [Sistemas_Funcionalidades_Master].[Modulo_Numero],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Codigo],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Nombre],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Descripcion],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Explicacion],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Url],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Permiso_Descripcion],
                [Sistemas_Funcionalidades_Master].[Funcionalidad_Orden],
                [Sistemas_Funcionalidades_Master].[Registro_Estado],
                [Sistemas_Funcionalidades_Master].[Registro_Fecha],
                [Sistemas_Funcionalidades_Master].[Registro_Usuario]
    FROM [Sistemas_Funcionalidades_Master]
      WHERE
        ([Sistemas_Funcionalidades_Master].[Modulo_Numero] = @Modulo_Numero)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Master_ModuloNumero]
(
	@Modulo_Numero  [Int] 
,
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Numero],
          [Sistemas_Funcionalidades_Master].[Modulo_Numero],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Codigo],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Nombre],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Descripcion],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Explicacion],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Url],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Permiso_Descripcion],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Orden],
          [Sistemas_Funcionalidades_Master].[Registro_Estado],
          [Sistemas_Funcionalidades_Master].[Registro_Fecha],
          [Sistemas_Funcionalidades_Master].[Registro_Usuario]
    FROM [Sistemas_Funcionalidades_Master]
      WHERE
        ([Sistemas_Funcionalidades_Master].[Modulo_Numero] = @Modulo_Numero)

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Master_FuncionalidadCodigo]
(
	@Funcionalidad_Codigo  [VarChar]  (150)
,
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Numero],
          [Sistemas_Funcionalidades_Master].[Modulo_Numero],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Codigo],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Nombre],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Descripcion],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Explicacion],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Url],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Permiso_Descripcion],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Orden],
          [Sistemas_Funcionalidades_Master].[Registro_Estado],
          [Sistemas_Funcionalidades_Master].[Registro_Fecha],
          [Sistemas_Funcionalidades_Master].[Registro_Usuario]
    FROM [Sistemas_Funcionalidades_Master]
      WHERE
        ([Sistemas_Funcionalidades_Master].[Funcionalidad_Codigo] = @Funcionalidad_Codigo)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Master_Loadbymodulo]
(
    @Modulo_Numero [Int] ,
		@PageIndex 		int = 1,
		@PageSize  		int = 1000000,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
SELECT 				ROW_NUMBER() OVER ( ORDER BY 		                [Sistemas_Funcionalidades_Master].[Funcionalidad_Numero]
 ) AS [RowNumber],

          [Sistemas_Funcionalidades_Master].[Funcionalidad_Numero],
          [Sistemas_Funcionalidades_Master].[Modulo_Numero],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Codigo],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Nombre],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Descripcion],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Explicacion],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Url],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Permiso_Descripcion],
          [Sistemas_Funcionalidades_Master].[Funcionalidad_Orden],
          [Sistemas_Funcionalidades_Master].[Registro_Estado],
          [Sistemas_Funcionalidades_Master].[Registro_Fecha],
          [Sistemas_Funcionalidades_Master].[Registro_Usuario]
    FROM [Sistemas_Funcionalidades_Master]
      WHERE Sistemas_Funcionalidades_Master.Registro_Estado = 'A'
      AND 
         [Sistemas_Funcionalidades_Master].[Modulo_Numero] = @modulo_numero
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Sistemas_Funcionalidades_Master_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [sfm].[Funcionalidad_Numero]
 ) AS [RowNumber],
				   sfm.Funcionalidad_Numero , 
				   sfm.Modulo_Numero , 
				   sfm.Funcionalidad_Codigo , 
				   sfm.Funcionalidad_Nombre , 
				   sfm.Funcionalidad_Descripcion , 
				   sfm.Funcionalidad_Explicacion , 
				   sfm.Funcionalidad_Url , 
				   sfm.Funcionalidad_Permiso_Descripcion , 
				   sfm.Funcionalidad_Orden , 
				   sfm.Registro_Estado , 
				   sfm.Registro_Fecha , 
				   sfm.Registro_Usuario
		FROM  [dbo].[Sistemas_Funcionalidades_Master]	As sfm	
			 Inner Join Sistemas_Modulos_Master As smm
			   On  smm.Modulo_Numero = sfm.Modulo_Numero

		   WHERE sfm.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(sfm.Funcionalidad_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(sfm.Modulo_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfm.Funcionalidad_Codigo LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfm.Funcionalidad_Nombre LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfm.Funcionalidad_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfm.Funcionalidad_Explicacion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfm.Funcionalidad_Url LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfm.Funcionalidad_Permiso_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(sfm.Funcionalidad_Orden) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfm.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(sfm.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR sfm.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Numero]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Numero]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Modulo_Numero]' AND @_orderByDirection0 = 0 THEN [Modulo_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Modulo_Numero]' AND @_orderByDirection0 = 1 THEN [Modulo_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Codigo]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Codigo]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Codigo]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Codigo]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Nombre]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Nombre]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Nombre]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Nombre]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Descripcion]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Descripcion]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Explicacion]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Explicacion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Explicacion]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Explicacion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Url]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Url]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Url]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Url]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Permiso_Descripcion]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Permiso_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Permiso_Descripcion]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Permiso_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Orden]' AND @_orderByDirection0 = 0 THEN [Funcionalidad_Orden]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Funcionalidad_Orden]' AND @_orderByDirection0 = 1 THEN [Funcionalidad_Orden]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Sistemas_Mensaje_Trans
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Mensaje_Trans_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Mensaje_Trans_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Mensaje_Trans_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Mensaje_Trans_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Mensaje_Trans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Mensaje_Trans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Mensaje_Trans_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Mensaje_Trans_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Mensaje_Trans_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Mensaje_Trans_Paging]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Sistemas_Mensaje_Trans_Editar]
(
	@Mensaje_Descripcion  [VarChar]  (500),
	@Registro_Estado  [Char]  (1) = 'A',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (150),
	@Mensaje_Codigo  [VarChar]  (150)

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Sistemas_Mensaje_Trans] 
SET
	[Mensaje_Descripcion] = @Mensaje_Descripcion,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Sistemas_Mensaje_Trans].[Mensaje_Codigo] = @Mensaje_Codigo



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Sistemas_Mensaje_Trans]
(
	[Mensaje_Codigo],
	[Mensaje_Descripcion],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Mensaje_Codigo,
	@Mensaje_Descripcion,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Sistemas_Mensaje_Trans_Borrar]
(
	@Mensaje_Codigo  [VarChar]  (150)

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END


  DELETE FROM [Sistemas_Mensaje_Trans]
    WHERE 
      ([Sistemas_Mensaje_Trans].[Mensaje_Codigo] = @Mensaje_Codigo)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Sistemas_Mensaje_Trans]
(
	@Mensaje_Codigo  [VarChar]  (150)

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Sistemas_Mensaje_Trans].[Mensaje_Codigo],
                [Sistemas_Mensaje_Trans].[Mensaje_Descripcion],
                [Sistemas_Mensaje_Trans].[Registro_Estado],
                [Sistemas_Mensaje_Trans].[Registro_Fecha],
                [Sistemas_Mensaje_Trans].[Registro_Usuario]
    FROM [Sistemas_Mensaje_Trans]
    WHERE 
     ( [Sistemas_Mensaje_Trans].[Mensaje_Codigo] = @Mensaje_Codigo)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Sistemas_Mensaje_Trans_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Sistemas_Mensaje_Trans].[Mensaje_Codigo],
                [Sistemas_Mensaje_Trans].[Mensaje_Descripcion],
                [Sistemas_Mensaje_Trans].[Registro_Estado],
                [Sistemas_Mensaje_Trans].[Registro_Fecha],
                [Sistemas_Mensaje_Trans].[Registro_Usuario]
    FROM [Sistemas_Mensaje_Trans]

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Sistemas_Mensaje_Trans_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [smt].[Mensaje_Codigo]
 ) AS [RowNumber],
				   smt.Mensaje_Codigo , 
				   smt.Mensaje_Descripcion , 
				   smt.Registro_Estado , 
				   smt.Registro_Fecha , 
				   smt.Registro_Usuario
		FROM  [dbo].[Sistemas_Mensaje_Trans]	As smt	

		   WHERE smt.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR smt.Mensaje_Codigo LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR smt.Mensaje_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR smt.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(smt.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR smt.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Mensaje_Codigo]' AND @_orderByDirection0 = 0 THEN [Mensaje_Codigo]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Mensaje_Codigo]' AND @_orderByDirection0 = 1 THEN [Mensaje_Codigo]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Mensaje_Descripcion]' AND @_orderByDirection0 = 0 THEN [Mensaje_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Mensaje_Descripcion]' AND @_orderByDirection0 = 1 THEN [Mensaje_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Sistemas_Modulos_Master
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Modulos_Master_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Modulos_Master_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Modulos_Master_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Modulos_Master_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Modulos_Master]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Modulos_Master]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Modulos_Master_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Modulos_Master_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Modulos_Master_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Modulos_Master_Paging]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Sistemas_Modulos_Master_Editar]
(
	@Modulo_Descripcion  [VarChar]  (500),
	@Modulo_Explicacion  [VarChar]  (8000),
	@Modulo_Icon  [VarChar]  (150) = null,
	@Modulo_Nombre  [VarChar]  (150),
	@Modulo_Orden  [Int]  = 0,
	@Modulo_Permiso_Descripcion  [VarChar]  (50) = null,
	@Modulo_Url  [VarChar]  (150),
	@Registro_Estado  [Char]  (1) = 'A',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (150),
	@Modulo_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Sistemas_Modulos_Master] 
SET
	[Modulo_Descripcion] = @Modulo_Descripcion,
	[Modulo_Explicacion] = @Modulo_Explicacion,
	[Modulo_Icon] = @Modulo_Icon,
	[Modulo_Nombre] = @Modulo_Nombre,
	[Modulo_Orden] = @Modulo_Orden,
	[Modulo_Permiso_Descripcion] = @Modulo_Permiso_Descripcion,
	[Modulo_Url] = @Modulo_Url,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Sistemas_Modulos_Master].[Modulo_Numero] = @Modulo_Numero



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Sistemas_Modulos_Master]
(
	[Modulo_Descripcion],
	[Modulo_Explicacion],
	[Modulo_Icon],
	[Modulo_Nombre],
	[Modulo_Orden],
	[Modulo_Permiso_Descripcion],
	[Modulo_Url],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario]
)
VALUES
(
	@Modulo_Descripcion,
	@Modulo_Explicacion,
	@Modulo_Icon,
	@Modulo_Nombre,
	@Modulo_Orden,
	@Modulo_Permiso_Descripcion,
	@Modulo_Url,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Modulo_Numero = SCOPE_IDENTITY() 
    SELECT DISTINCT @Modulo_Numero AS 'Modulo_Numero' 
        FROM [Sistemas_Modulos_Master]
        WHERE ([Sistemas_Modulos_Master].[Modulo_Numero] = @Modulo_Numero)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Sistemas_Modulos_Master_Borrar]
(
	@Modulo_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Sistemas_Funcionalidades_Master] SET
     [Sistemas_Funcionalidades_Master].[Modulo_Numero] = NULL
    WHERE     ([Sistemas_Funcionalidades_Master].[Modulo_Numero] = @Modulo_Numero)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Sistemas_Modulos_Master]
    WHERE 
      ([Sistemas_Modulos_Master].[Modulo_Numero] = @Modulo_Numero)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Sistemas_Modulos_Master]
(
	@Modulo_Numero  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Sistemas_Modulos_Master].[Modulo_Numero],
                [Sistemas_Modulos_Master].[Modulo_Nombre],
                [Sistemas_Modulos_Master].[Modulo_Descripcion],
                [Sistemas_Modulos_Master].[Modulo_Explicacion],
                [Sistemas_Modulos_Master].[Modulo_Url],
                [Sistemas_Modulos_Master].[Modulo_Icon],
                [Sistemas_Modulos_Master].[Modulo_Permiso_Descripcion],
                [Sistemas_Modulos_Master].[Modulo_Orden],
                [Sistemas_Modulos_Master].[Registro_Estado],
                [Sistemas_Modulos_Master].[Registro_Fecha],
                [Sistemas_Modulos_Master].[Registro_Usuario]
    FROM [Sistemas_Modulos_Master]
    WHERE 
     ( [Sistemas_Modulos_Master].[Modulo_Numero] = @Modulo_Numero)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Sistemas_Modulos_Master_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Sistemas_Modulos_Master].[Modulo_Numero],
                [Sistemas_Modulos_Master].[Modulo_Nombre],
                [Sistemas_Modulos_Master].[Modulo_Descripcion],
                [Sistemas_Modulos_Master].[Modulo_Explicacion],
                [Sistemas_Modulos_Master].[Modulo_Url],
                [Sistemas_Modulos_Master].[Modulo_Icon],
                [Sistemas_Modulos_Master].[Modulo_Permiso_Descripcion],
                [Sistemas_Modulos_Master].[Modulo_Orden],
                [Sistemas_Modulos_Master].[Registro_Estado],
                [Sistemas_Modulos_Master].[Registro_Fecha],
                [Sistemas_Modulos_Master].[Registro_Usuario]
    FROM [Sistemas_Modulos_Master]

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Sistemas_Modulos_Master_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [smm].[Modulo_Numero]
 ) AS [RowNumber],
				   smm.Modulo_Numero , 
				   smm.Modulo_Nombre , 
				   smm.Modulo_Descripcion , 
				   smm.Modulo_Explicacion , 
				   smm.Modulo_Url , 
				   smm.Modulo_Icon , 
				   smm.Modulo_Permiso_Descripcion , 
				   smm.Modulo_Orden , 
				   smm.Registro_Estado , 
				   smm.Registro_Fecha , 
				   smm.Registro_Usuario
		FROM  [dbo].[Sistemas_Modulos_Master]	As smm	

		   WHERE smm.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(smm.Modulo_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR smm.Modulo_Nombre LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR smm.Modulo_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR smm.Modulo_Explicacion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR smm.Modulo_Url LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR smm.Modulo_Icon LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR smm.Modulo_Permiso_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(smm.Modulo_Orden) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR smm.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(smm.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR smm.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Modulo_Numero]' AND @_orderByDirection0 = 0 THEN [Modulo_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Modulo_Numero]' AND @_orderByDirection0 = 1 THEN [Modulo_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Modulo_Nombre]' AND @_orderByDirection0 = 0 THEN [Modulo_Nombre]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Modulo_Nombre]' AND @_orderByDirection0 = 1 THEN [Modulo_Nombre]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Modulo_Descripcion]' AND @_orderByDirection0 = 0 THEN [Modulo_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Modulo_Descripcion]' AND @_orderByDirection0 = 1 THEN [Modulo_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Modulo_Explicacion]' AND @_orderByDirection0 = 0 THEN [Modulo_Explicacion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Modulo_Explicacion]' AND @_orderByDirection0 = 1 THEN [Modulo_Explicacion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Modulo_Url]' AND @_orderByDirection0 = 0 THEN [Modulo_Url]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Modulo_Url]' AND @_orderByDirection0 = 1 THEN [Modulo_Url]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Modulo_Icon]' AND @_orderByDirection0 = 0 THEN [Modulo_Icon]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Modulo_Icon]' AND @_orderByDirection0 = 1 THEN [Modulo_Icon]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Modulo_Permiso_Descripcion]' AND @_orderByDirection0 = 0 THEN [Modulo_Permiso_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Modulo_Permiso_Descripcion]' AND @_orderByDirection0 = 1 THEN [Modulo_Permiso_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Modulo_Orden]' AND @_orderByDirection0 = 0 THEN [Modulo_Orden]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Modulo_Orden]' AND @_orderByDirection0 = 1 THEN [Modulo_Orden]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Sistemas_Slides_Master
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Slides_Master_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Slides_Master_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Slides_Master_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Slides_Master_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Slides_Master]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Slides_Master]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Slides_Master_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Slides_Master_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Sistemas_Slides_Master_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Sistemas_Slides_Master_Paging]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Sistemas_Slides_Master_Editar]
(
	@Registro_Estado  [Char]  (1) = 'A',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (150),
	@Slide_Contenido  [VarChar]  (5000),
	@Slide_Css  [VarChar]  (1500) = 'N',
	@Slide_Fijo  [Char]  (1) = 'N',
	@Slide_Image  [VarChar]  (250),
	@Slide_Image_Abajo  [VarChar]  (250) = 'N',
	@Slide_Image_Publicar  [Char]  (1) = 'N',
	@Slide_Vigencia_Desde  [DateTime] ,
	@Slide_Vigencia_Hasta  [DateTime] ,
	@Slide_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Sistemas_Slides_Master] 
SET
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario,
	[Slide_Contenido] = @Slide_Contenido,
	[Slide_Css] = @Slide_Css,
	[Slide_Fijo] = @Slide_Fijo,
	[Slide_Image] = @Slide_Image,
	[Slide_Image_Abajo] = @Slide_Image_Abajo,
	[Slide_Image_Publicar] = @Slide_Image_Publicar,
	[Slide_Vigencia_Desde] = @Slide_Vigencia_Desde,
	[Slide_Vigencia_Hasta] = @Slide_Vigencia_Hasta

WHERE
	[dbo].[Sistemas_Slides_Master].[Slide_Secuencia] = @Slide_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Sistemas_Slides_Master]
(
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Slide_Contenido],
	[Slide_Css],
	[Slide_Fijo],
	[Slide_Image],
	[Slide_Image_Abajo],
	[Slide_Image_Publicar],
	[Slide_Vigencia_Desde],
	[Slide_Vigencia_Hasta]
)
VALUES
(
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Slide_Contenido,
	@Slide_Css,
	@Slide_Fijo,
	@Slide_Image,
	@Slide_Image_Abajo,
	@Slide_Image_Publicar,
	@Slide_Vigencia_Desde,
	@Slide_Vigencia_Hasta
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Slide_Secuencia = SCOPE_IDENTITY() 
    SELECT DISTINCT @Slide_Secuencia AS 'Slide_Secuencia' 
        FROM [Sistemas_Slides_Master]
        WHERE ([Sistemas_Slides_Master].[Slide_Secuencia] = @Slide_Secuencia)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Sistemas_Slides_Master_Borrar]
(
	@Slide_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END


  DELETE FROM [Sistemas_Slides_Master]
    WHERE 
      ([Sistemas_Slides_Master].[Slide_Secuencia] = @Slide_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Sistemas_Slides_Master]
(
	@Slide_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Sistemas_Slides_Master].[Slide_Secuencia],
                [Sistemas_Slides_Master].[Slide_Image],
                [Sistemas_Slides_Master].[Slide_Contenido],
                [Sistemas_Slides_Master].[Slide_Vigencia_Desde],
                [Sistemas_Slides_Master].[Slide_Vigencia_Hasta],
                [Sistemas_Slides_Master].[Slide_Fijo],
                [Sistemas_Slides_Master].[Slide_Image_Abajo],
                [Sistemas_Slides_Master].[Slide_Css],
                [Sistemas_Slides_Master].[Slide_Image_Publicar],
                [Sistemas_Slides_Master].[Registro_Estado],
                [Sistemas_Slides_Master].[Registro_Fecha],
                [Sistemas_Slides_Master].[Registro_Usuario]
    FROM [Sistemas_Slides_Master]
    WHERE 
     ( [Sistemas_Slides_Master].[Slide_Secuencia] = @Slide_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Sistemas_Slides_Master_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Sistemas_Slides_Master].[Slide_Secuencia],
                [Sistemas_Slides_Master].[Slide_Image],
                [Sistemas_Slides_Master].[Slide_Contenido],
                [Sistemas_Slides_Master].[Slide_Vigencia_Desde],
                [Sistemas_Slides_Master].[Slide_Vigencia_Hasta],
                [Sistemas_Slides_Master].[Slide_Fijo],
                [Sistemas_Slides_Master].[Slide_Image_Abajo],
                [Sistemas_Slides_Master].[Slide_Css],
                [Sistemas_Slides_Master].[Slide_Image_Publicar],
                [Sistemas_Slides_Master].[Registro_Estado],
                [Sistemas_Slides_Master].[Registro_Fecha],
                [Sistemas_Slides_Master].[Registro_Usuario]
    FROM [Sistemas_Slides_Master]

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Sistemas_Slides_Master_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [ssm].[Slide_Secuencia]
 ) AS [RowNumber],
				   ssm.Slide_Secuencia , 
				   ssm.Slide_Image , 
				   ssm.Slide_Contenido , 
				   ssm.Slide_Vigencia_Desde , 
				   ssm.Slide_Vigencia_Hasta , 
				   ssm.Slide_Fijo , 
				   ssm.Slide_Image_Abajo , 
				   ssm.Slide_Css , 
				   ssm.Slide_Image_Publicar , 
				   ssm.Registro_Estado , 
				   ssm.Registro_Fecha , 
				   ssm.Registro_Usuario
		FROM  [dbo].[Sistemas_Slides_Master]	As ssm	

		   WHERE ssm.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(ssm.Slide_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ssm.Slide_Image LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ssm.Slide_Contenido LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(ssm.Slide_Vigencia_Desde) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(ssm.Slide_Vigencia_Hasta) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ssm.Slide_Fijo LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ssm.Slide_Image_Abajo LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ssm.Slide_Css LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ssm.Slide_Image_Publicar LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ssm.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(ssm.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR ssm.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Slide_Secuencia]' AND @_orderByDirection0 = 0 THEN [Slide_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Slide_Secuencia]' AND @_orderByDirection0 = 1 THEN [Slide_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Slide_Image]' AND @_orderByDirection0 = 0 THEN [Slide_Image]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Slide_Image]' AND @_orderByDirection0 = 1 THEN [Slide_Image]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Slide_Contenido]' AND @_orderByDirection0 = 0 THEN [Slide_Contenido]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Slide_Contenido]' AND @_orderByDirection0 = 1 THEN [Slide_Contenido]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Slide_Vigencia_Desde]' AND @_orderByDirection0 = 0 THEN [Slide_Vigencia_Desde]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Slide_Vigencia_Desde]' AND @_orderByDirection0 = 1 THEN [Slide_Vigencia_Desde]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Slide_Vigencia_Hasta]' AND @_orderByDirection0 = 0 THEN [Slide_Vigencia_Hasta]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Slide_Vigencia_Hasta]' AND @_orderByDirection0 = 1 THEN [Slide_Vigencia_Hasta]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Slide_Fijo]' AND @_orderByDirection0 = 0 THEN [Slide_Fijo]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Slide_Fijo]' AND @_orderByDirection0 = 1 THEN [Slide_Fijo]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Slide_Image_Abajo]' AND @_orderByDirection0 = 0 THEN [Slide_Image_Abajo]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Slide_Image_Abajo]' AND @_orderByDirection0 = 1 THEN [Slide_Image_Abajo]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Slide_Css]' AND @_orderByDirection0 = 0 THEN [Slide_Css]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Slide_Css]' AND @_orderByDirection0 = 1 THEN [Slide_Css]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Slide_Image_Publicar]' AND @_orderByDirection0 = 0 THEN [Slide_Image_Publicar]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Slide_Image_Publicar]' AND @_orderByDirection0 = 1 THEN [Slide_Image_Publicar]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Turnos_Dias_Trans
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Turnos_Dias_Trans_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Turnos_Dias_Trans_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Turnos_Dias_Trans_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Turnos_Dias_Trans_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Turnos_Dias_Trans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Turnos_Dias_Trans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Turnos_Dias_Trans_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Turnos_Dias_Trans_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Turnos_Dias_Trans_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Turnos_Dias_Trans_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Turnos_Dias_Trans_DiasCata]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Turnos_Dias_Trans_DiasCata]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Turnos_Dias_Trans_TurnosMaster]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Turnos_Dias_Trans_TurnosMaster]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Turnos_Dias_Trans_DeleteTurnos]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Turnos_Dias_Trans_DeleteTurnos]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Turnos_Dias_Trans_Editar]
(
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Dia_Secuencia  [Int] ,
	@Turno_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Turnos_Dias_Trans] 
SET
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Turnos_Dias_Trans].[Dia_Secuencia] = @Dia_Secuencia AND
	[dbo].[Turnos_Dias_Trans].[Turno_Numero] = @Turno_Numero



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Turnos_Dias_Trans]
(
	[Dia_Secuencia],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Turno_Numero]
)
VALUES
(
	@Dia_Secuencia,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Turno_Numero
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Turnos_Dias_Trans_Borrar]
(
	@Dia_Secuencia  [Int] ,
	@Turno_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END


  DELETE FROM [Turnos_Dias_Trans]
    WHERE 
      ([Turnos_Dias_Trans].[Turno_Numero] = @Turno_Numero)
     AND       ([Turnos_Dias_Trans].[Dia_Secuencia] = @Dia_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Turnos_Dias_Trans]
(
	@Dia_Secuencia  [Int] ,
	@Turno_Numero  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Turnos_Dias_Trans].[Turno_Numero],
                [Turnos_Dias_Trans].[Dia_Secuencia],
                [Turnos_Dias_Trans].[Registro_Estado],
                [Turnos_Dias_Trans].[Registro_Fecha],
                [Turnos_Dias_Trans].[Registro_Usuario]
    FROM [Turnos_Dias_Trans]
    WHERE 
     ( [Turnos_Dias_Trans].[Turno_Numero] = @Turno_Numero)
     AND      ( [Turnos_Dias_Trans].[Dia_Secuencia] = @Dia_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Turnos_Dias_Trans_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Turnos_Dias_Trans].[Turno_Numero],
                [Turnos_Dias_Trans].[Dia_Secuencia],
                [Turnos_Dias_Trans].[Registro_Estado],
                [Turnos_Dias_Trans].[Registro_Fecha],
                [Turnos_Dias_Trans].[Registro_Usuario]
    FROM [Turnos_Dias_Trans]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Turnos_Dias_Trans_DiasCata]
(
	@Dia_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Turnos_Dias_Trans].[Turno_Numero],
                [Turnos_Dias_Trans].[Dia_Secuencia],
                [Turnos_Dias_Trans].[Registro_Estado],
                [Turnos_Dias_Trans].[Registro_Fecha],
                [Turnos_Dias_Trans].[Registro_Usuario]
    FROM [Turnos_Dias_Trans]
      WHERE
        ([Turnos_Dias_Trans].[Dia_Secuencia] = @Dia_Secuencia)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Turnos_Dias_Trans_TurnosMaster]
(
	@Turno_Numero  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Turnos_Dias_Trans].[Turno_Numero],
                [Turnos_Dias_Trans].[Dia_Secuencia],
                [Turnos_Dias_Trans].[Registro_Estado],
                [Turnos_Dias_Trans].[Registro_Fecha],
                [Turnos_Dias_Trans].[Registro_Usuario]
    FROM [Turnos_Dias_Trans]
      WHERE
        ([Turnos_Dias_Trans].[Turno_Numero] = @Turno_Numero)


RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Turnos_Dias_Trans_DeleteTurnos]
(
    @Turno_Numero [Int] 
)
AS

SET NOCOUNT ON
DELETE
    FROM [Turnos_Dias_Trans]
      WHERE Turnos_Dias_Trans.Registro_Estado = 'A'
      AND 
         [Turnos_Dias_Trans].[Turno_Numero] = @turno_numero

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Turnos_Dias_Trans_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [tdt].[Turno_Numero],
		                [tdt].[Dia_Secuencia]
 ) AS [RowNumber],
				   tdt.Turno_Numero , 
				   tdt.Dia_Secuencia , 
				   tdt.Registro_Estado , 
				   tdt.Registro_Fecha , 
				   tdt.Registro_Usuario
		FROM  [dbo].[Turnos_Dias_Trans]	As tdt	
			 Inner Join Dias_Cata As dc
			   On  dc.Dia_Secuencia = tdt.Dia_Secuencia
			 Inner Join Turnos_Master As tm
			   On  tm.Turno_Numero = tdt.Turno_Numero

		   WHERE tdt.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(tdt.Turno_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(tdt.Dia_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR tdt.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(tdt.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR tdt.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Turno_Numero]' AND @_orderByDirection0 = 0 THEN [Turno_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Turno_Numero]' AND @_orderByDirection0 = 1 THEN [Turno_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Dia_Secuencia]' AND @_orderByDirection0 = 0 THEN [Dia_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Dia_Secuencia]' AND @_orderByDirection0 = 1 THEN [Dia_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Turnos_Master
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Turnos_Master_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Turnos_Master_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Turnos_Master_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Turnos_Master_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Turnos_Master]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Turnos_Master]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Turnos_Master_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Turnos_Master_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Turnos_Master_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Turnos_Master_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Turnos_Master_HorariosMaster]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Turnos_Master_HorariosMaster]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Turnos_Master_Editar]
(
	@Horario_Numero  [Int] ,
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Turno_Cantidad_Publicadores  [Int]  = 0,
	@Turno_Descripcion  [VarChar]  (50),
	@Turno_Hora_Desde  [VarChar]  (50),
	@Turno_Hora_Hasta  [VarChar]  (50),
	@Turno_Minutos_Cantidad  [Int] ,
	@Turno_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Turnos_Master] 
SET
	[Horario_Numero] = @Horario_Numero,
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario,
	[Turno_Cantidad_Publicadores] = @Turno_Cantidad_Publicadores,
	[Turno_Descripcion] = @Turno_Descripcion,
	[Turno_Hora_Desde] = @Turno_Hora_Desde,
	[Turno_Hora_Hasta] = @Turno_Hora_Hasta,
	[Turno_Minutos_Cantidad] = @Turno_Minutos_Cantidad

WHERE
	[dbo].[Turnos_Master].[Turno_Numero] = @Turno_Numero



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Turnos_Master]
(
	[Horario_Numero],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Turno_Cantidad_Publicadores],
	[Turno_Descripcion],
	[Turno_Hora_Desde],
	[Turno_Hora_Hasta],
	[Turno_Minutos_Cantidad]
)
VALUES
(
	@Horario_Numero,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Turno_Cantidad_Publicadores,
	@Turno_Descripcion,
	@Turno_Hora_Desde,
	@Turno_Hora_Hasta,
	@Turno_Minutos_Cantidad
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Turno_Numero = SCOPE_IDENTITY() 
    SELECT DISTINCT @Turno_Numero AS 'Turno_Numero' 
        FROM [Turnos_Master]
        WHERE ([Turnos_Master].[Turno_Numero] = @Turno_Numero)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Turnos_Master_Borrar]
(
	@Turno_Numero  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Turnos_Dias_Trans] SET
     [Turnos_Dias_Trans].[Turno_Numero] = NULL
    WHERE     ([Turnos_Dias_Trans].[Turno_Numero] = @Turno_Numero)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Turnos_Master]
    WHERE 
      ([Turnos_Master].[Turno_Numero] = @Turno_Numero)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Turnos_Master]
(
	@Turno_Numero  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Turnos_Master].[Turno_Numero],
                [Turnos_Master].[Horario_Numero],
                [Turnos_Master].[Turno_Descripcion],
                [Turnos_Master].[Turno_Hora_Desde],
                [Turnos_Master].[Turno_Hora_Hasta],
                [Turnos_Master].[Turno_Minutos_Cantidad],
                [Turnos_Master].[Turno_Cantidad_Publicadores],
                [Turnos_Master].[Registro_Estado],
                [Turnos_Master].[Registro_Fecha],
                [Turnos_Master].[Registro_Usuario]
    FROM [Turnos_Master]
    WHERE 
     ( [Turnos_Master].[Turno_Numero] = @Turno_Numero)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Turnos_Master_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Turnos_Master].[Turno_Numero],
                [Turnos_Master].[Horario_Numero],
                [Turnos_Master].[Turno_Descripcion],
                [Turnos_Master].[Turno_Hora_Desde],
                [Turnos_Master].[Turno_Hora_Hasta],
                [Turnos_Master].[Turno_Minutos_Cantidad],
                [Turnos_Master].[Turno_Cantidad_Publicadores],
                [Turnos_Master].[Registro_Estado],
                [Turnos_Master].[Registro_Fecha],
                [Turnos_Master].[Registro_Usuario]
    FROM [Turnos_Master]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Turnos_Master_HorariosMaster]
(
	@Horario_Numero  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Turnos_Master].[Turno_Numero],
                [Turnos_Master].[Horario_Numero],
                [Turnos_Master].[Turno_Descripcion],
                [Turnos_Master].[Turno_Hora_Desde],
                [Turnos_Master].[Turno_Hora_Hasta],
                [Turnos_Master].[Turno_Minutos_Cantidad],
                [Turnos_Master].[Turno_Cantidad_Publicadores],
                [Turnos_Master].[Registro_Estado],
                [Turnos_Master].[Registro_Fecha],
                [Turnos_Master].[Registro_Usuario]
    FROM [Turnos_Master]
      WHERE
        ([Turnos_Master].[Horario_Numero] = @Horario_Numero)


RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Turnos_Master_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [tm].[Turno_Numero]
 ) AS [RowNumber],
				   tm.Turno_Numero , 
				   tm.Horario_Numero , 
				   tm.Turno_Descripcion , 
				   tm.Turno_Hora_Desde , 
				   tm.Turno_Hora_Hasta , 
				   tm.Turno_Minutos_Cantidad , 
				   tm.Turno_Cantidad_Publicadores , 
				   tm.Registro_Estado , 
				   tm.Registro_Fecha , 
				   tm.Registro_Usuario
		FROM  [dbo].[Turnos_Master]	As tm	
			 Inner Join Horarios_Master As hm
			   On  hm.Horario_Numero = tm.Horario_Numero

		   WHERE tm.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(tm.Turno_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(tm.Horario_Numero) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR tm.Turno_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR tm.Turno_Hora_Desde LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR tm.Turno_Hora_Hasta LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(tm.Turno_Minutos_Cantidad) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(tm.Turno_Cantidad_Publicadores) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR tm.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(tm.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR tm.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Turno_Numero]' AND @_orderByDirection0 = 0 THEN [Turno_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Turno_Numero]' AND @_orderByDirection0 = 1 THEN [Turno_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Horario_Numero]' AND @_orderByDirection0 = 0 THEN [Horario_Numero]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Horario_Numero]' AND @_orderByDirection0 = 1 THEN [Horario_Numero]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Turno_Descripcion]' AND @_orderByDirection0 = 0 THEN [Turno_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Turno_Descripcion]' AND @_orderByDirection0 = 1 THEN [Turno_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Turno_Hora_Desde]' AND @_orderByDirection0 = 0 THEN [Turno_Hora_Desde]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Turno_Hora_Desde]' AND @_orderByDirection0 = 1 THEN [Turno_Hora_Desde]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Turno_Hora_Hasta]' AND @_orderByDirection0 = 0 THEN [Turno_Hora_Hasta]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Turno_Hora_Hasta]' AND @_orderByDirection0 = 1 THEN [Turno_Hora_Hasta]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Turno_Minutos_Cantidad]' AND @_orderByDirection0 = 0 THEN [Turno_Minutos_Cantidad]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Turno_Minutos_Cantidad]' AND @_orderByDirection0 = 1 THEN [Turno_Minutos_Cantidad]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Turno_Cantidad_Publicadores]' AND @_orderByDirection0 = 0 THEN [Turno_Cantidad_Publicadores]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Turno_Cantidad_Publicadores]' AND @_orderByDirection0 = 1 THEN [Turno_Cantidad_Publicadores]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Zonas_Encargados_Trans
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Zonas_Encargados_Trans_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Zonas_Encargados_Trans_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Zonas_Encargados_Trans_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Zonas_Encargados_Trans_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Zonas_Encargados_Trans]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Zonas_Encargados_Trans]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Zonas_Encargados_Trans_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Zonas_Encargados_Trans_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Zonas_Encargados_Trans_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Zonas_Encargados_Trans_Paging]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Zonas_Encargados_Trans_Persona]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Zonas_Encargados_Trans_Persona]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Zonas_Encargados_Trans_Zona]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Zonas_Encargados_Trans_Zona]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Zonas_Encargados_Trans_Editar]
(
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Persona_Secuencia  [Int] ,
	@Zona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Zonas_Encargados_Trans] 
SET
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario

WHERE
	[dbo].[Zonas_Encargados_Trans].[Persona_Secuencia] = @Persona_Secuencia AND
	[dbo].[Zonas_Encargados_Trans].[Zona_Secuencia] = @Zona_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Zonas_Encargados_Trans]
(
	[Persona_Secuencia],
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Zona_Secuencia]
)
VALUES
(
	@Persona_Secuencia,
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Zona_Secuencia
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Zonas_Encargados_Trans_Borrar]
(
	@Persona_Secuencia  [Int] ,
	@Zona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END


  DELETE FROM [Zonas_Encargados_Trans]
    WHERE 
      ([Zonas_Encargados_Trans].[Persona_Secuencia] = @Persona_Secuencia)
     AND       ([Zonas_Encargados_Trans].[Zona_Secuencia] = @Zona_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Zonas_Encargados_Trans]
(
	@Persona_Secuencia  [Int] ,
	@Zona_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Zonas_Encargados_Trans].[Persona_Secuencia],
                [Zonas_Encargados_Trans].[Zona_Secuencia],
                [Zonas_Encargados_Trans].[Registro_Estado],
                [Zonas_Encargados_Trans].[Registro_Fecha],
                [Zonas_Encargados_Trans].[Registro_Usuario]
    FROM [Zonas_Encargados_Trans]
    WHERE 
     ( [Zonas_Encargados_Trans].[Persona_Secuencia] = @Persona_Secuencia)
     AND      ( [Zonas_Encargados_Trans].[Zona_Secuencia] = @Zona_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Zonas_Encargados_Trans_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Zonas_Encargados_Trans].[Persona_Secuencia],
                [Zonas_Encargados_Trans].[Zona_Secuencia],
                [Zonas_Encargados_Trans].[Registro_Estado],
                [Zonas_Encargados_Trans].[Registro_Fecha],
                [Zonas_Encargados_Trans].[Registro_Usuario]
    FROM [Zonas_Encargados_Trans]

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Zonas_Encargados_Trans_Persona]
(
	@Persona_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Zonas_Encargados_Trans].[Persona_Secuencia],
                [Zonas_Encargados_Trans].[Zona_Secuencia],
                [Zonas_Encargados_Trans].[Registro_Estado],
                [Zonas_Encargados_Trans].[Registro_Fecha],
                [Zonas_Encargados_Trans].[Registro_Usuario]
    FROM [Zonas_Encargados_Trans]
      WHERE
        ([Zonas_Encargados_Trans].[Persona_Secuencia] = @Persona_Secuencia)


RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Zonas_Encargados_Trans_Zona]
(
	@Zona_Secuencia  [Int] ,

   @_orderBy0 [nvarchar] (64) = NULL,
   @_orderByDirection0 [bit] = 0
)
AS

SET NOCOUNT ON
SELECT 
                [Zonas_Encargados_Trans].[Persona_Secuencia],
                [Zonas_Encargados_Trans].[Zona_Secuencia],
                [Zonas_Encargados_Trans].[Registro_Estado],
                [Zonas_Encargados_Trans].[Registro_Fecha],
                [Zonas_Encargados_Trans].[Registro_Usuario]
    FROM [Zonas_Encargados_Trans]
      WHERE
        ([Zonas_Encargados_Trans].[Zona_Secuencia] = @Zona_Secuencia)


RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Zonas_Encargados_Trans_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [zet].[Persona_Secuencia],
		                [zet].[Zona_Secuencia]
 ) AS [RowNumber],
				   zet.Persona_Secuencia , 
				   zet.Zona_Secuencia , 
				   zet.Registro_Estado , 
				   zet.Registro_Fecha , 
				   zet.Registro_Usuario
		FROM  [dbo].[Zonas_Encargados_Trans]	As zet	
			 Inner Join Personas_Master As pm
			   On  pm.Persona_Secuencia = zet.Persona_Secuencia
			 Inner Join Zonas_Master As zm
			   On  zm.Zona_Secuencia = zet.Zona_Secuencia

		   WHERE zet.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(zet.Persona_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(zet.Zona_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR zet.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(zet.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR zet.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 0 THEN [Persona_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Persona_Secuencia]' AND @_orderByDirection0 = 1 THEN [Persona_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Zona_Secuencia]' AND @_orderByDirection0 = 0 THEN [Zona_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Zona_Secuencia]' AND @_orderByDirection0 = 1 THEN [Zona_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
----                         Zonas_Master
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-- DELETE PROCEDURE

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Zonas_Master_Borrar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Zonas_Master_Borrar]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Zonas_Master_Editar]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Zonas_Master_Editar]
GO


IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Zonas_Master]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Zonas_Master]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Zonas_Master_LoadAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Zonas_Master_LoadAll]
GO

IF EXISTS (SELECT * FROM [dbo].[sysobjects] WHERE id = object_id(N'[dbo].[Proc_Zonas_Master_Paging]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Proc_Zonas_Master_Paging]
GO

-- EDIT PROCEDURE

CREATE PROCEDURE [dbo].[Proc_Zonas_Master_Editar]
(
	@Registro_Estado  [Char]  (1) = ' ',
	@Registro_Fecha  [DateTime] ,
	@Registro_Usuario  [VarChar]  (50),
	@Zona_Descripcion  [VarChar]  (150),
	@Zona_Nota  [VarChar]  (500),
	@Zona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END
UPDATE 
	[dbo].[Zonas_Master] 
SET
	[Registro_Estado] = @Registro_Estado,
	[Registro_Fecha] = @Registro_Fecha,
	[Registro_Usuario] = @Registro_Usuario,
	[Zona_Descripcion] = @Zona_Descripcion,
	[Zona_Nota] = @Zona_Nota

WHERE
	[dbo].[Zonas_Master].[Zona_Secuencia] = @Zona_Secuencia



SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF(@error != 0)
BEGIN
    IF @tran = 1 ROLLBACK TRANSACTION
    RETURN
END
IF(@rowcount = 0)
BEGIN
INSERT INTO [dbo].[Zonas_Master]
(
	[Registro_Estado],
	[Registro_Fecha],
	[Registro_Usuario],
	[Zona_Descripcion],
	[Zona_Nota]
)
VALUES
(
	@Registro_Estado,
	@Registro_Fecha,
	@Registro_Usuario,
	@Zona_Descripcion,
	@Zona_Nota
);




    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
    IF(@error != 0)
    BEGIN
        IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
    END
    SELECT DISTINCT @Zona_Secuencia = SCOPE_IDENTITY() 
    SELECT DISTINCT @Zona_Secuencia AS 'Zona_Secuencia' 
        FROM [Zonas_Master]
        WHERE ([Zonas_Master].[Zona_Secuencia] = @Zona_Secuencia)
END
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO
/********EN COMENTARIO POR QUE NUNCA SE DEBE BORRAR DATOS***************/
CREATE PROCEDURE [dbo].[Proc_Zonas_Master_Borrar]
(
	@Zona_Secuencia  [Int] 

)

AS
SET NOCOUNT ON
DECLARE @error int, @rowcount int
DECLARE @tran bit; SELECT @tran = 0
IF @@TRANCOUNT = 0
BEGIN
 SELECT @tran = 1
 BEGIN TRANSACTION
END

    UPDATE [Rutas_Master] SET
     [Rutas_Master].[Zona_Secuencia] = NULL
    WHERE     ([Rutas_Master].[Zona_Secuencia] = @Zona_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Zonas_Encargados_Trans] SET
     [Zonas_Encargados_Trans].[Zona_Secuencia] = NULL
    WHERE     ([Zonas_Encargados_Trans].[Zona_Secuencia] = @Zona_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Congregaciones_Master] SET
     [Congregaciones_Master].[Zona_Secuencia] = NULL
    WHERE     ([Congregaciones_Master].[Zona_Secuencia] = @Zona_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Notificaciones_Objetivo_Trans] SET
     [Notificaciones_Objetivo_Trans].[Zona_Secuencia] = NULL
    WHERE     ([Notificaciones_Objetivo_Trans].[Zona_Secuencia] = @Zona_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END

    UPDATE [Documentos_Objetivos_Trans] SET
     [Documentos_Objetivos_Trans].[Zona_Secuencia] = NULL
    WHERE     ([Documentos_Objetivos_Trans].[Zona_Secuencia] = @Zona_Secuencia)

    SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT

    IF(@error != 0)
      BEGIN
       IF @tran = 1 ROLLBACK TRANSACTION
        RETURN
      END


  DELETE FROM [Zonas_Master]
    WHERE 
      ([Zonas_Master].[Zona_Secuencia] = @Zona_Secuencia)
SELECT @error = @@ERROR, @rowcount = @@ROWCOUNT
IF @tran = 1 COMMIT TRANSACTION

RETURN
GO

CREATE PROCEDURE [dbo].[Proc_Zonas_Master]
(
	@Zona_Secuencia  [Int] 

)
AS
SET NOCOUNT ON
SELECT DISTINCT 
                [Zonas_Master].[Zona_Secuencia],
                [Zonas_Master].[Zona_Descripcion],
                [Zonas_Master].[Zona_Nota],
                [Zonas_Master].[Registro_Estado],
                [Zonas_Master].[Registro_Fecha],
                [Zonas_Master].[Registro_Usuario]
    FROM [Zonas_Master]
    WHERE 
     ( [Zonas_Master].[Zona_Secuencia] = @Zona_Secuencia)

RETURN
GO


CREATE PROCEDURE [dbo].[Proc_Zonas_Master_LoadAll]
(
 @_orderBy0 [nvarchar] (64) = NULL,
 @_orderByDirection0 [bit] = 0
)
AS
SET NOCOUNT ON
SELECT 
                [Zonas_Master].[Zona_Secuencia],
                [Zonas_Master].[Zona_Descripcion],
                [Zonas_Master].[Zona_Nota],
                [Zonas_Master].[Registro_Estado],
                [Zonas_Master].[Registro_Fecha],
                [Zonas_Master].[Registro_Usuario]
    FROM [Zonas_Master]

RETURN
GO



CREATE PROCEDURE [dbo].[Proc_Zonas_Master_Paging]

	@PageIndex 		int,
	@PageSize  		int,
	@SearchString 	varchar (50) = NULL,
    @_orderBy0 [nvarchar] (120) = NULL,
    @_orderByDirection0 [bit] = 0
AS

SET NOCOUNT ON;

DECLARE @StartIndex INT, @EndIndex INT

SET   @PageIndex = @PageIndex - 1
SET   @StartIndex = (@PageIndex * @PageSize) + 1
SET   @EndIndex = @StartIndex + @PageSize - 1



;WITH PagingTable AS
(
		SELECT  
				ROW_NUMBER() OVER ( ORDER BY 		                [zm].[Zona_Secuencia]
 ) AS [RowNumber],
				   zm.Zona_Secuencia , 
				   zm.Zona_Descripcion , 
				   zm.Zona_Nota , 
				   zm.Registro_Estado , 
				   zm.Registro_Fecha , 
				   zm.Registro_Usuario
		FROM  [dbo].[Zonas_Master]	As zm	

		   WHERE zm.Registro_Estado = 'A' And (
				   (@SearchString Is Null OR LTRIM(zm.Zona_Secuencia) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR zm.Zona_Descripcion LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR zm.Zona_Nota LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR zm.Registro_Estado LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR LTRIM(zm.Registro_Fecha) LIKE '%' + @SearchString + '%') OR 
				   (@SearchString Is Null OR zm.Registro_Usuario LIKE '%' + @SearchString + '%'))
		
)


, TotalRow AS
(
    SELECT COUNT(*) TotalRowCount FROM PagingTable
)



SELECT * FROM TotalRow, PagingTable
	WHERE RowNumber Between @StartIndex AND @EndIndex
    ORDER BY      CASE
          WHEN @_orderBy0 = '[Zona_Secuencia]' AND @_orderByDirection0 = 0 THEN [Zona_Secuencia]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Zona_Secuencia]' AND @_orderByDirection0 = 1 THEN [Zona_Secuencia]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Zona_Descripcion]' AND @_orderByDirection0 = 0 THEN [Zona_Descripcion]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Zona_Descripcion]' AND @_orderByDirection0 = 1 THEN [Zona_Descripcion]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Zona_Nota]' AND @_orderByDirection0 = 0 THEN [Zona_Nota]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Zona_Nota]' AND @_orderByDirection0 = 1 THEN [Zona_Nota]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 0 THEN [Registro_Estado]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Estado]' AND @_orderByDirection0 = 1 THEN [Registro_Estado]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 0 THEN [Registro_Fecha]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Fecha]' AND @_orderByDirection0 = 1 THEN [Registro_Fecha]
      END DESC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 0 THEN [Registro_Usuario]
      END ASC,
      CASE
          WHEN @_orderBy0 = '[Registro_Usuario]' AND @_orderByDirection0 = 1 THEN [Registro_Usuario]
      END DESC
GO


