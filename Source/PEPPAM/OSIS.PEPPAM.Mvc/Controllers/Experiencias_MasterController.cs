//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 5/18/2014 2:19:14 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.Web.UI;
using System.Web.UI.WebControls.WebParts;
using CodeFluent.Runtime;
using OSIS.PEPPAM.Mvc.Extensions.ActionResults;
using OSIS.PEPPAM.Mvc.Extensions.Controllers;
using OSIS.PEPPAM.Mvc.Models;
using OSIS.PEPPAM.Mvc.Models.Shared;

namespace OSIS.PEPPAM.Mvc.Controllers
{
	public partial class Experiencias_MasterController : Experiencias_MasterControllerBase
	{

        [HttpPost]
        public override ActionResult Load(GridRequestViewModel gridRequest)
        {
            OrderByArgumentCollection orderByArguments = new OrderByArgumentCollection();
            orderByArguments.Add("[" + gridRequest.SortColumnName + "]", gridRequest.SortDirection);

            PageOptions pageOptions = new PageOptions();
            pageOptions.OrderByArguments = orderByArguments;

            var totalCount = 0;

            var puesto = 0;
            if (Request["puesto"] != null)
            {
                puesto = Convert.ToInt32(Request["puesto"]);
            }


            var zona = 0;
            if (Request["zona"] != null)
            {
                zona = Convert.ToInt32(Request["zona"]);
            }

            //throw new Exception("Revisar este campo //Persona_Secuencia = d, no se cuando lo quiete");

            var allexperienciasMaster = Experiencias_MasterModel.LoadAdministrador(-99,
               "[" + gridRequest.SortColumnName + "]",
                Convert.ToBoolean(gridRequest.SortDirection),
                 1 + gridRequest.RowStartIndex / gridRequest.RowCount,
                gridRequest.RowCount,puesto, gridRequest.Search,zona);

         

            var displayRecords = allexperienciasMaster.Count;
            var totalRecords = totalCount;

            totalRecords = allexperienciasMaster.FirstOrDefault().TotalRowCount;

            var dateFormat = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "en"
                ? "MM/dd/yyyy"
                : "dd/MM/yyyy";
            System.Globalization.DateTimeFormatInfo dtfi =
                System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat;
            dtfi.DateSeparator = "/";

            return Json(new
            {
                iTotalDisplayRecords = totalRecords,
                iTotalRecords = totalRecords,
                sEcho = gridRequest.GridCustomData,
                aaData =
                    allexperienciasMaster.Select(
                        d =>
                            new
                            {
                                d.Congregacion_Nombre,
                                d.Congregacion_Secuencia,
                                d.Dia_Descripcion,
                                d.Dia_Orden,
                                d.Dia_Secuencia,
                                d.Experiencia_Contenido,
                                d.Experiencia_Nota,
                                d.Experiencia_Secuencia,
                                d.Horario_Fecha_Desde,
                                d.Horario_Fecha_Hasta,
                                d.Horario_Numero,
                                d.Horario_Publicar,
                                d.Horario_Secuencia,
                                d.Horario_Turno_Secuencia,
                                d.Persona_Apellidos,
                                d.Persona_Conyuge_Apellido,
                                d.Persona_Correo,
                                d.Persona_Nombres,
                                Persona_Secuencia = d.Hermanoa,
                                d.Persona_Sexo,
                                d.Persona_Tipo_Secuencia,
                                d.Persona_Turno_Hc,
                                d.Registro_Estado,
                                Registro_Fecha = d.Registro_Fecha.Value.ToString(dateFormat,dtfi),
                                d.Registro_Usuario,
                                d.RowNumber,
                                d.Ruta_Descripcion,
                                d.Ruta_Secuencia,
                                d.Semana_Codigo,
                                d.TotalRowCount,
                                d.Turno_Cantidad_Publicadores,
                                d.Turno_Descripcion,
                                d.Turno_Estado,
                                Turno_Fecha = d.Turno_Fecha.Value.ToString(dateFormat,dtfi),
                                d.Turno_Hora_Desde,
                                d.Turno_Hora_Hasta,
                                d.Turno_Minutos_Cantidad,
                                d.Zona_Secuencia,
                            })
            });

        }



        public virtual ActionResult Report()
        {
            var totalCount = 0;




            var puesto = 0;
            if (Request["puesto"] != null)
            {
                puesto = Convert.ToInt32(Request["puesto"]);
            }


            var zona = 0;
            if (Request["zona"] != null)
            {
                zona = Convert.ToInt32(Request["zona"]);
            }

            //throw new Exception("Revisar este campo //Persona_Secuencia = d, no se cuando lo quiete");

            var allexperienciasMaster = Experiencias_MasterModel.LoadAdministrador(-99,
               "",
               null,
                 1,
                10000, puesto, this.GetSearchValue(), zona);


            //var allexperienciasMaster = Experiencias_MasterModel.LoadAllPaging(this.GetSearchValue(), out totalCount);

            var dateFormat = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "en"
                ? "MM/dd/yyyy"
                : "dd/MM/yyyy";
            System.Globalization.DateTimeFormatInfo dtfi =
                System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat;
            dtfi.DateSeparator = "/";
            return new CsvReportResult("Experiencias",
                allexperienciasMaster.Select(
                    d =>
                        new
                        {
                            //d.Experiencia_Secuencia,
                            d.Experiencia_Contenido,
                            d.Experiencia_Nota,
                            //d.Registro_Estado,
                            Fecha_Enviada = d.Registro_Fecha.Value.ToString(dateFormat, dtfi),
                            d.Registro_Usuario,
                            d.Persona_Apellidos,
                            d.Persona_Nombres,
                            d.Congregacion_Nombre,
                            Puesto = d.Ruta_Descripcion,
                            d.Dia_Descripcion,
                            d.Persona_Sexo
                        }));
        }



	    public ActionResult AddComentario(int experiencia)
	    {
	        var model = Experiencias_MasterModel.Load(experiencia);

	        if (!string.IsNullOrEmpty(model.Experiencia_Nota))
	        {
                model.Experiencia_Nota = model.Experiencia_Nota.Replace("<br/>", Environment.NewLine);
	        }
	        

            if (Request.IsAjaxRequest())
            {
                return PartialView("Comentario", model);
            }

	        return View("Comentario", model);
	    }

        [HttpPost]
        [ValidateInput(false)]
        public ActionResult AddComentario(Experiencias_MasterModel model)
        {

            if (!string.IsNullOrEmpty(model.Experiencia_Nota))
            {
                var experiencia = Experiencias_MasterModel.Load(model.Experiencia_Secuencia);

                experiencia.Experiencia_Nota = model.Experiencia_Nota.Replace(Environment.NewLine, "<br/>") + "<br/>" + "(" +
                                               User.UsuarioNombreCompleto + " - " +
                                               DateTime.Now.ToString("D", new CultureInfo("es-DO")) + ") ";
                experiencia.Save();

            }
            if (Request.IsAjaxRequest())
            {
                return Json(new {data = "OK"}, JsonRequestBehavior.AllowGet);
            }


            return View("Comentario", model);
        }

	    public ActionResult ViewExperiencia(int eID)
	    {
	        var experiencia = Proc_Experiencias_PagingModel.LoadOne(eID, "", null, 1, 10, -99, "", -99);

            var expertien = new string[]
	        {
               experiencia.Hermanoa,
               experiencia.Experiencia_Contenido
	        };

	        return PartialView("_view", expertien);
	    }
	}
}

