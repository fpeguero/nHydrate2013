//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 5/11/2014 11:32:26 AM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Web.Security;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using OSIS.PEPPAM.BOM;
using OSIS.PEPPAM.Mvc.Models;

namespace OSIS.PEPPAM.Mvc.Controllers
{
	public partial class Roles_CataController : Roles_CataControllerBase
	{
			// Put your controller's initialization logic here



        //public ActionResult Permisos(int role)
        //{

        //    var rol = Roles_CataModel.Load(role);
        //    var AllModulos = Sistemas_Modulos_MasterModel.LoadAll();

        //    rol.Modulos = AllModulos.Select(
        //        x => new Roles_Modulos()
        //        {
        //            Modulo_Descripcion = x.Modulo_Descripcion,
        //            Modulo_Explicacion = x.Modulo_Explicacion,
        //            Modulo_Icon = x.Modulo_Icon,
        //            Modulo_Nombre = x.Modulo_Nombre,
        //            Modulo_Numero = x.Modulo_Numero,
        //            Modulo_Permiso_Descripcion = x.Modulo_Permiso_Descripcion
        //        }).ToList();


        //    // rol.Funcionalidades_ModuloList = modulos.SistemasFuncionalidadesMaster;


        //    foreach (var modulo in rol.Modulos)
        //    {
        //        var rolesFuncionalidad =
        //            Roles_CataModel.FuncionalidadesModulo(modulo.Modulo_Numero, role).Select(x => x.Funcionalidad_Numero.Value).ToList();

        //        foreach (var funcionalidad in modulo.SistemasFuncionalidadesMaster)
        //        {
        //            if (rolesFuncionalidad.Contains(funcionalidad.Funcionalidad_Numero))
        //            {
        //                funcionalidad.IsSelected = true;
        //            }
        //        }
        //    }



        //    return View("_Permisos", rol);

        //}

	    //public ActionResult PermisosFuncionalidad(int role)
        public ActionResult Permisos(int role)
	    {
            //var modulos = Sistemas_Modulos_MasterModel.Load(modulo);


            var rol = Roles_CataModel.Load(role);
	        var AllModulos = Sistemas_Modulos_MasterModel.LoadAll();

            rol.Modulos = AllModulos.Select(
                x => new Roles_Modulos()
	            {
                    Modulo_Descripcion = x.Modulo_Descripcion,
                    Modulo_Explicacion = x.Modulo_Explicacion,
                    Modulo_Icon = x.Modulo_Icon,
                    Modulo_Nombre = x.Modulo_Nombre,
                    Modulo_Numero = x.Modulo_Numero,
                    Modulo_Permiso_Descripcion = x.Modulo_Permiso_Descripcion
	            }).ToList();
            

	       // rol.Funcionalidades_ModuloList = modulos.SistemasFuncionalidadesMaster;


            foreach (var modulo in rol.Modulos)
	        {
                var rolesFuncionalidad =
                    Roles_CataModel.FuncionalidadesModulo(modulo.Modulo_Numero, role).Select(x => x.Funcionalidad_Numero.Value).ToList();

                modulo.Funcionalidades_ModuloList = Sistemas_Funcionalidades_MasterModel.Loadbymodulo(modulo.Modulo_Numero);
                foreach (var funcionalidad in modulo.Funcionalidades_ModuloList)
	            {
	                if (rolesFuncionalidad.Contains(funcionalidad.Funcionalidad_Numero))
	                {
	                    funcionalidad.IsSelected = true;
	                }
	            }
	        }



            return View("_Permisos", rol);


	    }

        [HttpPost]
        public ActionResult PermisosFuncionalidad(Roles_CataModel permisos)
        {
            //Borrar Todos los datos
            Roles_Funcionalidad_Acciones_TransModel.Deletebyrole(permisos.Role_Numero);


            foreach (var permiso in permisos.Modulos)
            {
                if (permiso.Funcionalidades_ModuloList == null) continue;

                foreach (var funcionalidad in permiso.Funcionalidades_ModuloList)
                {
                    if (!funcionalidad.IsSelected) continue;

                    var funcionalidadAccion = new Sistemas_Funcionalidades_Acciones_Trans()
                    {
                        Funcionalidad_Numero = funcionalidad.Funcionalidad_Numero,
                        Funcionalidad_Accion_Numero = 1,
                        Registro_Estado = "A",
                        Registro_Fecha = DateTime.Now,
                        Registro_Usuario = User.Identity.Name,
                        //Funcionalidad_Numero_Url = -1,
                    };
                    funcionalidadAccion.Save();

                    var rolesPermiso = new Roles_Funcionalidad_Acciones_Trans()
                    {
                        Funcionalidad_Numero = funcionalidad.Funcionalidad_Numero,
                        Funcionalidad_Accion_Numero = 1,
                        Registro_Estado = "A",
                        Registro_Fecha = DateTime.Now,
                        Registro_Usuario = User.Identity.Name,
                        Role_Numero = permisos.Role_Numero,
                    };

                    rolesPermiso.Save();
                }
            }

            return RedirectToAction("Permisos", new { role = permisos.Role_Numero });
        }


	}
}

