//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 5/4/2014 6:24:26 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using CodeFluent.Runtime;
using OSIS.PEPPAM.Mvc.Models;
using OSIS.PEPPAM.Mvc.Models.Shared;

namespace OSIS.PEPPAM.Mvc.Controllers
{
	public partial class Zonas_MasterController : Zonas_MasterControllerBase
	{
			// Put your controller's initialization logic here
       //[Proc_Rutas_Relacionados_Descripcion



       public override ActionResult LoadRutas(GridRequestViewModel gridRequest, int zona_Secuencia)
       {
           //var rutas = Zonas_MasterModel.LoadByEntityKey(zona_Secuencia.ToString());

           OrderByArgumentCollection orderByArguments = new OrderByArgumentCollection();
           orderByArguments.Add("[" + gridRequest.SortColumnName + "]", gridRequest.SortDirection);

           PageOptions pageOptions = new PageOptions();
           pageOptions.OrderByArguments = orderByArguments;

           var rutas = Proc_Rutas_Relacionados_DescripcionModel.PageLoadAllPaging(1 + gridRequest.RowStartIndex/gridRequest.RowCount,
        gridRequest.RowCount,0,zona_Secuencia, gridRequest.Search, pageOptions);

           int count = rutas.Count;

           var dateFormat = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "en" ? "MM/dd/yyyy" : "dd/MM/yyyy";
           System.Globalization.DateTimeFormatInfo dtfi = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat;
           dtfi.DateSeparator = "/";

           return Json(new
           {
               iTotalDisplayRecords = count,
               iTotalRecords = count,
               sEcho = gridRequest.GridCustomData,
               aaData = rutas.Skip(gridRequest.RowStartIndex)
                               .Take(gridRequest.RowCount)
                               .Select(d => new
                               {
                                   d.Auxiliar_Congregacion_Secuencia,
                                   d.Auxiliar_Persona_Apellidos,
                                   d.Auxiliar_Persona_Nombres,
                                   d.Encargado_Congregacion_Secuencia,
                                   Encargado_Persona_Secuencia = d.Encargado_Nombre_Completo,
                                   d.Encargado_Persona_Apellidos,
                                   d.Encargado_Persona_Nombres,
                                   //d.Encargado_Persona_Secuencia,
                                   Persona_Secuencia = d.Auxiliar_Nombre_Completo,
                                   d.Registro_Estado,
                                   Registro_Fecha = d.Registro_Fecha.ToString(dateFormat, dtfi),
                                   d.Registro_Usuario,
                                   Ruta_Carros_Cantidad = d.Ruta_Carros_Cantidad < 0 ? 0 : d.Ruta_Carros_Cantidad,
                                   d.Ruta_Descripcion,
                                   d.Ruta_Mapa_Url,
                                   d.Ruta_Persona_Auxiliar,
                                   d.Ruta_Persona_Encargado,
                                   d.Ruta_Publicadores_Cantidad,
                                   d.Ruta_Secuencia,
                                   d.Zona_Descripcion,
                                   d.Zona_Nota,
                                   d.Zona_Secuencia,
                               })
           });

       }
	}
}

