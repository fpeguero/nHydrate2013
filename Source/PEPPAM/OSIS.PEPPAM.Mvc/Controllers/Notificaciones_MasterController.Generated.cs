//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 6/19/2014 1:29:11 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System; 
using System.Collections.Generic; 
using System.Linq; 
using System.Web.Mvc; 
using System.Web; 
using System.Web.UI; 
using CodeFluent.Runtime; 
using OSIS.PEPPAM.Mvc.Models; 
using OSIS.PEPPAM.Mvc.Extensions.Controllers; 
using OSIS.PEPPAM.Mvc.Models.Shared; 
using OSIS.PEPPAM.Mvc.Extensions.ActionResults; 
using OSIS.PEPPAM.Mvc.Extensions.Controllers; 
using OSIS.PEPPAM.Mvc.Extensions.Helpers; 
using OSIS.PEPPAM.Mvc.Models.Shared; 
using OSIS.PEPPAM.Mvc.Models; 
using OSIS.PEPPAM.Mvc.UI; 
 
namespace OSIS.PEPPAM.Mvc.Controllers 
{ 
    public partial class Notificaciones_MasterController : Notificaciones_MasterControllerBase 
    { 

    } 
 
	public partial class Notificaciones_MasterControllerBase : BaseController 
	{ 
		#region Members 
 

 
        #endregion 
 
        #region Constructors 
 

 
        #endregion 
 
		#region Index 
 

public virtual ActionResult Index()
{
    var model = new Notificaciones_MasterModel();

    ViewBag.PageIndex = this.GetPageIndex();
    ViewBag.PageSize = this.GetPageSize();
    ViewBag.SearchValue = this.GetSearchValue();

    return View(model);
}


[HttpPost]
public virtual ActionResult Load(GridRequestViewModel gridRequest)
{
    OrderByArgumentCollection orderByArguments = new OrderByArgumentCollection();
    orderByArguments.Add("[" + gridRequest.SortColumnName + "]", gridRequest.SortDirection);

    PageOptions pageOptions = new PageOptions();
    pageOptions.OrderByArguments = orderByArguments;

    var totalCount = 0;

    var allnotificacionesMaster = Notificaciones_MasterModel.PageLoadAllPaging(1 + gridRequest.RowStartIndex/gridRequest.RowCount,
        gridRequest.RowCount, gridRequest.Search, pageOptions, out totalCount);

    var displayRecords = allnotificacionesMaster.Count;
    var totalRecords = totalCount;

    var dateFormat = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "en"
        ? "MM/dd/yyyy"
        : "dd/MM/yyyy";
    System.Globalization.DateTimeFormatInfo dtfi =
        System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat;
    dtfi.DateSeparator = "/";

    return Json(new
    {
        iTotalDisplayRecords = displayRecords,
        iTotalRecords = totalRecords,
        sEcho = gridRequest.GridCustomData,
        aaData =
            allnotificacionesMaster.Select(
                d =>
                    new
                    {
d.Notificacion_Numero,d.Notificacion_Descripcion,d.Notificacion_Mensaje,d.Registro_Estado,Registro_Fecha = d.Registro_Fecha.ToString(dateFormat, dtfi),d.Registro_Usuario,Prioridad_Numero = d.NotificacionesPrioridadesCata != null ? d.NotificacionesPrioridadesCata.EntityDisplayName : string.Empty
                    })
    });

}

public virtual ActionResult Report()
{
    var totalCount = 0;
    var allnotificacionesMaster = Notificaciones_MasterModel.LoadAllPaging(this.GetSearchValue(), out totalCount);

    var dateFormat = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "en"
        ? "MM/dd/yyyy"
        : "dd/MM/yyyy";
    System.Globalization.DateTimeFormatInfo dtfi =
        System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat;
    dtfi.DateSeparator = "/";
    return new CsvReportResult("Notificaciones_Master",
        allnotificacionesMaster.Select(
            d =>
                new
                {
d.Notificacion_Numero,d.Notificacion_Descripcion,d.Notificacion_Mensaje,d.Registro_Estado,Registro_Fecha = d.Registro_Fecha.ToString(dateFormat, dtfi),d.Registro_Usuario,Prioridad_Numero = d.NotificacionesPrioridadesCata != null ? d.NotificacionesPrioridadesCata.EntityDisplayName : string.Empty
                }));
}


[HttpPost]
public virtual ActionResult Delete( string entityKey)

{
    try
    {
        var deleteModel  = Notificaciones_MasterModel.LoadByEntityKey(entityKey);
       if (deleteModel.Delete())
       {
          return Json(new { cssMainClass = "success", title = Messages.GetOrSetMensaje("MENSAJE_OPERACION_REALIZDA_SASTIFACTORIAMENTE_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_BORRADO") }, JsonRequestBehavior.AllowGet);
       }
       else
       {
          return Json(new { cssMainClass = "warning", title = Messages.GetOrSetMensaje("MENSAJE_PRECAUSION_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_NO_BORRADO") }, JsonRequestBehavior.AllowGet);
       }
    }
    catch (Exception ex)
    {
          return Json(new { cssMainClass = "success", title = Messages.GetOrSetMensaje("MENSAJE_PRECAUSION_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_BORRADO") }, JsonRequestBehavior.AllowGet);
    }
    return Content(string.Empty);
}
		 
 
		#endregion 
 
		#region Create 
 

		// ******************************************* 
        // URL: /Notificaciones_Master/Create 
        // ******************************************* 

public virtual ActionResult Create()
{
    var notificacionesMaster = new Notificaciones_MasterModel();
    ViewBag.IsNew = true;
    notificacionesMaster.Registro_Estado = "A";

    return View(notificacionesMaster);
}

//
// POST: /Usuarios/Create
[HttpPost]
public virtual ActionResult Create(Notificaciones_MasterModel notificacionesMaster)
{
    if (ModelState.IsValid)
    {

        //Campos Auditorias
        notificacionesMaster.Registro_Fecha = DateTime.Now;
        notificacionesMaster.Registro_Usuario = User.Identity.Name;
                
        var result = notificacionesMaster.Save();

        if (result)
        {
            return RedirectToAction("Edit", new { 
notificacion_Numero = notificacionesMaster.Notificacion_Numero});
        }

    }

    ViewBag.IsNew = true;
    return View(notificacionesMaster);
            
}

		 
 
		#endregion 
 
		#region Edit 
 

		// ******************************************* 
        // URL: /Notificaciones_Master/Edit/id 
        // ******************************************* 

public virtual ActionResult Edit(int notificacion_Numero)
{

    var notificacionesMaster = Notificaciones_MasterModel.LoadByEntityKey(notificacion_Numero.ToString());

    ViewBag.IsNew = false;
            
    return View(notificacionesMaster);
}

[HttpPost]
public virtual ActionResult Edit(Notificaciones_MasterModel notificacionesMaster)
{
           
        if (ModelState.IsValid)
        {
        //Campos Auditorias
        notificacionesMaster.Registro_Fecha = DateTime.Now;
        notificacionesMaster.Registro_Usuario = User.Identity.Name;
                

            var result = notificacionesMaster.Save();

            if (result)
            {
                return RedirectToAction("Index");
            }
        }

        ViewBag.IsNew = false;
        return View(notificacionesMaster);
}

public virtual ActionResult LoadNotificacionesObjetivoTrans(GridRequestViewModel gridRequest,int notificacion_Numero){
    var notificaciones_Objetivo_Trans = Notificaciones_MasterModel.LoadByEntityKey(notificacion_Numero.ToString());

    int count = notificaciones_Objetivo_Trans.NotificacionesObjetivoTrans.Count;

    var dateFormat = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "en" ? "MM/dd/yyyy" : "dd/MM/yyyy";
    System.Globalization.DateTimeFormatInfo dtfi = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat;
    dtfi.DateSeparator = "/";

    return Json(new
    {
        iTotalDisplayRecords = count,
        iTotalRecords = count,
        sEcho = gridRequest.GridCustomData,
        aaData = notificaciones_Objetivo_Trans.NotificacionesObjetivoTrans.Skip(gridRequest.RowStartIndex)
                        .Take(gridRequest.RowCount)
                        .Select(d => new { 
d.EntityKey,d.Registro_Estado,Registro_Fecha = d.Registro_Fecha.ToString(dateFormat, dtfi),d.Registro_Usuario,Zona_Secuencia = d.ZonasMaster != null ? d.ZonasMaster.EntityDisplayName : string.Empty,Ruta_Secuencia = d.RutasMaster != null ? d.RutasMaster.EntityDisplayName : string.Empty,Role_Numero = d.RolesCata != null ? d.RolesCata.EntityDisplayName : string.Empty,Notificacion_Numero = d.NotificacionesMaster != null ? d.NotificacionesMaster.EntityDisplayName : string.Empty
    })
 });

}

public virtual ActionResult AddNotificacionesObjetivoTrans(int notificacion_Numero){
    var notificaciones_Master = Notificaciones_MasterModel.LoadByEntityKey(notificacion_Numero.ToString());

    var notificaciones_Objetivo_Trans = new Notificaciones_Objetivo_TransModel();

 notificaciones_Objetivo_Trans.Notificacion_Numero =notificaciones_Master.Notificacion_Numero;            

    ViewBag.MasterProperty = "Notificaciones_Master_Notificaciones_Objetivo_Trans";

    //relations

    ViewBag.Name = "AddNotificaciones_Objetivo_Trans";
    ViewBag.IsNew = true;
    notificaciones_Objetivo_Trans.Registro_Estado = "A";

    return PartialView("~/Views/Notificaciones_Objetivo_Trans/PopUp.cshtml", notificaciones_Objetivo_Trans);
}

[HttpPost]
public virtual ActionResult AddNotificacionesObjetivoTrans(Notificaciones_Objetivo_TransModel notificaciones_Objetivo_Trans)
{
    if (ModelState.IsValid)
    {

        //Campos Auditorias
        notificaciones_Objetivo_Trans.Registro_Fecha = DateTime.Now;
        notificaciones_Objetivo_Trans.Registro_Usuario = User.Identity.Name;

        notificaciones_Objetivo_Trans.Save();
                
        return new HttpStatusCodeResult(200);
    }
    return new HttpStatusCodeResult(500);
}

//Columna por las cuales estan relacionadas
public virtual ActionResult EditNotificacionesObjetivoTrans(int notificacion_Numero_parent, string entityKey_child )
{
    var notificaciones_Objetivo_Trans =  Notificaciones_Objetivo_TransModel.LoadByEntityKey(entityKey_child.ToString());
            
    ViewBag.MasterProperty = "Notificaciones_Master_Notificaciones_Objetivo_Trans";
    ViewBag.Name = "EditNotificaciones_Objetivo_Trans";
    ViewBag.IsNew = false;

    return PartialView("~/Views/Notificaciones_Objetivo_Trans/PopUp.cshtml", notificaciones_Objetivo_Trans);
}

[HttpPost]
public virtual ActionResult EditNotificacionesObjetivoTrans(Notificaciones_Objetivo_TransModel notificaciones_Objetivo_Trans)
{
    if (ModelState.IsValid)
    {
        //Campos Auditorias
        notificaciones_Objetivo_Trans.Registro_Fecha = DateTime.Now;
        notificaciones_Objetivo_Trans.Registro_Usuario = User.Identity.Name;
        notificaciones_Objetivo_Trans.Save();

        return new HttpStatusCodeResult(200);
    }
    return new HttpStatusCodeResult(500);
}

[HttpPost]
public virtual ActionResult DeleteNotificacionesObjetivoTrans(int notificacion_Numero_parent, string entityKey_child ){
    var notificaciones_Objetivo_Trans = Notificaciones_Objetivo_TransModel.LoadByEntityKey(entityKey_child.ToString());
       if (notificaciones_Objetivo_Trans.Delete())
       {
          return Json(new { cssMainClass = "success", title = Messages.GetOrSetMensaje("MENSAJE_OPERACION_REALIZDA_SASTIFACTORIAMENTE_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_BORRADO") }, JsonRequestBehavior.AllowGet);
       }
       else
       {
          return Json(new { cssMainClass = "warning", title = Messages.GetOrSetMensaje("MENSAJE_PRECAUSION_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_NO_BORRADO") }, JsonRequestBehavior.AllowGet);
       }

}

public virtual ActionResult ReportNotificacionesObjetivoTrans(int notificacion_Numero){
    var notificaciones_Objetivo_Trans = Notificaciones_MasterModel.LoadByEntityKey(notificacion_Numero.ToString());            
    return new CsvReportResult("Notificaciones_Objetivo_Trans", notificaciones_Objetivo_Trans.NotificacionesObjetivoTrans);
}

public virtual ActionResult LoadPersonasNotificacionesTrans(GridRequestViewModel gridRequest,int notificacion_Numero){
    var personas_Notificaciones_Trans = Notificaciones_MasterModel.LoadByEntityKey(notificacion_Numero.ToString());

    int count = personas_Notificaciones_Trans.PersonasNotificacionesTrans.Count;

    var dateFormat = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "en" ? "MM/dd/yyyy" : "dd/MM/yyyy";
    System.Globalization.DateTimeFormatInfo dtfi = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat;
    dtfi.DateSeparator = "/";

    return Json(new
    {
        iTotalDisplayRecords = count,
        iTotalRecords = count,
        sEcho = gridRequest.GridCustomData,
        aaData = personas_Notificaciones_Trans.PersonasNotificacionesTrans.Skip(gridRequest.RowStartIndex)
                        .Take(gridRequest.RowCount)
                        .Select(d => new { 
d.EntityKey,d.Notificacion_Vista,Notificacion_Vista_Fecha = d.Notificacion_Vista_Fecha.ToString(dateFormat, dtfi),d.Registro_Estado,Registro_Fecha = d.Registro_Fecha.ToString(dateFormat, dtfi),d.Registro_Usuario,Persona_Secuencia = d.Personas != null ? d.Personas.EntityDisplayName : string.Empty,Notificacion_Numero = d.Notificaciones != null ? d.Notificaciones.EntityDisplayName : string.Empty
    })
 });

}

public virtual ActionResult AddPersonasNotificacionesTrans(int notificacion_Numero){
    var notificaciones_Master = Notificaciones_MasterModel.LoadByEntityKey(notificacion_Numero.ToString());

    var personas_Notificaciones_Trans = new Personas_Notificaciones_TransModel();

 personas_Notificaciones_Trans.Notificacion_Numero =notificaciones_Master.Notificacion_Numero;            

    ViewBag.MasterProperty = "Notificaciones_Master_Personas_Notificaciones_Trans";

    //relations

    ViewBag.Name = "AddPersonas_Notificaciones_Trans";
    ViewBag.IsNew = true;
    personas_Notificaciones_Trans.Registro_Estado = "A";

    return PartialView("~/Views/Personas_Notificaciones_Trans/PopUp.cshtml", personas_Notificaciones_Trans);
}

[HttpPost]
public virtual ActionResult AddPersonasNotificacionesTrans(Personas_Notificaciones_TransModel personas_Notificaciones_Trans)
{
    if (ModelState.IsValid)
    {

        //Campos Auditorias
        personas_Notificaciones_Trans.Registro_Fecha = DateTime.Now;
        personas_Notificaciones_Trans.Registro_Usuario = User.Identity.Name;

        personas_Notificaciones_Trans.Save();
                
        return new HttpStatusCodeResult(200);
    }
    return new HttpStatusCodeResult(500);
}

//Columna por las cuales estan relacionadas
public virtual ActionResult EditPersonasNotificacionesTrans(int notificacion_Numero_parent, string entityKey_child )
{
    var personas_Notificaciones_Trans =  Personas_Notificaciones_TransModel.LoadByEntityKey(entityKey_child.ToString());
            
    ViewBag.MasterProperty = "Notificaciones_Master_Personas_Notificaciones_Trans";
    ViewBag.Name = "EditPersonas_Notificaciones_Trans";
    ViewBag.IsNew = false;

    return PartialView("~/Views/Personas_Notificaciones_Trans/PopUp.cshtml", personas_Notificaciones_Trans);
}

[HttpPost]
public virtual ActionResult EditPersonasNotificacionesTrans(Personas_Notificaciones_TransModel personas_Notificaciones_Trans)
{
    if (ModelState.IsValid)
    {
        //Campos Auditorias
        personas_Notificaciones_Trans.Registro_Fecha = DateTime.Now;
        personas_Notificaciones_Trans.Registro_Usuario = User.Identity.Name;
        personas_Notificaciones_Trans.Save();

        return new HttpStatusCodeResult(200);
    }
    return new HttpStatusCodeResult(500);
}

[HttpPost]
public virtual ActionResult DeletePersonasNotificacionesTrans(int notificacion_Numero_parent, string entityKey_child ){
    var personas_Notificaciones_Trans = Personas_Notificaciones_TransModel.LoadByEntityKey(entityKey_child.ToString());
       if (personas_Notificaciones_Trans.Delete())
       {
          return Json(new { cssMainClass = "success", title = Messages.GetOrSetMensaje("MENSAJE_OPERACION_REALIZDA_SASTIFACTORIAMENTE_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_BORRADO") }, JsonRequestBehavior.AllowGet);
       }
       else
       {
          return Json(new { cssMainClass = "warning", title = Messages.GetOrSetMensaje("MENSAJE_PRECAUSION_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_NO_BORRADO") }, JsonRequestBehavior.AllowGet);
       }

}

public virtual ActionResult ReportPersonasNotificacionesTrans(int notificacion_Numero){
    var personas_Notificaciones_Trans = Notificaciones_MasterModel.LoadByEntityKey(notificacion_Numero.ToString());            
    return new CsvReportResult("Personas_Notificaciones_Trans", personas_Notificaciones_Trans.PersonasNotificacionesTrans);
}

		 
 
		#endregion 
 
		#region Details 
 

		 
 
		#endregion 

	} 
} 


