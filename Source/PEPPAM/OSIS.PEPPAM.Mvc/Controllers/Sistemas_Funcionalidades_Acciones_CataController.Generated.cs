//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 6/19/2014 1:29:11 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System; 
using System.Collections.Generic; 
using System.Linq; 
using System.Web.Mvc; 
using System.Web; 
using System.Web.UI; 
using CodeFluent.Runtime; 
using OSIS.PEPPAM.Mvc.Models; 
using OSIS.PEPPAM.Mvc.Extensions.Controllers; 
using OSIS.PEPPAM.Mvc.Models.Shared; 
using OSIS.PEPPAM.Mvc.Extensions.ActionResults; 
using OSIS.PEPPAM.Mvc.Extensions.Controllers; 
using OSIS.PEPPAM.Mvc.Extensions.Helpers; 
using OSIS.PEPPAM.Mvc.Models.Shared; 
using OSIS.PEPPAM.Mvc.Models; 
using OSIS.PEPPAM.Mvc.UI; 
 
namespace OSIS.PEPPAM.Mvc.Controllers 
{ 
    public partial class Sistemas_Funcionalidades_Acciones_CataController : Sistemas_Funcionalidades_Acciones_CataControllerBase 
    { 

    } 
 
	public partial class Sistemas_Funcionalidades_Acciones_CataControllerBase : BaseController 
	{ 
		#region Members 
 

 
        #endregion 
 
        #region Constructors 
 

 
        #endregion 
 
		#region Index 
 

public virtual ActionResult Index()
{
    var model = new Sistemas_Funcionalidades_Acciones_CataModel();

    ViewBag.PageIndex = this.GetPageIndex();
    ViewBag.PageSize = this.GetPageSize();
    ViewBag.SearchValue = this.GetSearchValue();

    return View(model);
}


[HttpPost]
public virtual ActionResult Load(GridRequestViewModel gridRequest)
{
    OrderByArgumentCollection orderByArguments = new OrderByArgumentCollection();
    orderByArguments.Add("[" + gridRequest.SortColumnName + "]", gridRequest.SortDirection);

    PageOptions pageOptions = new PageOptions();
    pageOptions.OrderByArguments = orderByArguments;

    var totalCount = 0;

    var allsistemasFuncionalidadesAccionesCata = Sistemas_Funcionalidades_Acciones_CataModel.PageLoadAllPaging(1 + gridRequest.RowStartIndex/gridRequest.RowCount,
        gridRequest.RowCount, gridRequest.Search, pageOptions, out totalCount);

    var displayRecords = allsistemasFuncionalidadesAccionesCata.Count;
    var totalRecords = totalCount;

    var dateFormat = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "en"
        ? "MM/dd/yyyy"
        : "dd/MM/yyyy";
    System.Globalization.DateTimeFormatInfo dtfi =
        System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat;
    dtfi.DateSeparator = "/";

    return Json(new
    {
        iTotalDisplayRecords = displayRecords,
        iTotalRecords = totalRecords,
        sEcho = gridRequest.GridCustomData,
        aaData =
            allsistemasFuncionalidadesAccionesCata.Select(
                d =>
                    new
                    {
d.Funcionalidad_Accion_Numero,d.Funcionalidad_Accion_Tipo_Secuencia,d.Funcionalidad_Accion_Codigo,d.Funcionalidad_Accion_Descripcion,d.Funcionalidad_Accion_Explicacion,d.Funcionalidad_Accion_Icono_Small,d.Funcionalidad_Accion_Icono_Large,d.Funcionalidad_Accion_Css,d.Funcionalidad_Accion_Toolbar,d.Funcionalidad_Accion_Menu,d.Funcionalidad_Accion_Permiso_Descripcion,d.Funcionalidad_Accion_Permiso_Necesita,d.Registro_Estado,Registro_Fecha = d.Registro_Fecha.ToString(dateFormat, dtfi),d.Registro_Usuario
                    })
    });

}

public virtual ActionResult Report()
{
    var totalCount = 0;
    var allsistemasFuncionalidadesAccionesCata = Sistemas_Funcionalidades_Acciones_CataModel.LoadAllPaging(this.GetSearchValue(), out totalCount);

    var dateFormat = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "en"
        ? "MM/dd/yyyy"
        : "dd/MM/yyyy";
    System.Globalization.DateTimeFormatInfo dtfi =
        System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat;
    dtfi.DateSeparator = "/";
    return new CsvReportResult("Sistemas_Funcionalidades_Acciones_Cata",
        allsistemasFuncionalidadesAccionesCata.Select(
            d =>
                new
                {
d.Funcionalidad_Accion_Numero,d.Funcionalidad_Accion_Tipo_Secuencia,d.Funcionalidad_Accion_Codigo,d.Funcionalidad_Accion_Descripcion,d.Funcionalidad_Accion_Explicacion,d.Funcionalidad_Accion_Icono_Small,d.Funcionalidad_Accion_Icono_Large,d.Funcionalidad_Accion_Css,d.Funcionalidad_Accion_Toolbar,d.Funcionalidad_Accion_Menu,d.Funcionalidad_Accion_Permiso_Descripcion,d.Funcionalidad_Accion_Permiso_Necesita,d.Registro_Estado,Registro_Fecha = d.Registro_Fecha.ToString(dateFormat, dtfi),d.Registro_Usuario
                }));
}


[HttpPost]
public virtual ActionResult Delete( string entityKey)

{
    try
    {
        var deleteModel  = Sistemas_Funcionalidades_Acciones_CataModel.LoadByEntityKey(entityKey);
       if (deleteModel.Delete())
       {
          return Json(new { cssMainClass = "success", title = Messages.GetOrSetMensaje("MENSAJE_OPERACION_REALIZDA_SASTIFACTORIAMENTE_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_BORRADO") }, JsonRequestBehavior.AllowGet);
       }
       else
       {
          return Json(new { cssMainClass = "warning", title = Messages.GetOrSetMensaje("MENSAJE_PRECAUSION_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_NO_BORRADO") }, JsonRequestBehavior.AllowGet);
       }
    }
    catch (Exception ex)
    {
          return Json(new { cssMainClass = "success", title = Messages.GetOrSetMensaje("MENSAJE_PRECAUSION_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_BORRADO") }, JsonRequestBehavior.AllowGet);
    }
    return Content(string.Empty);
}
		 
 
		#endregion 
 
		#region Create 
 

		// ******************************************* 
        // URL: /Sistemas_Funcionalidades_Acciones_Cata/Create 
        // ******************************************* 

public virtual ActionResult Create()
{
    var sistemasFuncionalidadesAccionesCata = new Sistemas_Funcionalidades_Acciones_CataModel();
    ViewBag.IsNew = true;
    sistemasFuncionalidadesAccionesCata.Registro_Estado = "A";

    return View(sistemasFuncionalidadesAccionesCata);
}

//
// POST: /Usuarios/Create
[HttpPost]
public virtual ActionResult Create(Sistemas_Funcionalidades_Acciones_CataModel sistemasFuncionalidadesAccionesCata)
{
    if (ModelState.IsValid)
    {

        //Campos Auditorias
        sistemasFuncionalidadesAccionesCata.Registro_Fecha = DateTime.Now;
        sistemasFuncionalidadesAccionesCata.Registro_Usuario = User.Identity.Name;
                
        var result = sistemasFuncionalidadesAccionesCata.Save();

        if (result)
        {
            return RedirectToAction("Edit", new { 
funcionalidad_Accion_Numero = sistemasFuncionalidadesAccionesCata.Funcionalidad_Accion_Numero});
        }

    }

    ViewBag.IsNew = true;
    return View(sistemasFuncionalidadesAccionesCata);
            
}

		 
 
		#endregion 
 
		#region Edit 
 

		// ******************************************* 
        // URL: /Sistemas_Funcionalidades_Acciones_Cata/Edit/id 
        // ******************************************* 

public virtual ActionResult Edit(int funcionalidad_Accion_Numero)
{

    var sistemasFuncionalidadesAccionesCata = Sistemas_Funcionalidades_Acciones_CataModel.LoadByEntityKey(funcionalidad_Accion_Numero.ToString());

    ViewBag.IsNew = false;
            
    return View(sistemasFuncionalidadesAccionesCata);
}

[HttpPost]
public virtual ActionResult Edit(Sistemas_Funcionalidades_Acciones_CataModel sistemasFuncionalidadesAccionesCata)
{
           
        if (ModelState.IsValid)
        {
        //Campos Auditorias
        sistemasFuncionalidadesAccionesCata.Registro_Fecha = DateTime.Now;
        sistemasFuncionalidadesAccionesCata.Registro_Usuario = User.Identity.Name;
                

            var result = sistemasFuncionalidadesAccionesCata.Save();

            if (result)
            {
                return RedirectToAction("Index");
            }
        }

        ViewBag.IsNew = false;
        return View(sistemasFuncionalidadesAccionesCata);
}

public virtual ActionResult LoadFuncionalidades(GridRequestViewModel gridRequest,int funcionalidad_Accion_Numero){
    var funcionalidades = Sistemas_Funcionalidades_Acciones_CataModel.LoadByEntityKey(funcionalidad_Accion_Numero.ToString());

    int count = funcionalidades.Funcionalidades.Count;

    var dateFormat = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "en" ? "MM/dd/yyyy" : "dd/MM/yyyy";
    System.Globalization.DateTimeFormatInfo dtfi = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat;
    dtfi.DateSeparator = "/";

    return Json(new
    {
        iTotalDisplayRecords = count,
        iTotalRecords = count,
        sEcho = gridRequest.GridCustomData,
        aaData = funcionalidades.Funcionalidades.Skip(gridRequest.RowStartIndex)
                        .Take(gridRequest.RowCount)
                        .Select(d => new { 
d.EntityKey,d.Funcionalidad_Numero_Url,d.Registro_Estado,Registro_Fecha = d.Registro_Fecha.ToString(dateFormat, dtfi),d.Registro_Usuario,Funcionalidad_Numero = d.Funcionalidad != null ? d.Funcionalidad.EntityDisplayName : string.Empty,Funcionalidad_Accion_Numero = d.SistemasFuncionalidadesAccionesCata != null ? d.SistemasFuncionalidadesAccionesCata.EntityDisplayName : string.Empty
    })
 });

}

public virtual ActionResult AddFuncionalidades(int funcionalidad_Accion_Numero){
    var sistemas_Funcionalidades_Acciones_Cata = Sistemas_Funcionalidades_Acciones_CataModel.LoadByEntityKey(funcionalidad_Accion_Numero.ToString());

    var funcionalidades = new Sistemas_Funcionalidades_Acciones_TransModel();

 funcionalidades.Funcionalidad_Accion_Numero =sistemas_Funcionalidades_Acciones_Cata.Funcionalidad_Accion_Numero;            

    ViewBag.MasterProperty = "Sistemas_Funcionalidades_Acciones_Cata_Funcionalidades";

    //relations

    ViewBag.Name = "AddSistemas_Funcionalidades_Acciones_Trans";
    ViewBag.IsNew = true;
    funcionalidades.Registro_Estado = "A";

    return PartialView("~/Views/Sistemas_Funcionalidades_Acciones_Trans/PopUp.cshtml", funcionalidades);
}

[HttpPost]
public virtual ActionResult AddFuncionalidades(Sistemas_Funcionalidades_Acciones_TransModel funcionalidades)
{
    if (ModelState.IsValid)
    {

        //Campos Auditorias
        funcionalidades.Registro_Fecha = DateTime.Now;
        funcionalidades.Registro_Usuario = User.Identity.Name;

        funcionalidades.Save();
                
        return new HttpStatusCodeResult(200);
    }
    return new HttpStatusCodeResult(500);
}

//Columna por las cuales estan relacionadas
public virtual ActionResult EditFuncionalidades(int funcionalidad_Accion_Numero_parent, string entityKey_child )
{
    var funcionalidades =  Sistemas_Funcionalidades_Acciones_TransModel.LoadByEntityKey(entityKey_child.ToString());
            
    ViewBag.MasterProperty = "Sistemas_Funcionalidades_Acciones_Cata_Funcionalidades";
    ViewBag.Name = "EditSistemas_Funcionalidades_Acciones_Trans";
    ViewBag.IsNew = false;

    return PartialView("~/Views/Sistemas_Funcionalidades_Acciones_Trans/PopUp.cshtml", funcionalidades);
}

[HttpPost]
public virtual ActionResult EditFuncionalidades(Sistemas_Funcionalidades_Acciones_TransModel funcionalidades)
{
    if (ModelState.IsValid)
    {
        //Campos Auditorias
        funcionalidades.Registro_Fecha = DateTime.Now;
        funcionalidades.Registro_Usuario = User.Identity.Name;
        funcionalidades.Save();

        return new HttpStatusCodeResult(200);
    }
    return new HttpStatusCodeResult(500);
}

[HttpPost]
public virtual ActionResult DeleteFuncionalidades(int funcionalidad_Accion_Numero_parent, string entityKey_child ){
    var funcionalidades = Sistemas_Funcionalidades_Acciones_TransModel.LoadByEntityKey(entityKey_child.ToString());
       if (funcionalidades.Delete())
       {
          return Json(new { cssMainClass = "success", title = Messages.GetOrSetMensaje("MENSAJE_OPERACION_REALIZDA_SASTIFACTORIAMENTE_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_BORRADO") }, JsonRequestBehavior.AllowGet);
       }
       else
       {
          return Json(new { cssMainClass = "warning", title = Messages.GetOrSetMensaje("MENSAJE_PRECAUSION_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_NO_BORRADO") }, JsonRequestBehavior.AllowGet);
       }

}

public virtual ActionResult ReportFuncionalidades(int funcionalidad_Accion_Numero){
    var funcionalidades = Sistemas_Funcionalidades_Acciones_CataModel.LoadByEntityKey(funcionalidad_Accion_Numero.ToString());            
    return new CsvReportResult("Sistemas_Funcionalidades_Acciones_Trans", funcionalidades.Funcionalidades);
}

		 
 
		#endregion 
 
		#region Details 
 

		 
 
		#endregion 

	} 
} 


