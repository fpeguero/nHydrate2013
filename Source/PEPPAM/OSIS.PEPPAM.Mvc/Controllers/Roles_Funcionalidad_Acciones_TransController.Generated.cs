//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 6/19/2014 1:29:11 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System; 
using System.Collections.Generic; 
using System.Linq; 
using System.Web.Mvc; 
using System.Web; 
using System.Web.UI; 
using CodeFluent.Runtime; 
using OSIS.PEPPAM.Mvc.Models; 
using OSIS.PEPPAM.Mvc.Extensions.Controllers; 
using OSIS.PEPPAM.Mvc.Models.Shared; 
using OSIS.PEPPAM.Mvc.Extensions.ActionResults; 
using OSIS.PEPPAM.Mvc.Extensions.Controllers; 
using OSIS.PEPPAM.Mvc.Extensions.Helpers; 
using OSIS.PEPPAM.Mvc.Models.Shared; 
using OSIS.PEPPAM.Mvc.Models; 
using OSIS.PEPPAM.Mvc.UI; 
 
namespace OSIS.PEPPAM.Mvc.Controllers 
{ 
    public partial class Roles_Funcionalidad_Acciones_TransController : Roles_Funcionalidad_Acciones_TransControllerBase 
    { 

    } 
 
	public partial class Roles_Funcionalidad_Acciones_TransControllerBase : BaseController 
	{ 
		#region Members 
 

 
        #endregion 
 
        #region Constructors 
 

 
        #endregion 
 
		#region Index 
 

public virtual ActionResult Index()
{
    var model = new Roles_Funcionalidad_Acciones_TransModel();

    ViewBag.PageIndex = this.GetPageIndex();
    ViewBag.PageSize = this.GetPageSize();
    ViewBag.SearchValue = this.GetSearchValue();

    return View(model);
}


[HttpPost]
public virtual ActionResult Load(GridRequestViewModel gridRequest)
{
    OrderByArgumentCollection orderByArguments = new OrderByArgumentCollection();
    orderByArguments.Add("[" + gridRequest.SortColumnName + "]", gridRequest.SortDirection);

    PageOptions pageOptions = new PageOptions();
    pageOptions.OrderByArguments = orderByArguments;

    var totalCount = 0;

    var allrolesFuncionalidadAccionesTrans = Roles_Funcionalidad_Acciones_TransModel.PageLoadAllPaging(1 + gridRequest.RowStartIndex/gridRequest.RowCount,
        gridRequest.RowCount, gridRequest.Search, pageOptions, out totalCount);

    var displayRecords = allrolesFuncionalidadAccionesTrans.Count;
    var totalRecords = totalCount;

    var dateFormat = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "en"
        ? "MM/dd/yyyy"
        : "dd/MM/yyyy";
    System.Globalization.DateTimeFormatInfo dtfi =
        System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat;
    dtfi.DateSeparator = "/";

    return Json(new
    {
        iTotalDisplayRecords = displayRecords,
        iTotalRecords = totalRecords,
        sEcho = gridRequest.GridCustomData,
        aaData =
            allrolesFuncionalidadAccionesTrans.Select(
                d =>
                    new
                    {
d.EntityKey,d.Registro_Estado,Registro_Fecha = d.Registro_Fecha.ToString(dateFormat, dtfi),d.Registro_Usuario,Funcionalidad_Numero = d.SistemasFuncionalidadesAccionesTrans != null ? d.SistemasFuncionalidadesAccionesTrans.EntityDisplayName : string.Empty,Role_Numero = d.RolesCata != null ? d.RolesCata.EntityDisplayName : string.Empty,d.Funcionalidad_Accion_Numero
                    })
    });

}

public virtual ActionResult Report()
{
    var totalCount = 0;
    var allrolesFuncionalidadAccionesTrans = Roles_Funcionalidad_Acciones_TransModel.LoadAllPaging(this.GetSearchValue(), out totalCount);

    var dateFormat = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "en"
        ? "MM/dd/yyyy"
        : "dd/MM/yyyy";
    System.Globalization.DateTimeFormatInfo dtfi =
        System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat;
    dtfi.DateSeparator = "/";
    return new CsvReportResult("Roles_Funcionalidad_Acciones_Trans",
        allrolesFuncionalidadAccionesTrans.Select(
            d =>
                new
                {
d.EntityKey,d.Registro_Estado,Registro_Fecha = d.Registro_Fecha.ToString(dateFormat, dtfi),d.Registro_Usuario,Funcionalidad_Numero = d.SistemasFuncionalidadesAccionesTrans != null ? d.SistemasFuncionalidadesAccionesTrans.EntityDisplayName : string.Empty,Role_Numero = d.RolesCata != null ? d.RolesCata.EntityDisplayName : string.Empty,d.Funcionalidad_Accion_Numero
                }));
}


[HttpPost]
public virtual ActionResult Delete( string entityKey)

{
    try
    {
        var deleteModel  = Roles_Funcionalidad_Acciones_TransModel.LoadByEntityKey(entityKey);
       if (deleteModel.Delete())
       {
          return Json(new { cssMainClass = "success", title = Messages.GetOrSetMensaje("MENSAJE_OPERACION_REALIZDA_SASTIFACTORIAMENTE_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_BORRADO") }, JsonRequestBehavior.AllowGet);
       }
       else
       {
          return Json(new { cssMainClass = "warning", title = Messages.GetOrSetMensaje("MENSAJE_PRECAUSION_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_NO_BORRADO") }, JsonRequestBehavior.AllowGet);
       }
    }
    catch (Exception ex)
    {
          return Json(new { cssMainClass = "success", title = Messages.GetOrSetMensaje("MENSAJE_PRECAUSION_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_BORRADO") }, JsonRequestBehavior.AllowGet);
    }
    return Content(string.Empty);
}
		 
 
		#endregion 
 
		#region Create 
 

		// ******************************************* 
        // URL: /Roles_Funcionalidad_Acciones_Trans/Create 
        // ******************************************* 

public virtual ActionResult Create()
{
    var rolesFuncionalidadAccionesTrans = new Roles_Funcionalidad_Acciones_TransModel();
    ViewBag.IsNew = true;
    rolesFuncionalidadAccionesTrans.Registro_Estado = "A";

    return View(rolesFuncionalidadAccionesTrans);
}

//
// POST: /Usuarios/Create
[HttpPost]
public virtual ActionResult Create(Roles_Funcionalidad_Acciones_TransModel rolesFuncionalidadAccionesTrans)
{
    if (ModelState.IsValid)
    {

        //Campos Auditorias
        rolesFuncionalidadAccionesTrans.Registro_Fecha = DateTime.Now;
        rolesFuncionalidadAccionesTrans.Registro_Usuario = User.Identity.Name;
                
        var result = rolesFuncionalidadAccionesTrans.Save();

        if (result)
        {
            return RedirectToAction("Edit", new { 
entityKey = rolesFuncionalidadAccionesTrans.EntityKey});
        }

    }

    ViewBag.IsNew = true;
    return View(rolesFuncionalidadAccionesTrans);
            
}

		 
 
		#endregion 
 
		#region Edit 
 

		// ******************************************* 
        // URL: /Roles_Funcionalidad_Acciones_Trans/Edit/id 
        // ******************************************* 

public virtual ActionResult Edit(string entityKey)
{

    var rolesFuncionalidadAccionesTrans = Roles_Funcionalidad_Acciones_TransModel.LoadByEntityKey(entityKey);

    ViewBag.IsNew = false;
            
    return View(rolesFuncionalidadAccionesTrans);
}

[HttpPost]
public virtual ActionResult Edit(Roles_Funcionalidad_Acciones_TransModel rolesFuncionalidadAccionesTrans)
{
           
        if (ModelState.IsValid)
        {
        //Campos Auditorias
        rolesFuncionalidadAccionesTrans.Registro_Fecha = DateTime.Now;
        rolesFuncionalidadAccionesTrans.Registro_Usuario = User.Identity.Name;
                

            var result = rolesFuncionalidadAccionesTrans.Save();

            if (result)
            {
                return RedirectToAction("Index");
            }
        }

        ViewBag.IsNew = false;
        return View(rolesFuncionalidadAccionesTrans);
}

		 
 
		#endregion 
 
		#region Details 
 

		 
 
		#endregion 

	} 
} 


