//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 6/19/2014 1:29:11 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System; 
using System.Collections.Generic; 
using System.Linq; 
using System.Web.Mvc; 
using System.Web; 
using System.Web.UI; 
using CodeFluent.Runtime; 
using OSIS.PEPPAM.Mvc.Models; 
using OSIS.PEPPAM.Mvc.Extensions.Controllers; 
using OSIS.PEPPAM.Mvc.Models.Shared; 
using OSIS.PEPPAM.Mvc.Extensions.ActionResults; 
using OSIS.PEPPAM.Mvc.Extensions.Controllers; 
using OSIS.PEPPAM.Mvc.Extensions.Helpers; 
using OSIS.PEPPAM.Mvc.Models.Shared; 
using OSIS.PEPPAM.Mvc.Models; 
using OSIS.PEPPAM.Mvc.UI; 
 
namespace OSIS.PEPPAM.Mvc.Controllers 
{ 
    public partial class Circuitos_CataController : Circuitos_CataControllerBase 
    { 

    } 
 
	public partial class Circuitos_CataControllerBase : BaseController 
	{ 
		#region Members 
 

 
        #endregion 
 
        #region Constructors 
 

 
        #endregion 
 
		#region Index 
 

public virtual ActionResult Index()
{
    var model = new Circuitos_CataModel();

    ViewBag.PageIndex = this.GetPageIndex();
    ViewBag.PageSize = this.GetPageSize();
    ViewBag.SearchValue = this.GetSearchValue();

    return View(model);
}


[HttpPost]
public virtual ActionResult Load(GridRequestViewModel gridRequest)
{
    OrderByArgumentCollection orderByArguments = new OrderByArgumentCollection();
    orderByArguments.Add("[" + gridRequest.SortColumnName + "]", gridRequest.SortDirection);

    PageOptions pageOptions = new PageOptions();
    pageOptions.OrderByArguments = orderByArguments;

    var totalCount = 0;

    var allcircuitosCata = Circuitos_CataModel.PageLoadAllPaging(1 + gridRequest.RowStartIndex/gridRequest.RowCount,
        gridRequest.RowCount, gridRequest.Search, pageOptions, out totalCount);

    var displayRecords = allcircuitosCata.Count;
    var totalRecords = totalCount;

    var dateFormat = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "en"
        ? "MM/dd/yyyy"
        : "dd/MM/yyyy";
    System.Globalization.DateTimeFormatInfo dtfi =
        System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat;
    dtfi.DateSeparator = "/";

    return Json(new
    {
        iTotalDisplayRecords = displayRecords,
        iTotalRecords = totalRecords,
        sEcho = gridRequest.GridCustomData,
        aaData =
            allcircuitosCata.Select(
                d =>
                    new
                    {
d.Circuito_Numero,d.Circuito_Descripcion,d.Registro_Estado,Registro_Fecha = d.Registro_Fecha.ToString(dateFormat, dtfi),d.Registro_Usuario
                    })
    });

}

public virtual ActionResult Report()
{
    var totalCount = 0;
    var allcircuitosCata = Circuitos_CataModel.LoadAllPaging(this.GetSearchValue(), out totalCount);

    var dateFormat = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "en"
        ? "MM/dd/yyyy"
        : "dd/MM/yyyy";
    System.Globalization.DateTimeFormatInfo dtfi =
        System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat;
    dtfi.DateSeparator = "/";
    return new CsvReportResult("Circuitos_Cata",
        allcircuitosCata.Select(
            d =>
                new
                {
d.Circuito_Numero,d.Circuito_Descripcion,d.Registro_Estado,Registro_Fecha = d.Registro_Fecha.ToString(dateFormat, dtfi),d.Registro_Usuario
                }));
}


[HttpPost]
public virtual ActionResult Delete( string entityKey)

{
    try
    {
        var deleteModel  = Circuitos_CataModel.LoadByEntityKey(entityKey);
       if (deleteModel.Delete())
       {
          return Json(new { cssMainClass = "success", title = Messages.GetOrSetMensaje("MENSAJE_OPERACION_REALIZDA_SASTIFACTORIAMENTE_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_BORRADO") }, JsonRequestBehavior.AllowGet);
       }
       else
       {
          return Json(new { cssMainClass = "warning", title = Messages.GetOrSetMensaje("MENSAJE_PRECAUSION_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_NO_BORRADO") }, JsonRequestBehavior.AllowGet);
       }
    }
    catch (Exception ex)
    {
          return Json(new { cssMainClass = "success", title = Messages.GetOrSetMensaje("MENSAJE_PRECAUSION_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_BORRADO") }, JsonRequestBehavior.AllowGet);
    }
    return Content(string.Empty);
}
		 
 
		#endregion 
 
		#region Create 
 

		// ******************************************* 
        // URL: /Circuitos_Cata/Create 
        // ******************************************* 

public virtual ActionResult Create()
{
    var circuitosCata = new Circuitos_CataModel();
    ViewBag.IsNew = true;
    circuitosCata.Registro_Estado = "A";

    return View(circuitosCata);
}

//
// POST: /Usuarios/Create
[HttpPost]
public virtual ActionResult Create(Circuitos_CataModel circuitosCata)
{
    if (ModelState.IsValid)
    {

        //Campos Auditorias
        circuitosCata.Registro_Fecha = DateTime.Now;
        circuitosCata.Registro_Usuario = User.Identity.Name;
                
        var result = circuitosCata.Save();

        if (result)
        {
            return RedirectToAction("Edit", new { 
circuito_Numero = circuitosCata.Circuito_Numero});
        }

    }

    ViewBag.IsNew = true;
    return View(circuitosCata);
            
}

		 
 
		#endregion 
 
		#region Edit 
 

		// ******************************************* 
        // URL: /Circuitos_Cata/Edit/id 
        // ******************************************* 

public virtual ActionResult Edit(int circuito_Numero)
{

    var circuitosCata = Circuitos_CataModel.LoadByEntityKey(circuito_Numero.ToString());

    ViewBag.IsNew = false;
            
    return View(circuitosCata);
}

[HttpPost]
public virtual ActionResult Edit(Circuitos_CataModel circuitosCata)
{
           
        if (ModelState.IsValid)
        {
        //Campos Auditorias
        circuitosCata.Registro_Fecha = DateTime.Now;
        circuitosCata.Registro_Usuario = User.Identity.Name;
                

            var result = circuitosCata.Save();

            if (result)
            {
                return RedirectToAction("Index");
            }
        }

        ViewBag.IsNew = false;
        return View(circuitosCata);
}

public virtual ActionResult LoadCongregaciones(GridRequestViewModel gridRequest,int circuito_Numero){
    var congregaciones = Circuitos_CataModel.LoadByEntityKey(circuito_Numero.ToString());

    int count = congregaciones.Congregaciones.Count;

    var dateFormat = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "en" ? "MM/dd/yyyy" : "dd/MM/yyyy";
    System.Globalization.DateTimeFormatInfo dtfi = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat;
    dtfi.DateSeparator = "/";

    return Json(new
    {
        iTotalDisplayRecords = count,
        iTotalRecords = count,
        sEcho = gridRequest.GridCustomData,
        aaData = congregaciones.Congregaciones.Skip(gridRequest.RowStartIndex)
                        .Take(gridRequest.RowCount)
                        .Select(d => new { 
d.Congregacion_Secuencia,d.Congregacion_Nombre,d.Congregacion_Direccion,d.Registro_Estado,Registro_Fecha = d.Registro_Fecha.ToString(dateFormat, dtfi),d.Registro_Usuario,Zona_Secuencia = d.Zona != null ? d.Zona.EntityDisplayName : string.Empty,Circuito_Numero = d.Circuito != null ? d.Circuito.EntityDisplayName : string.Empty
    })
 });

}

public virtual ActionResult AddCongregaciones(int circuito_Numero){
    var circuitos_Cata = Circuitos_CataModel.LoadByEntityKey(circuito_Numero.ToString());

    var congregaciones = new Congregaciones_MasterModel();

 congregaciones.Circuito_Numero =circuitos_Cata.Circuito_Numero;            

    ViewBag.MasterProperty = "Circuitos_Cata_Congregaciones";

    //relations

    ViewBag.Name = "AddCongregaciones_Master";
    ViewBag.IsNew = true;
    congregaciones.Registro_Estado = "A";

    return PartialView("~/Views/Congregaciones_Master/PopUp.cshtml", congregaciones);
}

[HttpPost]
public virtual ActionResult AddCongregaciones(Congregaciones_MasterModel congregaciones)
{
    if (ModelState.IsValid)
    {

        //Campos Auditorias
        congregaciones.Registro_Fecha = DateTime.Now;
        congregaciones.Registro_Usuario = User.Identity.Name;

        congregaciones.Save();
                
        return new HttpStatusCodeResult(200);
    }
    return new HttpStatusCodeResult(500);
}

//Columna por las cuales estan relacionadas
public virtual ActionResult EditCongregaciones(int circuito_Numero_parent, int congregacion_Secuencia_child )
{
    var congregaciones =  Congregaciones_MasterModel.LoadByEntityKey(congregacion_Secuencia_child.ToString());
            
    ViewBag.MasterProperty = "Circuitos_Cata_Congregaciones";
    ViewBag.Name = "EditCongregaciones_Master";
    ViewBag.IsNew = false;

    return PartialView("~/Views/Congregaciones_Master/PopUp.cshtml", congregaciones);
}

[HttpPost]
public virtual ActionResult EditCongregaciones(Congregaciones_MasterModel congregaciones)
{
    if (ModelState.IsValid)
    {
        //Campos Auditorias
        congregaciones.Registro_Fecha = DateTime.Now;
        congregaciones.Registro_Usuario = User.Identity.Name;
        congregaciones.Save();

        return new HttpStatusCodeResult(200);
    }
    return new HttpStatusCodeResult(500);
}

[HttpPost]
public virtual ActionResult DeleteCongregaciones(int circuito_Numero_parent, int congregacion_Secuencia_child ){
    var congregaciones = Congregaciones_MasterModel.LoadByEntityKey(congregacion_Secuencia_child.ToString());
       if (congregaciones.Delete())
       {
          return Json(new { cssMainClass = "success", title = Messages.GetOrSetMensaje("MENSAJE_OPERACION_REALIZDA_SASTIFACTORIAMENTE_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_BORRADO") }, JsonRequestBehavior.AllowGet);
       }
       else
       {
          return Json(new { cssMainClass = "warning", title = Messages.GetOrSetMensaje("MENSAJE_PRECAUSION_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_NO_BORRADO") }, JsonRequestBehavior.AllowGet);
       }

}

public virtual ActionResult ReportCongregaciones(int circuito_Numero){
    var congregaciones = Circuitos_CataModel.LoadByEntityKey(circuito_Numero.ToString());            
    return new CsvReportResult("Congregaciones_Master", congregaciones.Congregaciones);
}

		 
 
		#endregion 
 
		#region Details 
 

		 
 
		#endregion 

	} 
} 


