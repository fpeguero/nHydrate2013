//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 5/4/2014 6:24:26 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using CodeFluent.Runtime;
using OSIS.PEPPAM.Mvc.Extensions.ActionResults;
using OSIS.PEPPAM.Mvc.Extensions.Controllers;
using OSIS.PEPPAM.Mvc.Models;
using OSIS.PEPPAM.Mvc.Models.Shared;
using OSIS.PEPPAM.Mvc.UI;

namespace OSIS.PEPPAM.Mvc.Controllers
{
	public partial class Rutas_MasterController : Rutas_MasterControllerBase
	{

       [HttpPost]
       public override ActionResult Load(GridRequestViewModel gridRequest)
       {
           OrderByArgumentCollection orderByArguments = new OrderByArgumentCollection();
           orderByArguments.Add("[" + gridRequest.SortColumnName + "]", gridRequest.SortDirection);

           PageOptions pageOptions = new PageOptions();
           pageOptions.OrderByArguments = orderByArguments;

           var totalCount = 0;

           var allrutasMaster =   Proc_Rutas_Relacionados_DescripcionModel.PageLoadAllPaging(1 + gridRequest.RowStartIndex/gridRequest.RowCount,
        gridRequest.RowCount,0,0, gridRequest.Search, pageOptions);

           var displayRecords = allrutasMaster.Count;
           var totalRecords = totalCount;

           var dateFormat = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "en"
               ? "MM/dd/yyyy"
               : "dd/MM/yyyy";
           System.Globalization.DateTimeFormatInfo dtfi =
               System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat;
           dtfi.DateSeparator = "/";

           return Json(new
           {
               iTotalDisplayRecords = displayRecords,
               iTotalRecords = totalRecords,
               sEcho = gridRequest.GridCustomData,
               aaData =
                   allrutasMaster.Select(
                       d =>
                           new
                           {
                               d.Auxiliar_Congregacion_Secuencia,
                               d.Auxiliar_Persona_Apellidos,
                               d.Auxiliar_Persona_Nombres,
                               d.Encargado_Congregacion_Secuencia,
                               Encargado_Persona_Secuencia = d.Encargado_Nombre_Completo,
                               d.Encargado_Persona_Apellidos,
                               d.Encargado_Persona_Nombres,
                               //d.Encargado_Persona_Secuencia,
                               Auxiliar_Persona_Secuencia = d.Auxiliar_Nombre_Completo,
                               d.Registro_Estado,
                               Registro_Fecha = d.Registro_Fecha.ToString(dateFormat, dtfi),
                               d.Registro_Usuario,
                               Ruta_Carros_Cantidad = d.Ruta_Carros_Cantidad < 0 ? 0 : d.Ruta_Carros_Cantidad,
                               d.Ruta_Descripcion,
                               d.Ruta_Mapa_Url,
                               d.Ruta_Persona_Auxiliar,
                               d.Ruta_Persona_Encargado,
                               d.Ruta_Publicadores_Cantidad,
                               d.Ruta_Secuencia,
                               d.Zona_Descripcion,
                               d.Zona_Nota,
                               d.Zona_Secuencia,
                           })
           });

       }



       public override ActionResult Report()
       {
   
           var allrutasMaster = Proc_Rutas_Relacionados_DescripcionModel.PageLoadAllPaging(1,
       10000, 0, 0,this.GetSearchValue(), null);

           var dateFormat = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "en"
               ? "MM/dd/yyyy"
               : "dd/MM/yyyy";
           System.Globalization.DateTimeFormatInfo dtfi =
               System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat;
           dtfi.DateSeparator = "/";
           return new CsvReportResult("Puestos",
               allrutasMaster.Select(
                   d =>
                       new
                       {
                           Zona = d.Zona_Descripcion,
                           Puesto = d.Ruta_Descripcion,
                           Encargado = d.Encargado_Nombre_Completo,
                           Auxiliar = d.Auxiliar_Nombre_Completo,
                           Ruta_Carros_Cantidad = d.Ruta_Carros_Cantidad < 0 ? 0 : d.Ruta_Carros_Cantidad,
                           Puesto_Url= d.Ruta_Mapa_Url,
                       }));
       }




       [HttpPost]
       public override ActionResult Create(Rutas_MasterModel rutasMaster)
       {
           if (ModelState.IsValid)
           {

               //Campos Auditorias
               rutasMaster.Registro_Fecha = DateTime.Now;
               rutasMaster.Registro_Usuario = User.Identity.Name;

               var result = rutasMaster.Save();

               if (result)
               {

                   ShowMessages(MessagesType.Success, Messages.GetOrSetMensaje("MENSAJE_PUESTO_AGREGADO_SASTIFACTORIAMENTE"));


                   return RedirectToAction("Index");
               }

           }

           ViewBag.IsNew = true;
           return View(rutasMaster);

       }



       [HttpPost]
       public override ActionResult Edit(Rutas_MasterModel rutasMaster)
       {

           if (ModelState.IsValid)
           {
               //Campos Auditorias
               rutasMaster.Registro_Fecha = DateTime.Now;
               rutasMaster.Registro_Usuario = User.Identity.Name;


               var result = rutasMaster.Save();

               if (result)
               {
                   ShowMessages(MessagesType.Success, Messages.GetOrSetMensaje("MENSAJE_PUESTO_EDITADO_SASTIFACTORIAMENTE"));

                   return RedirectToAction("Index");
               }
           }

           ViewBag.IsNew = false;
           return View(rutasMaster);
       }


       [HttpPost]
       public override ActionResult Delete(string ruta_Secuencia)
       {
           try
           {
               var deleteModel = Rutas_MasterModel.LoadByEntityKey(ruta_Secuencia);
               if (deleteModel.Delete())
               {
                   return Json(new { cssMainClass = "success", title = Messages.GetOrSetMensaje("MENSAJE_OPERACION_REALIZDA_SASTIFACTORIAMENTE_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_BORRADO") }, JsonRequestBehavior.AllowGet);
               }
               else
               {
                   return Json(new { cssMainClass = "warning", title = Messages.GetOrSetMensaje("MENSAJE_PRECAUSION_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_NO_BORRADO") }, JsonRequestBehavior.AllowGet);
               }
           }
           catch (Exception ex)
           {
               return Json(new { cssMainClass = "success", title = Messages.GetOrSetMensaje("MENSAJE_PRECAUSION_HEADER"), body = Messages.GetOrSetMensaje("MENSAJE_NOTIFICACION_REGISTRO_BORRADO") }, JsonRequestBehavior.AllowGet);
           }
           return Content(string.Empty);
       }


	}
}

