//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 6/19/2014 1:29:30 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System; 
using System.Web; 
using System.Linq; 
using System.Collections.Generic; 
using CodeFluent.Runtime; 
using CodeFluent.Runtime.Utilities; 
using System.ComponentModel.DataAnnotations; 
using FluentValidation; 
using FluentValidation.Attributes; 
using OSIS.PEPPAM.Mvc.Models; 

namespace OSIS.PEPPAM.Mvc.Models 
{ 
	public partial class Personas_Notificaciones_TransModel
	{

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Personas_Notificaciones_Trans","Persona_Secuencia")]
		public int Persona_Secuencia { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Personas_Notificaciones_Trans","Notificacion_Numero")]
		public int Notificacion_Numero { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Personas_Notificaciones_Trans","Notificacion_Vista")]
		public String Notificacion_Vista { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Personas_Notificaciones_Trans","Notificacion_Vista_Fecha")]
		public DateTime Notificacion_Vista_Fecha { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Personas_Notificaciones_Trans","Registro_Estado")]
		public String Registro_Estado { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Personas_Notificaciones_Trans","Registro_Fecha")]
		public DateTime Registro_Fecha { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Personas_Notificaciones_Trans","Registro_Usuario")]
		public String Registro_Usuario { get; set; } 

		#region Navigation Properties

        public OSIS.PEPPAM.Mvc.Models.Notificaciones_MasterModel _notificaciones;
		/// <summary>
		/// The navigation definition for walking [Personas_Notificaciones_Trans]->[Notificaciones_Master]
		/// Relationship Links: 
		/// [Notificaciones_Master.Notificacion_Numero = Personas_Notificaciones_Trans.Notificacion_Numero] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.Mvc.Models.Notificaciones_MasterModel Notificaciones
		{
			get
			{
                if ((this._notificaciones == null))
                {
                    this._notificaciones = OSIS.PEPPAM.Mvc.Models.Notificaciones_MasterModel.Load(Notificacion_Numero);
                }
                return this._notificaciones;
			}
		}

     private List<OSIS.PEPPAM.Mvc.Models.Notificaciones_MasterModel> _notificacionesList;
		public virtual List<OSIS.PEPPAM.Mvc.Models.Notificaciones_MasterModel> NotificacionesList
		{
			get
			{
                if ((this._notificacionesList == null))
                {
                    this._notificacionesList = OSIS.PEPPAM.Mvc.Models.Notificaciones_MasterModel.LoadAll();
                }
                return this._notificacionesList;
			}
		}

        public OSIS.PEPPAM.Mvc.Models.Personas_MasterModel _personas;
		/// <summary>
		/// The navigation definition for walking [Personas_Notificaciones_Trans]->[Personas_Master]
		/// Relationship Links: 
		/// [Personas_Master.Persona_Secuencia = Personas_Notificaciones_Trans.Persona_Secuencia] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.Mvc.Models.Personas_MasterModel Personas
		{
			get
			{
                if ((this._personas == null))
                {
                    this._personas = OSIS.PEPPAM.Mvc.Models.Personas_MasterModel.Load(Persona_Secuencia);
                }
                return this._personas;
			}
		}

     private List<OSIS.PEPPAM.Mvc.Models.Personas_MasterModel> _personasList;
		public virtual List<OSIS.PEPPAM.Mvc.Models.Personas_MasterModel> PersonasList
		{
			get
			{
                if ((this._personasList == null))
                {
                    this._personasList = OSIS.PEPPAM.Mvc.Models.Personas_MasterModel.LoadAll();
                }
                return this._personasList;
			}
		}

		#endregion

        public virtual string EntityKey
        {
            get
            {
                object[] keys = new object[] {
                        this.Persona_Secuencia,
                        this.Notificacion_Numero
                 };
                string v = CodeFluentPersistence.BuildEntityKey(keys);
                return v;
            }
            set
            {
                System.Type[] types = new System.Type[] {
                        typeof(int),
                        typeof(int)
                        };
                object[] defaultValues = new object[] {
                        -1,
                        -1
                        };
                object[] v1 = CodeFluentPersistence.ParseEntityKey(value, types, defaultValues);
                this. Persona_Secuencia = ((int)(v1[0]));
                this. Notificacion_Numero = ((int)(v1[1]));
            }
        }

        public virtual string EntityDisplayName
        {
            get
            {
                return this.Notificacion_Vista.ToString();
            }
        }
        

        public Personas_Notificaciones_TransModel()
        {
            this.Persona_Secuencia = -1;
            this.Notificacion_Numero = -1;
            this.Notificacion_Vista = string.Empty;
            this.Notificacion_Vista_Fecha = System.DateTime.MinValue;
            this.Registro_Estado = "A";
            this.Registro_Fecha = DateTime.Now;
            this.Registro_Usuario = HttpContext.Current != null ? HttpContext.Current.User.Identity.Name : "";
            Personas_Notificaciones_TransPartial();
        }

            partial void Personas_Notificaciones_TransPartial();

        public virtual bool Equals(OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel personasNotificacionesTrans)
        {
            if ((personasNotificacionesTrans == null))
            {
                return false;
            }

            if (
                    (this.Persona_Secuencia == -1)
                    ||
                    (this.Notificacion_Numero == -1)
            )
            {
                return base.Equals(personasNotificacionesTrans);
            }

 return ((
                    (this.Persona_Secuencia.Equals(personasNotificacionesTrans.Persona_Secuencia))
                    &&
                    (this.Notificacion_Numero.Equals(personasNotificacionesTrans.Notificacion_Numero))
                        )== true);
        }

        public override bool Equals(object obj)
        {
            OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel personasNotificacionesTrans = null;
			 personasNotificacionesTrans = obj as OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel;
            return this.Equals( personasNotificacionesTrans);
        }

        public override int GetHashCode()
        {
            if ((this.EntityKey == null))
            {
                return base.GetHashCode();
            }
            return this.EntityKey.GetHashCode();
        }
        
        public virtual int CompareTo(OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel personasNotificacionesTrans)
        {
            if ((personasNotificacionesTrans == null))
            {
                throw new System.ArgumentNullException("personasNotificacionesTrans");
            }
            int localCompareTo = this.Persona_Secuencia.CompareTo(personasNotificacionesTrans.Persona_Secuencia);
            return localCompareTo;
        }

        public static OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel Load(int persona_Secuencia,int notificacion_Numero)
        {
            var _personasNotificacionesTransDb = OSIS.PEPPAM.BOM.Personas_Notificaciones_Trans.Load(persona_Secuencia,notificacion_Numero);
	        if (_personasNotificacionesTransDb == null)
	        {
                return null;
	        }

	        var _personasNotificacionesTrans = new OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel()
            {
                Persona_Secuencia = _personasNotificacionesTransDb.Persona_Secuencia,
                Notificacion_Numero = _personasNotificacionesTransDb.Notificacion_Numero,
                Notificacion_Vista = _personasNotificacionesTransDb.Notificacion_Vista,
                Notificacion_Vista_Fecha = _personasNotificacionesTransDb.Notificacion_Vista_Fecha,
                Registro_Estado = _personasNotificacionesTransDb.Registro_Estado,
                Registro_Fecha = _personasNotificacionesTransDb.Registro_Fecha,
                Registro_Usuario = _personasNotificacionesTransDb.Registro_Usuario,

            };

	        return _personasNotificacionesTrans;
       }

     public virtual bool Save()
	        {
             var _personasNotificacionesTransDb = new OSIS.PEPPAM.BOM.Personas_Notificaciones_Trans()
	            {
                Persona_Secuencia = this.Persona_Secuencia,
                Notificacion_Numero = this.Notificacion_Numero,
                Notificacion_Vista = this.Notificacion_Vista,
                Notificacion_Vista_Fecha = this.Notificacion_Vista_Fecha,
                Registro_Estado = this.Registro_Estado,
                Registro_Fecha = this.Registro_Fecha,
                Registro_Usuario = this.Registro_Usuario
	            };

	            var result  = _personasNotificacionesTransDb.Save();
             //TODO: Puede ser que solo sean los Identity y no todo los primary keys
             this.Persona_Secuencia = _personasNotificacionesTransDb.Persona_Secuencia;
             //TODO: Puede ser que solo sean los Identity y no todo los primary keys
             this.Notificacion_Numero = _personasNotificacionesTransDb.Notificacion_Numero;

             return result;

	        }

        public static bool Save(OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel personasNotificacionesTrans)
        {
            if ((personasNotificacionesTrans == null))
            {
                return false;
            }
            bool ret = personasNotificacionesTrans.Save();
            return ret;
        }

        public static bool Insert(OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel personasNotificacionesTrans)
        {
            bool ret = OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel.Save(personasNotificacionesTrans);
            return ret;
        }

        public static void SaveAll(List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel> personasNotificacionesTrans)
        {
            int index;
            for (index = (personasNotificacionesTrans.Count - 1); (index >= 0); index = (index - 1))
            {
                OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel _personasNotificacionesTrans = personasNotificacionesTrans[index];
                _personasNotificacionesTrans.Save();
            }
        }

        public static bool Delete(OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel personasNotificacionesTrans)
        {
            if ((personasNotificacionesTrans == null))
            {
                return false;
            }
            bool ret = personasNotificacionesTrans.Delete();
            return ret;
        }

         public virtual bool Delete()
	        {
             var _personasNotificacionesTransDb = new OSIS.PEPPAM.BOM.Personas_Notificaciones_Trans()
	            {
                Persona_Secuencia = this.Persona_Secuencia,
                Notificacion_Numero = this.Notificacion_Numero,

	            };

	            return _personasNotificacionesTransDb.Delete();

	        }

        public static bool Delete(int persona_Secuencia,int notificacion_Numero)
        {
            if ((persona_Secuencia == default(int)))
            {
                return false;
            }
            if ((notificacion_Numero == default(int)))
            {
                return false;
            }
             var _personasNotificacionesTransDb = OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel.Load(persona_Secuencia,notificacion_Numero);
            return _personasNotificacionesTransDb.Delete();
        }

        public string Trace()
	        {
             var _personasNotificacionesTransDb = new OSIS.PEPPAM.BOM.Personas_Notificaciones_Trans()
	            {
                Persona_Secuencia = this.Persona_Secuencia,
                Notificacion_Numero = this.Notificacion_Numero,
                Notificacion_Vista = this.Notificacion_Vista,
                Notificacion_Vista_Fecha = this.Notificacion_Vista_Fecha,
                Registro_Estado = this.Registro_Estado,
                Registro_Fecha = this.Registro_Fecha,
                Registro_Usuario = this.Registro_Usuario
	            };

	            return _personasNotificacionesTransDb.Trace();

	        }

        public static OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel LoadByEntityKey(string key)
        {
            if ((key == string.Empty))
            {
                return null;
            }
            OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel personasNotificacionesTrans;
            System.Type[] types = new System.Type[] {
                    typeof(int),                    typeof(int)                    };
            object[] defaultValues = new object[] {
                    -1,                    -1                    };
            object[] v = CodeFluentPersistence.ParseEntityKey(key, types, defaultValues);
                    int var0;            var0 = ((int)(v[0]));
                    int var1;            var1 = ((int)(v[1]));
            personasNotificacionesTrans = OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel.Load( var0, var1);
            return personasNotificacionesTrans;
        }


// Metodos Definidos en el Modelo y las propiedades CollectionKey
        public  OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel Clone(bool deep)
        {
             OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel  personasNotificacionesTrans = new  OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel();
            this.CopyTo(personasNotificacionesTrans , deep);
            return personasNotificacionesTrans ;
        }

        public OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel Clone()
        {
            OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel localClone = this.Clone(true);
            return localClone;
        }

        public virtual void CopyFrom(System.Collections.IDictionary dict, bool deep)
        {
            if ((dict == null))
            {
                throw new System.ArgumentNullException("dict");
            }
            if ((dict.Contains("Notificacion_Numero") == true))
            {
                this.Notificacion_Numero = ((int)(ConvertUtilities.ChangeType(dict["Notificacion_Numero"], typeof(int), -1)));
            }
            if ((dict.Contains("Notificacion_Vista") == true))
            {
                this.Notificacion_Vista = ((string)(ConvertUtilities.ChangeType(dict["Notificacion_Vista"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Notificacion_Vista_Fecha") == true))
            {
                this.Notificacion_Vista_Fecha = ((DateTime)(ConvertUtilities.ChangeType(dict["Notificacion_Vista_Fecha"], typeof(DateTime), System.DateTime.MinValue)));
            }
            if ((dict.Contains("Persona_Secuencia") == true))
            {
                this.Persona_Secuencia = ((int)(ConvertUtilities.ChangeType(dict["Persona_Secuencia"], typeof(int), -1)));
            }
            if ((dict.Contains("Registro_Estado") == true))
            {
                this.Registro_Estado = ((string)(ConvertUtilities.ChangeType(dict["Registro_Estado"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Registro_Fecha") == true))
            {
                this.Registro_Fecha = ((DateTime)(ConvertUtilities.ChangeType(dict["Registro_Fecha"], typeof(DateTime), System.DateTime.MinValue)));
            }
            if ((dict.Contains("Registro_Usuario") == true))
            {
                this.Registro_Usuario = ((string)(ConvertUtilities.ChangeType(dict["Registro_Usuario"], typeof(string), string.Empty)));
            }
        }

        public virtual void CopyTo( OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel  personasNotificacionesTrans, bool deep)
        {
            if ((personasNotificacionesTrans == null))
            {
                throw new System.ArgumentNullException("personasNotificacionesTrans");
            }
            personasNotificacionesTrans.Notificacion_Numero = this.Notificacion_Numero;
            personasNotificacionesTrans.Notificacion_Vista = this.Notificacion_Vista;
            personasNotificacionesTrans.Notificacion_Vista_Fecha = this.Notificacion_Vista_Fecha;
            personasNotificacionesTrans.Persona_Secuencia = this.Persona_Secuencia;
            personasNotificacionesTrans.Registro_Estado = this.Registro_Estado;
            personasNotificacionesTrans.Registro_Fecha = this.Registro_Fecha;
            personasNotificacionesTrans.Registro_Usuario = this.Registro_Usuario;
        }

	public static List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel> PageLoadAll(int pageIndex, int pageSize,
	        CodeFluent.Runtime.PageOptions pageOptions)
	    {
	        var pageLoadAll = OSIS.PEPPAM.BOM.Personas_Notificaciones_TransCollection.PageLoadAll(pageIndex, pageSize, pageOptions);

	        if (pageLoadAll == null)
	        {
                return new List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel>();
	        }

	        var result =  pageLoadAll.Select(
                _personasNotificacionesTrans => 
                    new OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel()
	        {
                Persona_Secuencia = _personasNotificacionesTrans.Persona_Secuencia,
                Notificacion_Numero = _personasNotificacionesTrans.Notificacion_Numero,
                Notificacion_Vista = _personasNotificacionesTrans.Notificacion_Vista,
                Notificacion_Vista_Fecha = _personasNotificacionesTrans.Notificacion_Vista_Fecha,
                Registro_Estado = _personasNotificacionesTrans.Registro_Estado,
                Registro_Fecha = _personasNotificacionesTrans.Registro_Fecha,
                Registro_Usuario = _personasNotificacionesTrans.Registro_Usuario,

	        }).ToList();

	        return result;
	    }

        public static List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel> LoadAll()
        {
            OSIS.PEPPAM.BOM.Personas_Notificaciones_TransCollection ret = OSIS.PEPPAM.BOM.Personas_Notificaciones_TransCollection.PageLoadAll(int.MinValue, int.MaxValue, null);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel>();
            }

            var result = ret.Select(
                _personasNotificacionesTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel()
                    {
                Persona_Secuencia = _personasNotificacionesTrans.Persona_Secuencia,
                Notificacion_Numero = _personasNotificacionesTrans.Notificacion_Numero,
                Notificacion_Vista = _personasNotificacionesTrans.Notificacion_Vista,
                Notificacion_Vista_Fecha = _personasNotificacionesTrans.Notificacion_Vista_Fecha,
                Registro_Estado = _personasNotificacionesTrans.Registro_Estado,
                Registro_Fecha = _personasNotificacionesTrans.Registro_Fecha,
                Registro_Usuario = _personasNotificacionesTrans.Registro_Usuario,

                    }).ToList();

            return result;
        }

        public static List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel> LoadByNotificaciones(OSIS.PEPPAM.Mvc.Models.Notificaciones_MasterModel notificaciones)
        {

            var _Notificaciones_Master = new OSIS.PEPPAM.BOM.Notificaciones_Master()
            {
                Notificacion_Numero = notificaciones.Notificacion_Numero,
                Prioridad_Numero = notificaciones.Prioridad_Numero,
                Notificacion_Descripcion = notificaciones.Notificacion_Descripcion,
                Notificacion_Mensaje = notificaciones.Notificacion_Mensaje,
                Registro_Estado = notificaciones.Registro_Estado,
                Registro_Fecha = notificaciones.Registro_Fecha,
                Registro_Usuario = notificaciones.Registro_Usuario,
            };


            OSIS.PEPPAM.BOM.Personas_Notificaciones_TransCollection ret = OSIS.PEPPAM.BOM.Personas_Notificaciones_TransCollection.LoadByNotificaciones(_Notificaciones_Master);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel>();
            }

            var result = ret.Select(
                _personasNotificacionesTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel()
                    {
                        Persona_Secuencia = _personasNotificacionesTrans.Persona_Secuencia,
                        Notificacion_Numero = _personasNotificacionesTrans.Notificacion_Numero,
                        Notificacion_Vista = _personasNotificacionesTrans.Notificacion_Vista,
                        Notificacion_Vista_Fecha = _personasNotificacionesTrans.Notificacion_Vista_Fecha,
                        Registro_Estado = _personasNotificacionesTrans.Registro_Estado,
                        Registro_Fecha = _personasNotificacionesTrans.Registro_Fecha,
                        Registro_Usuario = _personasNotificacionesTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }


    [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel> PageLoadByNotificaciones(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.Mvc.Models.Notificaciones_MasterModel notificaciones)
        {
            var _notificaciones = new OSIS.PEPPAM.BOM.Notificaciones_Master()
            {
                Notificacion_Numero = notificaciones.Notificacion_Numero,
                Prioridad_Numero = notificaciones.Prioridad_Numero,
                Notificacion_Descripcion = notificaciones.Notificacion_Descripcion,
                Notificacion_Mensaje = notificaciones.Notificacion_Mensaje,
                Registro_Estado = notificaciones.Registro_Estado,
                Registro_Fecha = notificaciones.Registro_Fecha,
                Registro_Usuario = notificaciones.Registro_Usuario,
            };
            OSIS.PEPPAM.BOM.Personas_Notificaciones_TransCollection ret = OSIS.PEPPAM.BOM.Personas_Notificaciones_TransCollection.PageLoadByNotificaciones(int.MinValue, int.MaxValue, null, _notificaciones);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel>();
            }

            var result = ret.Select(
                _personasNotificacionesTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel()
                    {
                        Persona_Secuencia = _personasNotificacionesTrans.Persona_Secuencia,
                        Notificacion_Numero = _personasNotificacionesTrans.Notificacion_Numero,
                        Notificacion_Vista = _personasNotificacionesTrans.Notificacion_Vista,
                        Notificacion_Vista_Fecha = _personasNotificacionesTrans.Notificacion_Vista_Fecha,
                        Registro_Estado = _personasNotificacionesTrans.Registro_Estado,
                        Registro_Fecha = _personasNotificacionesTrans.Registro_Fecha,
                        Registro_Usuario = _personasNotificacionesTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel> PageLoadByNotificaciones(int pageIndex, int pageSize,int notificacion_Numero)
        {
            OSIS.PEPPAM.BOM.Personas_Notificaciones_TransCollection ret = OSIS.PEPPAM.BOM.Personas_Notificaciones_TransCollection.PageLoadByNotificaciones(int.MinValue, int.MaxValue,
notificacion_Numero);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel>();
            }

            var result = ret.Select(
                _personasNotificacionesTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel()
                    {
                        Persona_Secuencia = _personasNotificacionesTrans.Persona_Secuencia,
                        Notificacion_Numero = _personasNotificacionesTrans.Notificacion_Numero,
                        Notificacion_Vista = _personasNotificacionesTrans.Notificacion_Vista,
                        Notificacion_Vista_Fecha = _personasNotificacionesTrans.Notificacion_Vista_Fecha,
                        Registro_Estado = _personasNotificacionesTrans.Registro_Estado,
                        Registro_Fecha = _personasNotificacionesTrans.Registro_Fecha,
                        Registro_Usuario = _personasNotificacionesTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }
        public static List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel> LoadByPersonas(OSIS.PEPPAM.Mvc.Models.Personas_MasterModel personas)
        {

            var _Personas_Master = new OSIS.PEPPAM.BOM.Personas_Master()
            {
                Persona_Secuencia = personas.Persona_Secuencia,
                Congregacion_Secuencia = personas.Congregacion_Secuencia,
                Persona_Congregacion = personas.Persona_Congregacion,
                Persona_Tipo_Secuencia = personas.Persona_Tipo_Secuencia,
                Persona_Nombres = personas.Persona_Nombres,
                Persona_Apellidos = personas.Persona_Apellidos,
                Persona_Conyuge_Apellido = personas.Persona_Conyuge_Apellido,
                Persona_Sexo = personas.Persona_Sexo,
                Persona_Correo = personas.Persona_Correo,
                Persona_Clave = personas.Persona_Clave,
                Persona_Verificacion_Numero = personas.Persona_Verificacion_Numero,
                Persona_Estado_Secuencia = personas.Persona_Estado_Secuencia,
                Registro_Estado = personas.Registro_Estado,
                Registro_Fecha = personas.Registro_Fecha,
                Registro_Usuario = personas.Registro_Usuario,
            };


            OSIS.PEPPAM.BOM.Personas_Notificaciones_TransCollection ret = OSIS.PEPPAM.BOM.Personas_Notificaciones_TransCollection.LoadByPersonas(_Personas_Master);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel>();
            }

            var result = ret.Select(
                _personasNotificacionesTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel()
                    {
                        Persona_Secuencia = _personasNotificacionesTrans.Persona_Secuencia,
                        Notificacion_Numero = _personasNotificacionesTrans.Notificacion_Numero,
                        Notificacion_Vista = _personasNotificacionesTrans.Notificacion_Vista,
                        Notificacion_Vista_Fecha = _personasNotificacionesTrans.Notificacion_Vista_Fecha,
                        Registro_Estado = _personasNotificacionesTrans.Registro_Estado,
                        Registro_Fecha = _personasNotificacionesTrans.Registro_Fecha,
                        Registro_Usuario = _personasNotificacionesTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }


    [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel> PageLoadByPersonas(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.Mvc.Models.Personas_MasterModel personas)
        {
            var _personas = new OSIS.PEPPAM.BOM.Personas_Master()
            {
                Persona_Secuencia = personas.Persona_Secuencia,
                Congregacion_Secuencia = personas.Congregacion_Secuencia,
                Persona_Congregacion = personas.Persona_Congregacion,
                Persona_Tipo_Secuencia = personas.Persona_Tipo_Secuencia,
                Persona_Nombres = personas.Persona_Nombres,
                Persona_Apellidos = personas.Persona_Apellidos,
                Persona_Conyuge_Apellido = personas.Persona_Conyuge_Apellido,
                Persona_Sexo = personas.Persona_Sexo,
                Persona_Correo = personas.Persona_Correo,
                Persona_Clave = personas.Persona_Clave,
                Persona_Verificacion_Numero = personas.Persona_Verificacion_Numero,
                Persona_Estado_Secuencia = personas.Persona_Estado_Secuencia,
                Registro_Estado = personas.Registro_Estado,
                Registro_Fecha = personas.Registro_Fecha,
                Registro_Usuario = personas.Registro_Usuario,
            };
            OSIS.PEPPAM.BOM.Personas_Notificaciones_TransCollection ret = OSIS.PEPPAM.BOM.Personas_Notificaciones_TransCollection.PageLoadByPersonas(int.MinValue, int.MaxValue, null, _personas);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel>();
            }

            var result = ret.Select(
                _personasNotificacionesTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel()
                    {
                        Persona_Secuencia = _personasNotificacionesTrans.Persona_Secuencia,
                        Notificacion_Numero = _personasNotificacionesTrans.Notificacion_Numero,
                        Notificacion_Vista = _personasNotificacionesTrans.Notificacion_Vista,
                        Notificacion_Vista_Fecha = _personasNotificacionesTrans.Notificacion_Vista_Fecha,
                        Registro_Estado = _personasNotificacionesTrans.Registro_Estado,
                        Registro_Fecha = _personasNotificacionesTrans.Registro_Fecha,
                        Registro_Usuario = _personasNotificacionesTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel> PageLoadByPersonas(int pageIndex, int pageSize,int persona_Secuencia)
        {
            OSIS.PEPPAM.BOM.Personas_Notificaciones_TransCollection ret = OSIS.PEPPAM.BOM.Personas_Notificaciones_TransCollection.PageLoadByPersonas(int.MinValue, int.MaxValue,
persona_Secuencia);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel>();
            }

            var result = ret.Select(
                _personasNotificacionesTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel()
                    {
                        Persona_Secuencia = _personasNotificacionesTrans.Persona_Secuencia,
                        Notificacion_Numero = _personasNotificacionesTrans.Notificacion_Numero,
                        Notificacion_Vista = _personasNotificacionesTrans.Notificacion_Vista,
                        Notificacion_Vista_Fecha = _personasNotificacionesTrans.Notificacion_Vista_Fecha,
                        Registro_Estado = _personasNotificacionesTrans.Registro_Estado,
                        Registro_Fecha = _personasNotificacionesTrans.Registro_Fecha,
                        Registro_Usuario = _personasNotificacionesTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }
	public static List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel> PageLoadAllPaging(int pageIndex, int pageSize, string searchString,
	        CodeFluent.Runtime.PageOptions pageOptions, out int totalCount)
	    {
	        var pageLoadAll = OSIS.PEPPAM.BOM.Personas_Notificaciones_TransCollection.PageLoadAllPaging(pageIndex, pageSize, searchString, pageOptions);

	        totalCount = pageLoadAll.TotalRowCount;
	        if (pageLoadAll == null)
	        {
                return new List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel>();
	        }

	        var result =  pageLoadAll.Select(
                _personasNotificacionesTrans => 
                    new OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel()
	        {
                Persona_Secuencia = _personasNotificacionesTrans.Persona_Secuencia,
                Notificacion_Numero = _personasNotificacionesTrans.Notificacion_Numero,
                Notificacion_Vista = _personasNotificacionesTrans.Notificacion_Vista,
                Notificacion_Vista_Fecha = _personasNotificacionesTrans.Notificacion_Vista_Fecha,
                Registro_Estado = _personasNotificacionesTrans.Registro_Estado,
                Registro_Fecha = _personasNotificacionesTrans.Registro_Fecha,
                Registro_Usuario = _personasNotificacionesTrans.Registro_Usuario,

	        }).ToList();

	        return result;
	    }

        public static List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel> LoadAllPaging(string searchString, out int totalCount)
        {
            OSIS.PEPPAM.BOM.Personas_Notificaciones_TransCollection ret = OSIS.PEPPAM.BOM.Personas_Notificaciones_TransCollection.PageLoadAllPaging(1, 1000000,searchString, null);

	            totalCount = ret.TotalRowCount;
            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel>();
            }

            var result = ret.Select(
                _personasNotificacionesTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Personas_Notificaciones_TransModel()
                    {
                Persona_Secuencia = _personasNotificacionesTrans.Persona_Secuencia,
                Notificacion_Numero = _personasNotificacionesTrans.Notificacion_Numero,
                Notificacion_Vista = _personasNotificacionesTrans.Notificacion_Vista,
                Notificacion_Vista_Fecha = _personasNotificacionesTrans.Notificacion_Vista_Fecha,
                Registro_Estado = _personasNotificacionesTrans.Registro_Estado,
                Registro_Fecha = _personasNotificacionesTrans.Registro_Fecha,
                Registro_Usuario = _personasNotificacionesTrans.Registro_Usuario,

                    }).ToList();

            return result;
        }


public static OSIS.PEPPAM.Mvc.Models.Proc_Notificaciones_RegistrarModel RegistrarNotificacion(int? notificacionNumero,string registroUsuario,int? roleNumero,int? rutaSecuencia,int? zonaSecuencia)
        {
            var _registrar_Notificacion = OSIS.PEPPAM.BOM.Personas_Notificaciones_Trans.RegistrarNotificacion(
notificacionNumero,registroUsuario,roleNumero,rutaSecuencia,zonaSecuencia);
            if ((_registrar_Notificacion == null))
            {
                return new OSIS.PEPPAM.Mvc.Models.Proc_Notificaciones_RegistrarModel();
            }


	        var _procNotificacionesRegistrar = new OSIS.PEPPAM.Mvc.Models.Proc_Notificaciones_RegistrarModel()
            {
                Cantidad_Afectados = _registrar_Notificacion.Cantidad_Afectados
            };
            return _procNotificacionesRegistrar;
            }


public static OSIS.PEPPAM.Mvc.Models.Proc_Notificaciones_ActualizarModel ActualizarNotificacion(int? notificacionNumero,string registroEstado,string registroUsuario,int? roleNumero,int? rutaSecuencia,int? zonaSecuencia)
        {
            var _actualizar_Notificacion = OSIS.PEPPAM.BOM.Personas_Notificaciones_Trans.ActualizarNotificacion(
notificacionNumero,registroEstado,registroUsuario,roleNumero,rutaSecuencia,zonaSecuencia);
            if ((_actualizar_Notificacion == null))
            {
                return new OSIS.PEPPAM.Mvc.Models.Proc_Notificaciones_ActualizarModel();
            }


	        var _procNotificacionesActualizar = new OSIS.PEPPAM.Mvc.Models.Proc_Notificaciones_ActualizarModel()
            {
                Cantidad_Afectados = _actualizar_Notificacion.Cantidad_Afectados
            };
            return _procNotificacionesActualizar;
            }

	} 
} 


