//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 6/19/2014 1:29:30 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System; 
using System.Web; 
using System.Linq; 
using System.Collections.Generic; 
using CodeFluent.Runtime; 
using CodeFluent.Runtime.Utilities; 
using System.ComponentModel.DataAnnotations; 
using FluentValidation; 
using FluentValidation.Attributes; 
using OSIS.PEPPAM.Mvc.Models; 

namespace OSIS.PEPPAM.Mvc.Models 
{ 
	public partial class Persona_Contactos_TransModel
	{

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Persona_Contactos_Trans","Persona_Contacto_Secuencia")]
		public int Persona_Contacto_Secuencia { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Persona_Contactos_Trans","Persona_Secuencia")]
		public int Persona_Secuencia { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Persona_Contactos_Trans","Contacto_Tipo_Secuencia")]
		public int Contacto_Tipo_Secuencia { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Persona_Contactos_Trans","Persona_Contacto_Informacion")]
		public String Persona_Contacto_Informacion { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Persona_Contactos_Trans","Persona_Contacto_Nota")]
		public String Persona_Contacto_Nota { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Persona_Contactos_Trans","Registro_Estado")]
		public String Registro_Estado { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Persona_Contactos_Trans","Registro_Fecha")]
		public DateTime Registro_Fecha { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Persona_Contactos_Trans","Registro_Usuario")]
		public String Registro_Usuario { get; set; } 

		#region Navigation Properties

        public OSIS.PEPPAM.Mvc.Models.Contacto_Tipo_CataModel _contacto_Tipo;
		/// <summary>
		/// The navigation definition for walking [Persona_Contactos_Trans]->[Contacto_Tipo_Cata]
		/// Relationship Links: 
		/// [Contacto_Tipo_Cata.Contacto_Tipo_Secuencia = Persona_Contactos_Trans.Contacto_Tipo_Secuencia] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.Mvc.Models.Contacto_Tipo_CataModel ContactoTipo
		{
			get
			{
                if ((this._contacto_Tipo == null))
                {
                    this._contacto_Tipo = OSIS.PEPPAM.Mvc.Models.Contacto_Tipo_CataModel.Load(Contacto_Tipo_Secuencia);
                }
                return this._contacto_Tipo;
			}
		}

     private List<OSIS.PEPPAM.Mvc.Models.Contacto_Tipo_CataModel> _contacto_TipoList;
		public virtual List<OSIS.PEPPAM.Mvc.Models.Contacto_Tipo_CataModel> ContactoTipoList
		{
			get
			{
                if ((this._contacto_TipoList == null))
                {
                    this._contacto_TipoList = OSIS.PEPPAM.Mvc.Models.Contacto_Tipo_CataModel.LoadAll();
                }
                return this._contacto_TipoList;
			}
		}

        public OSIS.PEPPAM.Mvc.Models.Personas_MasterModel _persona;
		/// <summary>
		/// The navigation definition for walking [Persona_Contactos_Trans]->[Personas_Master]
		/// Relationship Links: 
		/// [Personas_Master.Persona_Secuencia = Persona_Contactos_Trans.Persona_Secuencia] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.Mvc.Models.Personas_MasterModel Persona
		{
			get
			{
                if ((this._persona == null))
                {
                    this._persona = OSIS.PEPPAM.Mvc.Models.Personas_MasterModel.Load(Persona_Secuencia);
                }
                return this._persona;
			}
		}

     private List<OSIS.PEPPAM.Mvc.Models.Personas_MasterModel> _personaList;
		public virtual List<OSIS.PEPPAM.Mvc.Models.Personas_MasterModel> PersonaList
		{
			get
			{
                if ((this._personaList == null))
                {
                    this._personaList = OSIS.PEPPAM.Mvc.Models.Personas_MasterModel.LoadAll();
                }
                return this._personaList;
			}
		}

		#endregion

        public virtual string EntityKey
        {
            get
            {
                object[] keys = new object[] {
                        this.Persona_Contacto_Secuencia,
                        this.Persona_Secuencia,
                        this.Contacto_Tipo_Secuencia
                 };
                string v = CodeFluentPersistence.BuildEntityKey(keys);
                return v;
            }
            set
            {
                System.Type[] types = new System.Type[] {
                        typeof(int),
                        typeof(int),
                        typeof(int)
                        };
                object[] defaultValues = new object[] {
                        -1,
                        -1,
                        -1
                        };
                object[] v1 = CodeFluentPersistence.ParseEntityKey(value, types, defaultValues);
                this. Persona_Contacto_Secuencia = ((int)(v1[0]));
                this. Persona_Secuencia = ((int)(v1[1]));
                this. Contacto_Tipo_Secuencia = ((int)(v1[2]));
            }
        }

        public virtual string EntityDisplayName
        {
            get
            {
                return this.Persona_Contacto_Informacion.ToString();
            }
        }
        

        public Persona_Contactos_TransModel()
        {
            this.Persona_Contacto_Secuencia = -1;
            this.Persona_Secuencia = -1;
            this.Contacto_Tipo_Secuencia = -1;
            this.Persona_Contacto_Informacion = string.Empty;
            this.Persona_Contacto_Nota = string.Empty;
            this.Registro_Estado = "A";
            this.Registro_Fecha = DateTime.Now;
            this.Registro_Usuario = HttpContext.Current != null ? HttpContext.Current.User.Identity.Name : "";
            Persona_Contactos_TransPartial();
        }

            partial void Persona_Contactos_TransPartial();

        public virtual bool Equals(OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel personaContactosTrans)
        {
            if ((personaContactosTrans == null))
            {
                return false;
            }

            if (
                    (this.Persona_Contacto_Secuencia == -1)
                    ||
                    (this.Persona_Secuencia == -1)
                    ||
                    (this.Contacto_Tipo_Secuencia == -1)
            )
            {
                return base.Equals(personaContactosTrans);
            }

 return ((
                    (this.Persona_Contacto_Secuencia.Equals(personaContactosTrans.Persona_Contacto_Secuencia))
                    &&
                    (this.Persona_Secuencia.Equals(personaContactosTrans.Persona_Secuencia))
                    &&
                    (this.Contacto_Tipo_Secuencia.Equals(personaContactosTrans.Contacto_Tipo_Secuencia))
                        )== true);
        }

        public override bool Equals(object obj)
        {
            OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel personaContactosTrans = null;
			 personaContactosTrans = obj as OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel;
            return this.Equals( personaContactosTrans);
        }

        public override int GetHashCode()
        {
            if ((this.EntityKey == null))
            {
                return base.GetHashCode();
            }
            return this.EntityKey.GetHashCode();
        }
        
        public virtual int CompareTo(OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel personaContactosTrans)
        {
            if ((personaContactosTrans == null))
            {
                throw new System.ArgumentNullException("personaContactosTrans");
            }
            int localCompareTo = this.Persona_Contacto_Secuencia.CompareTo(personaContactosTrans.Persona_Contacto_Secuencia);
            return localCompareTo;
        }

        public static OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel Load(int persona_Contacto_Secuencia,int persona_Secuencia,int contacto_Tipo_Secuencia)
        {
            var _personaContactosTransDb = OSIS.PEPPAM.BOM.Persona_Contactos_Trans.Load(persona_Contacto_Secuencia,persona_Secuencia,contacto_Tipo_Secuencia);
	        if (_personaContactosTransDb == null)
	        {
                return null;
	        }

	        var _personaContactosTrans = new OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel()
            {
                Persona_Contacto_Secuencia = _personaContactosTransDb.Persona_Contacto_Secuencia,
                Persona_Secuencia = _personaContactosTransDb.Persona_Secuencia,
                Contacto_Tipo_Secuencia = _personaContactosTransDb.Contacto_Tipo_Secuencia,
                Persona_Contacto_Informacion = _personaContactosTransDb.Persona_Contacto_Informacion,
                Persona_Contacto_Nota = _personaContactosTransDb.Persona_Contacto_Nota,
                Registro_Estado = _personaContactosTransDb.Registro_Estado,
                Registro_Fecha = _personaContactosTransDb.Registro_Fecha,
                Registro_Usuario = _personaContactosTransDb.Registro_Usuario,

            };

	        return _personaContactosTrans;
       }

     public virtual bool Save()
	        {
             var _personaContactosTransDb = new OSIS.PEPPAM.BOM.Persona_Contactos_Trans()
	            {
                Persona_Contacto_Secuencia = this.Persona_Contacto_Secuencia,
                Persona_Secuencia = this.Persona_Secuencia,
                Contacto_Tipo_Secuencia = this.Contacto_Tipo_Secuencia,
                Persona_Contacto_Informacion = this.Persona_Contacto_Informacion,
                Persona_Contacto_Nota = this.Persona_Contacto_Nota,
                Registro_Estado = this.Registro_Estado,
                Registro_Fecha = this.Registro_Fecha,
                Registro_Usuario = this.Registro_Usuario
	            };

	            var result  = _personaContactosTransDb.Save();
             //TODO: Puede ser que solo sean los Identity y no todo los primary keys
             this.Persona_Contacto_Secuencia = _personaContactosTransDb.Persona_Contacto_Secuencia;
             //TODO: Puede ser que solo sean los Identity y no todo los primary keys
             this.Persona_Secuencia = _personaContactosTransDb.Persona_Secuencia;
             //TODO: Puede ser que solo sean los Identity y no todo los primary keys
             this.Contacto_Tipo_Secuencia = _personaContactosTransDb.Contacto_Tipo_Secuencia;

             return result;

	        }

        public static bool Save(OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel personaContactosTrans)
        {
            if ((personaContactosTrans == null))
            {
                return false;
            }
            bool ret = personaContactosTrans.Save();
            return ret;
        }

        public static bool Insert(OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel personaContactosTrans)
        {
            bool ret = OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel.Save(personaContactosTrans);
            return ret;
        }

        public static void SaveAll(List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel> personaContactosTrans)
        {
            int index;
            for (index = (personaContactosTrans.Count - 1); (index >= 0); index = (index - 1))
            {
                OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel _personaContactosTrans = personaContactosTrans[index];
                _personaContactosTrans.Save();
            }
        }

        public static bool Delete(OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel personaContactosTrans)
        {
            if ((personaContactosTrans == null))
            {
                return false;
            }
            bool ret = personaContactosTrans.Delete();
            return ret;
        }

         public virtual bool Delete()
	        {
             var _personaContactosTransDb = new OSIS.PEPPAM.BOM.Persona_Contactos_Trans()
	            {
                Persona_Contacto_Secuencia = this.Persona_Contacto_Secuencia,
                Persona_Secuencia = this.Persona_Secuencia,
                Contacto_Tipo_Secuencia = this.Contacto_Tipo_Secuencia,

	            };

	            return _personaContactosTransDb.Delete();

	        }

        public static bool Delete(int persona_Contacto_Secuencia,int persona_Secuencia,int contacto_Tipo_Secuencia)
        {
            if ((persona_Contacto_Secuencia == default(int)))
            {
                return false;
            }
            if ((persona_Secuencia == default(int)))
            {
                return false;
            }
            if ((contacto_Tipo_Secuencia == default(int)))
            {
                return false;
            }
             var _personaContactosTransDb = OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel.Load(persona_Contacto_Secuencia,persona_Secuencia,contacto_Tipo_Secuencia);
            return _personaContactosTransDb.Delete();
        }

        public string Trace()
	        {
             var _personaContactosTransDb = new OSIS.PEPPAM.BOM.Persona_Contactos_Trans()
	            {
                Persona_Contacto_Secuencia = this.Persona_Contacto_Secuencia,
                Persona_Secuencia = this.Persona_Secuencia,
                Contacto_Tipo_Secuencia = this.Contacto_Tipo_Secuencia,
                Persona_Contacto_Informacion = this.Persona_Contacto_Informacion,
                Persona_Contacto_Nota = this.Persona_Contacto_Nota,
                Registro_Estado = this.Registro_Estado,
                Registro_Fecha = this.Registro_Fecha,
                Registro_Usuario = this.Registro_Usuario
	            };

	            return _personaContactosTransDb.Trace();

	        }

        public static OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel LoadByEntityKey(string key)
        {
            if ((key == string.Empty))
            {
                return null;
            }
            OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel personaContactosTrans;
            System.Type[] types = new System.Type[] {
                    typeof(int),                    typeof(int),                    typeof(int)                    };
            object[] defaultValues = new object[] {
                    -1,                    -1,                    -1                    };
            object[] v = CodeFluentPersistence.ParseEntityKey(key, types, defaultValues);
                    int var0;            var0 = ((int)(v[0]));
                    int var1;            var1 = ((int)(v[1]));
                    int var2;            var2 = ((int)(v[2]));
            personaContactosTrans = OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel.Load( var0, var1, var2);
            return personaContactosTrans;
        }


// Metodos Definidos en el Modelo y las propiedades CollectionKey
        public  OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel Clone(bool deep)
        {
             OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel  personaContactosTrans = new  OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel();
            this.CopyTo(personaContactosTrans , deep);
            return personaContactosTrans ;
        }

        public OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel Clone()
        {
            OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel localClone = this.Clone(true);
            return localClone;
        }

        public virtual void CopyFrom(System.Collections.IDictionary dict, bool deep)
        {
            if ((dict == null))
            {
                throw new System.ArgumentNullException("dict");
            }
            if ((dict.Contains("Contacto_Tipo_Secuencia") == true))
            {
                this.Contacto_Tipo_Secuencia = ((int)(ConvertUtilities.ChangeType(dict["Contacto_Tipo_Secuencia"], typeof(int), -1)));
            }
            if ((dict.Contains("Persona_Contacto_Informacion") == true))
            {
                this.Persona_Contacto_Informacion = ((string)(ConvertUtilities.ChangeType(dict["Persona_Contacto_Informacion"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Persona_Contacto_Nota") == true))
            {
                this.Persona_Contacto_Nota = ((string)(ConvertUtilities.ChangeType(dict["Persona_Contacto_Nota"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Persona_Contacto_Secuencia") == true))
            {
                this.Persona_Contacto_Secuencia = ((int)(ConvertUtilities.ChangeType(dict["Persona_Contacto_Secuencia"], typeof(int), -1)));
            }
            if ((dict.Contains("Persona_Secuencia") == true))
            {
                this.Persona_Secuencia = ((int)(ConvertUtilities.ChangeType(dict["Persona_Secuencia"], typeof(int), -1)));
            }
            if ((dict.Contains("Registro_Estado") == true))
            {
                this.Registro_Estado = ((string)(ConvertUtilities.ChangeType(dict["Registro_Estado"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Registro_Fecha") == true))
            {
                this.Registro_Fecha = ((DateTime)(ConvertUtilities.ChangeType(dict["Registro_Fecha"], typeof(DateTime), System.DateTime.MinValue)));
            }
            if ((dict.Contains("Registro_Usuario") == true))
            {
                this.Registro_Usuario = ((string)(ConvertUtilities.ChangeType(dict["Registro_Usuario"], typeof(string), string.Empty)));
            }
        }

        public virtual void CopyTo( OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel  personaContactosTrans, bool deep)
        {
            if ((personaContactosTrans == null))
            {
                throw new System.ArgumentNullException("personaContactosTrans");
            }
            personaContactosTrans.Contacto_Tipo_Secuencia = this.Contacto_Tipo_Secuencia;
            personaContactosTrans.Persona_Contacto_Informacion = this.Persona_Contacto_Informacion;
            personaContactosTrans.Persona_Contacto_Nota = this.Persona_Contacto_Nota;
            personaContactosTrans.Persona_Contacto_Secuencia = this.Persona_Contacto_Secuencia;
            personaContactosTrans.Persona_Secuencia = this.Persona_Secuencia;
            personaContactosTrans.Registro_Estado = this.Registro_Estado;
            personaContactosTrans.Registro_Fecha = this.Registro_Fecha;
            personaContactosTrans.Registro_Usuario = this.Registro_Usuario;
        }

	public static List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel> PageLoadAll(int pageIndex, int pageSize,
	        CodeFluent.Runtime.PageOptions pageOptions)
	    {
	        var pageLoadAll = OSIS.PEPPAM.BOM.Persona_Contactos_TransCollection.PageLoadAll(pageIndex, pageSize, pageOptions);

	        if (pageLoadAll == null)
	        {
                return new List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel>();
	        }

	        var result =  pageLoadAll.Select(
                _personaContactosTrans => 
                    new OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel()
	        {
                Persona_Contacto_Secuencia = _personaContactosTrans.Persona_Contacto_Secuencia,
                Persona_Secuencia = _personaContactosTrans.Persona_Secuencia,
                Contacto_Tipo_Secuencia = _personaContactosTrans.Contacto_Tipo_Secuencia,
                Persona_Contacto_Informacion = _personaContactosTrans.Persona_Contacto_Informacion,
                Persona_Contacto_Nota = _personaContactosTrans.Persona_Contacto_Nota,
                Registro_Estado = _personaContactosTrans.Registro_Estado,
                Registro_Fecha = _personaContactosTrans.Registro_Fecha,
                Registro_Usuario = _personaContactosTrans.Registro_Usuario,

	        }).ToList();

	        return result;
	    }

        public static List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel> LoadAll()
        {
            OSIS.PEPPAM.BOM.Persona_Contactos_TransCollection ret = OSIS.PEPPAM.BOM.Persona_Contactos_TransCollection.PageLoadAll(int.MinValue, int.MaxValue, null);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel>();
            }

            var result = ret.Select(
                _personaContactosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel()
                    {
                Persona_Contacto_Secuencia = _personaContactosTrans.Persona_Contacto_Secuencia,
                Persona_Secuencia = _personaContactosTrans.Persona_Secuencia,
                Contacto_Tipo_Secuencia = _personaContactosTrans.Contacto_Tipo_Secuencia,
                Persona_Contacto_Informacion = _personaContactosTrans.Persona_Contacto_Informacion,
                Persona_Contacto_Nota = _personaContactosTrans.Persona_Contacto_Nota,
                Registro_Estado = _personaContactosTrans.Registro_Estado,
                Registro_Fecha = _personaContactosTrans.Registro_Fecha,
                Registro_Usuario = _personaContactosTrans.Registro_Usuario,

                    }).ToList();

            return result;
        }

        public static List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel> LoadByContactoTipo(OSIS.PEPPAM.Mvc.Models.Contacto_Tipo_CataModel contacto_Tipo)
        {

            var _Contacto_Tipo_Cata = new OSIS.PEPPAM.BOM.Contacto_Tipo_Cata()
            {
                Contacto_Tipo_Secuencia = contacto_Tipo.Contacto_Tipo_Secuencia,
                Contacto_Tipo_Descripcion = contacto_Tipo.Contacto_Tipo_Descripcion,
                Registro_Estado = contacto_Tipo.Registro_Estado,
                Registro_Fecha = contacto_Tipo.Registro_Fecha,
                Registro_Usuario = contacto_Tipo.Registro_Usuario,
            };


            OSIS.PEPPAM.BOM.Persona_Contactos_TransCollection ret = OSIS.PEPPAM.BOM.Persona_Contactos_TransCollection.LoadByContactoTipo(_Contacto_Tipo_Cata);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel>();
            }

            var result = ret.Select(
                _personaContactosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel()
                    {
                        Persona_Contacto_Secuencia = _personaContactosTrans.Persona_Contacto_Secuencia,
                        Persona_Secuencia = _personaContactosTrans.Persona_Secuencia,
                        Contacto_Tipo_Secuencia = _personaContactosTrans.Contacto_Tipo_Secuencia,
                        Persona_Contacto_Informacion = _personaContactosTrans.Persona_Contacto_Informacion,
                        Persona_Contacto_Nota = _personaContactosTrans.Persona_Contacto_Nota,
                        Registro_Estado = _personaContactosTrans.Registro_Estado,
                        Registro_Fecha = _personaContactosTrans.Registro_Fecha,
                        Registro_Usuario = _personaContactosTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }


    [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel> PageLoadByContactoTipo(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.Mvc.Models.Contacto_Tipo_CataModel contacto_Tipo)
        {
            var _contacto_Tipo = new OSIS.PEPPAM.BOM.Contacto_Tipo_Cata()
            {
                Contacto_Tipo_Secuencia = contacto_Tipo.Contacto_Tipo_Secuencia,
                Contacto_Tipo_Descripcion = contacto_Tipo.Contacto_Tipo_Descripcion,
                Registro_Estado = contacto_Tipo.Registro_Estado,
                Registro_Fecha = contacto_Tipo.Registro_Fecha,
                Registro_Usuario = contacto_Tipo.Registro_Usuario,
            };
            OSIS.PEPPAM.BOM.Persona_Contactos_TransCollection ret = OSIS.PEPPAM.BOM.Persona_Contactos_TransCollection.PageLoadByContactoTipo(int.MinValue, int.MaxValue, null, _contacto_Tipo);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel>();
            }

            var result = ret.Select(
                _personaContactosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel()
                    {
                        Persona_Contacto_Secuencia = _personaContactosTrans.Persona_Contacto_Secuencia,
                        Persona_Secuencia = _personaContactosTrans.Persona_Secuencia,
                        Contacto_Tipo_Secuencia = _personaContactosTrans.Contacto_Tipo_Secuencia,
                        Persona_Contacto_Informacion = _personaContactosTrans.Persona_Contacto_Informacion,
                        Persona_Contacto_Nota = _personaContactosTrans.Persona_Contacto_Nota,
                        Registro_Estado = _personaContactosTrans.Registro_Estado,
                        Registro_Fecha = _personaContactosTrans.Registro_Fecha,
                        Registro_Usuario = _personaContactosTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel> PageLoadByContactoTipo(int pageIndex, int pageSize,int contacto_Tipo_Secuencia)
        {
            OSIS.PEPPAM.BOM.Persona_Contactos_TransCollection ret = OSIS.PEPPAM.BOM.Persona_Contactos_TransCollection.PageLoadByContactoTipo(int.MinValue, int.MaxValue,
contacto_Tipo_Secuencia);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel>();
            }

            var result = ret.Select(
                _personaContactosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel()
                    {
                        Persona_Contacto_Secuencia = _personaContactosTrans.Persona_Contacto_Secuencia,
                        Persona_Secuencia = _personaContactosTrans.Persona_Secuencia,
                        Contacto_Tipo_Secuencia = _personaContactosTrans.Contacto_Tipo_Secuencia,
                        Persona_Contacto_Informacion = _personaContactosTrans.Persona_Contacto_Informacion,
                        Persona_Contacto_Nota = _personaContactosTrans.Persona_Contacto_Nota,
                        Registro_Estado = _personaContactosTrans.Registro_Estado,
                        Registro_Fecha = _personaContactosTrans.Registro_Fecha,
                        Registro_Usuario = _personaContactosTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }
        public static List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel> LoadByPersona(OSIS.PEPPAM.Mvc.Models.Personas_MasterModel persona)
        {

            var _Personas_Master = new OSIS.PEPPAM.BOM.Personas_Master()
            {
                Persona_Secuencia = persona.Persona_Secuencia,
                Congregacion_Secuencia = persona.Congregacion_Secuencia,
                Persona_Congregacion = persona.Persona_Congregacion,
                Persona_Tipo_Secuencia = persona.Persona_Tipo_Secuencia,
                Persona_Nombres = persona.Persona_Nombres,
                Persona_Apellidos = persona.Persona_Apellidos,
                Persona_Conyuge_Apellido = persona.Persona_Conyuge_Apellido,
                Persona_Sexo = persona.Persona_Sexo,
                Persona_Correo = persona.Persona_Correo,
                Persona_Clave = persona.Persona_Clave,
                Persona_Verificacion_Numero = persona.Persona_Verificacion_Numero,
                Persona_Estado_Secuencia = persona.Persona_Estado_Secuencia,
                Registro_Estado = persona.Registro_Estado,
                Registro_Fecha = persona.Registro_Fecha,
                Registro_Usuario = persona.Registro_Usuario,
            };


            OSIS.PEPPAM.BOM.Persona_Contactos_TransCollection ret = OSIS.PEPPAM.BOM.Persona_Contactos_TransCollection.LoadByPersona(_Personas_Master);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel>();
            }

            var result = ret.Select(
                _personaContactosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel()
                    {
                        Persona_Contacto_Secuencia = _personaContactosTrans.Persona_Contacto_Secuencia,
                        Persona_Secuencia = _personaContactosTrans.Persona_Secuencia,
                        Contacto_Tipo_Secuencia = _personaContactosTrans.Contacto_Tipo_Secuencia,
                        Persona_Contacto_Informacion = _personaContactosTrans.Persona_Contacto_Informacion,
                        Persona_Contacto_Nota = _personaContactosTrans.Persona_Contacto_Nota,
                        Registro_Estado = _personaContactosTrans.Registro_Estado,
                        Registro_Fecha = _personaContactosTrans.Registro_Fecha,
                        Registro_Usuario = _personaContactosTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }


    [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel> PageLoadByPersona(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.Mvc.Models.Personas_MasterModel persona)
        {
            var _persona = new OSIS.PEPPAM.BOM.Personas_Master()
            {
                Persona_Secuencia = persona.Persona_Secuencia,
                Congregacion_Secuencia = persona.Congregacion_Secuencia,
                Persona_Congregacion = persona.Persona_Congregacion,
                Persona_Tipo_Secuencia = persona.Persona_Tipo_Secuencia,
                Persona_Nombres = persona.Persona_Nombres,
                Persona_Apellidos = persona.Persona_Apellidos,
                Persona_Conyuge_Apellido = persona.Persona_Conyuge_Apellido,
                Persona_Sexo = persona.Persona_Sexo,
                Persona_Correo = persona.Persona_Correo,
                Persona_Clave = persona.Persona_Clave,
                Persona_Verificacion_Numero = persona.Persona_Verificacion_Numero,
                Persona_Estado_Secuencia = persona.Persona_Estado_Secuencia,
                Registro_Estado = persona.Registro_Estado,
                Registro_Fecha = persona.Registro_Fecha,
                Registro_Usuario = persona.Registro_Usuario,
            };
            OSIS.PEPPAM.BOM.Persona_Contactos_TransCollection ret = OSIS.PEPPAM.BOM.Persona_Contactos_TransCollection.PageLoadByPersona(int.MinValue, int.MaxValue, null, _persona);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel>();
            }

            var result = ret.Select(
                _personaContactosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel()
                    {
                        Persona_Contacto_Secuencia = _personaContactosTrans.Persona_Contacto_Secuencia,
                        Persona_Secuencia = _personaContactosTrans.Persona_Secuencia,
                        Contacto_Tipo_Secuencia = _personaContactosTrans.Contacto_Tipo_Secuencia,
                        Persona_Contacto_Informacion = _personaContactosTrans.Persona_Contacto_Informacion,
                        Persona_Contacto_Nota = _personaContactosTrans.Persona_Contacto_Nota,
                        Registro_Estado = _personaContactosTrans.Registro_Estado,
                        Registro_Fecha = _personaContactosTrans.Registro_Fecha,
                        Registro_Usuario = _personaContactosTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel> PageLoadByPersona(int pageIndex, int pageSize,int persona_Secuencia)
        {
            OSIS.PEPPAM.BOM.Persona_Contactos_TransCollection ret = OSIS.PEPPAM.BOM.Persona_Contactos_TransCollection.PageLoadByPersona(int.MinValue, int.MaxValue,
persona_Secuencia);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel>();
            }

            var result = ret.Select(
                _personaContactosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel()
                    {
                        Persona_Contacto_Secuencia = _personaContactosTrans.Persona_Contacto_Secuencia,
                        Persona_Secuencia = _personaContactosTrans.Persona_Secuencia,
                        Contacto_Tipo_Secuencia = _personaContactosTrans.Contacto_Tipo_Secuencia,
                        Persona_Contacto_Informacion = _personaContactosTrans.Persona_Contacto_Informacion,
                        Persona_Contacto_Nota = _personaContactosTrans.Persona_Contacto_Nota,
                        Registro_Estado = _personaContactosTrans.Registro_Estado,
                        Registro_Fecha = _personaContactosTrans.Registro_Fecha,
                        Registro_Usuario = _personaContactosTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }
	public static List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel> PageLoadAllPaging(int pageIndex, int pageSize, string searchString,
	        CodeFluent.Runtime.PageOptions pageOptions, out int totalCount)
	    {
	        var pageLoadAll = OSIS.PEPPAM.BOM.Persona_Contactos_TransCollection.PageLoadAllPaging(pageIndex, pageSize, searchString, pageOptions);

	        totalCount = pageLoadAll.TotalRowCount;
	        if (pageLoadAll == null)
	        {
                return new List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel>();
	        }

	        var result =  pageLoadAll.Select(
                _personaContactosTrans => 
                    new OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel()
	        {
                Persona_Contacto_Secuencia = _personaContactosTrans.Persona_Contacto_Secuencia,
                Persona_Secuencia = _personaContactosTrans.Persona_Secuencia,
                Contacto_Tipo_Secuencia = _personaContactosTrans.Contacto_Tipo_Secuencia,
                Persona_Contacto_Informacion = _personaContactosTrans.Persona_Contacto_Informacion,
                Persona_Contacto_Nota = _personaContactosTrans.Persona_Contacto_Nota,
                Registro_Estado = _personaContactosTrans.Registro_Estado,
                Registro_Fecha = _personaContactosTrans.Registro_Fecha,
                Registro_Usuario = _personaContactosTrans.Registro_Usuario,

	        }).ToList();

	        return result;
	    }

        public static List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel> LoadAllPaging(string searchString, out int totalCount)
        {
            OSIS.PEPPAM.BOM.Persona_Contactos_TransCollection ret = OSIS.PEPPAM.BOM.Persona_Contactos_TransCollection.PageLoadAllPaging(1, 1000000,searchString, null);

	            totalCount = ret.TotalRowCount;
            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel>();
            }

            var result = ret.Select(
                _personaContactosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Persona_Contactos_TransModel()
                    {
                Persona_Contacto_Secuencia = _personaContactosTrans.Persona_Contacto_Secuencia,
                Persona_Secuencia = _personaContactosTrans.Persona_Secuencia,
                Contacto_Tipo_Secuencia = _personaContactosTrans.Contacto_Tipo_Secuencia,
                Persona_Contacto_Informacion = _personaContactosTrans.Persona_Contacto_Informacion,
                Persona_Contacto_Nota = _personaContactosTrans.Persona_Contacto_Nota,
                Registro_Estado = _personaContactosTrans.Registro_Estado,
                Registro_Fecha = _personaContactosTrans.Registro_Fecha,
                Registro_Usuario = _personaContactosTrans.Registro_Usuario,

                    }).ToList();

            return result;
        }

	} 
} 


