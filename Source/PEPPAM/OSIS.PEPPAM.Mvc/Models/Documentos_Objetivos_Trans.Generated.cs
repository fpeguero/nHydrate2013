//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 6/19/2014 1:29:30 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System; 
using System.Web; 
using System.Linq; 
using System.Collections.Generic; 
using CodeFluent.Runtime; 
using CodeFluent.Runtime.Utilities; 
using System.ComponentModel.DataAnnotations; 
using FluentValidation; 
using FluentValidation.Attributes; 
using OSIS.PEPPAM.Mvc.Models; 

namespace OSIS.PEPPAM.Mvc.Models 
{ 
	public partial class Documentos_Objetivos_TransModel
	{

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Documentos_Objetivos_Trans","Documento_Secuencia")]
		public int Documento_Secuencia { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Documentos_Objetivos_Trans","Zona_Secuencia")]
		public int Zona_Secuencia { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Documentos_Objetivos_Trans","Ruta_Secuencia")]
		public int Ruta_Secuencia { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Documentos_Objetivos_Trans","Role_Numero")]
		public int Role_Numero { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Documentos_Objetivos_Trans","Registro_Estado")]
		public String Registro_Estado { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Documentos_Objetivos_Trans","Registro_Fecha")]
		public DateTime Registro_Fecha { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Documentos_Objetivos_Trans","Registro_Usuario")]
		public String Registro_Usuario { get; set; } 

		#region Navigation Properties

        public OSIS.PEPPAM.Mvc.Models.Documentos_MasterModel _documentos_Master;
		/// <summary>
		/// The navigation definition for walking [Documentos_Objetivos_Trans]->[Documentos_Master]
		/// Relationship Links: 
		/// [Documentos_Master.Documento_Secuencia = Documentos_Objetivos_Trans.Documento_Secuencia] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.Mvc.Models.Documentos_MasterModel DocumentosMaster
		{
			get
			{
                if ((this._documentos_Master == null))
                {
                    this._documentos_Master = OSIS.PEPPAM.Mvc.Models.Documentos_MasterModel.Load(Documento_Secuencia);
                }
                return this._documentos_Master;
			}
		}

     private List<OSIS.PEPPAM.Mvc.Models.Documentos_MasterModel> _documentos_MasterList;
		public virtual List<OSIS.PEPPAM.Mvc.Models.Documentos_MasterModel> DocumentosMasterList
		{
			get
			{
                if ((this._documentos_MasterList == null))
                {
                    this._documentos_MasterList = OSIS.PEPPAM.Mvc.Models.Documentos_MasterModel.LoadAll();
                }
                return this._documentos_MasterList;
			}
		}

        public OSIS.PEPPAM.Mvc.Models.Roles_CataModel _roles_Cata;
		/// <summary>
		/// The navigation definition for walking [Documentos_Objetivos_Trans]->[Roles_Cata]
		/// Relationship Links: 
		/// [Roles_Cata.Role_Numero = Documentos_Objetivos_Trans.Role_Numero] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.Mvc.Models.Roles_CataModel RolesCata
		{
			get
			{
                if ((this._roles_Cata == null))
                {
                    this._roles_Cata = OSIS.PEPPAM.Mvc.Models.Roles_CataModel.Load(Role_Numero);
                }
                return this._roles_Cata;
			}
		}

     private List<OSIS.PEPPAM.Mvc.Models.Roles_CataModel> _roles_CataList;
		public virtual List<OSIS.PEPPAM.Mvc.Models.Roles_CataModel> RolesCataList
		{
			get
			{
                if ((this._roles_CataList == null))
                {
                    this._roles_CataList = OSIS.PEPPAM.Mvc.Models.Roles_CataModel.LoadAll();
                }
                return this._roles_CataList;
			}
		}

        public OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel _rutas_Master;
		/// <summary>
		/// The navigation definition for walking [Documentos_Objetivos_Trans]->[Rutas_Master]
		/// Relationship Links: 
		/// [Rutas_Master.Ruta_Secuencia = Documentos_Objetivos_Trans.Ruta_Secuencia] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel RutasMaster
		{
			get
			{
                if ((this._rutas_Master == null))
                {
                    this._rutas_Master = OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel.Load(Ruta_Secuencia);
                }
                return this._rutas_Master;
			}
		}

     private List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> _rutas_MasterList;
		public virtual List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> RutasMasterList
		{
			get
			{
                if ((this._rutas_MasterList == null))
                {
                    this._rutas_MasterList = OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel.LoadAll();
                }
                return this._rutas_MasterList;
			}
		}

        public OSIS.PEPPAM.Mvc.Models.Zonas_MasterModel _zonas_Master;
		/// <summary>
		/// The navigation definition for walking [Documentos_Objetivos_Trans]->[Zonas_Master]
		/// Relationship Links: 
		/// [Zonas_Master.Zona_Secuencia = Documentos_Objetivos_Trans.Zona_Secuencia] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.Mvc.Models.Zonas_MasterModel ZonasMaster
		{
			get
			{
                if ((this._zonas_Master == null))
                {
                    this._zonas_Master = OSIS.PEPPAM.Mvc.Models.Zonas_MasterModel.Load(Zona_Secuencia);
                }
                return this._zonas_Master;
			}
		}

     private List<OSIS.PEPPAM.Mvc.Models.Zonas_MasterModel> _zonas_MasterList;
		public virtual List<OSIS.PEPPAM.Mvc.Models.Zonas_MasterModel> ZonasMasterList
		{
			get
			{
                if ((this._zonas_MasterList == null))
                {
                    this._zonas_MasterList = OSIS.PEPPAM.Mvc.Models.Zonas_MasterModel.LoadAll();
                }
                return this._zonas_MasterList;
			}
		}

		#endregion

        public virtual string EntityKey
        {
            get
            {
                object[] keys = new object[] {
                        this.Documento_Secuencia,
                        this.Zona_Secuencia,
                        this.Ruta_Secuencia,
                        this.Role_Numero
                 };
                string v = CodeFluentPersistence.BuildEntityKey(keys);
                return v;
            }
            set
            {
                System.Type[] types = new System.Type[] {
                        typeof(int),
                        typeof(int),
                        typeof(int),
                        typeof(int)
                        };
                object[] defaultValues = new object[] {
                        -1,
                        -1,
                        -1,
                        -1
                        };
                object[] v1 = CodeFluentPersistence.ParseEntityKey(value, types, defaultValues);
                this. Documento_Secuencia = ((int)(v1[0]));
                this. Zona_Secuencia = ((int)(v1[1]));
                this. Ruta_Secuencia = ((int)(v1[2]));
                this. Role_Numero = ((int)(v1[3]));
            }
        }

        public virtual string EntityDisplayName
        {
            get
            {
                return this.Registro_Estado.ToString();
            }
        }
        

        public Documentos_Objetivos_TransModel()
        {
            this.Documento_Secuencia = -1;
            this.Zona_Secuencia = -1;
            this.Ruta_Secuencia = -1;
            this.Role_Numero = -1;
            this.Registro_Estado = "A";
            this.Registro_Fecha = DateTime.Now;
            this.Registro_Usuario = HttpContext.Current != null ? HttpContext.Current.User.Identity.Name : "";
            Documentos_Objetivos_TransPartial();
        }

            partial void Documentos_Objetivos_TransPartial();

        public virtual bool Equals(OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel documentosObjetivosTrans)
        {
            if ((documentosObjetivosTrans == null))
            {
                return false;
            }

            if (
                    (this.Documento_Secuencia == -1)
                    ||
                    (this.Zona_Secuencia == -1)
                    ||
                    (this.Ruta_Secuencia == -1)
                    ||
                    (this.Role_Numero == -1)
            )
            {
                return base.Equals(documentosObjetivosTrans);
            }

 return ((
                    (this.Documento_Secuencia.Equals(documentosObjetivosTrans.Documento_Secuencia))
                    &&
                    (this.Zona_Secuencia.Equals(documentosObjetivosTrans.Zona_Secuencia))
                    &&
                    (this.Ruta_Secuencia.Equals(documentosObjetivosTrans.Ruta_Secuencia))
                    &&
                    (this.Role_Numero.Equals(documentosObjetivosTrans.Role_Numero))
                        )== true);
        }

        public override bool Equals(object obj)
        {
            OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel documentosObjetivosTrans = null;
			 documentosObjetivosTrans = obj as OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel;
            return this.Equals( documentosObjetivosTrans);
        }

        public override int GetHashCode()
        {
            if ((this.EntityKey == null))
            {
                return base.GetHashCode();
            }
            return this.EntityKey.GetHashCode();
        }
        
        public virtual int CompareTo(OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel documentosObjetivosTrans)
        {
            if ((documentosObjetivosTrans == null))
            {
                throw new System.ArgumentNullException("documentosObjetivosTrans");
            }
            int localCompareTo = this.Documento_Secuencia.CompareTo(documentosObjetivosTrans.Documento_Secuencia);
            return localCompareTo;
        }

        public static OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel Load(int documento_Secuencia,int zona_Secuencia,int ruta_Secuencia,int role_Numero)
        {
            var _documentosObjetivosTransDb = OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans.Load(documento_Secuencia,zona_Secuencia,ruta_Secuencia,role_Numero);
	        if (_documentosObjetivosTransDb == null)
	        {
                return null;
	        }

	        var _documentosObjetivosTrans = new OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel()
            {
                Documento_Secuencia = _documentosObjetivosTransDb.Documento_Secuencia,
                Zona_Secuencia = _documentosObjetivosTransDb.Zona_Secuencia,
                Ruta_Secuencia = _documentosObjetivosTransDb.Ruta_Secuencia,
                Role_Numero = _documentosObjetivosTransDb.Role_Numero,
                Registro_Estado = _documentosObjetivosTransDb.Registro_Estado,
                Registro_Fecha = _documentosObjetivosTransDb.Registro_Fecha,
                Registro_Usuario = _documentosObjetivosTransDb.Registro_Usuario,

            };

	        return _documentosObjetivosTrans;
       }

     public virtual bool Save()
	        {
             var _documentosObjetivosTransDb = new OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans()
	            {
                Documento_Secuencia = this.Documento_Secuencia,
                Zona_Secuencia = this.Zona_Secuencia,
                Ruta_Secuencia = this.Ruta_Secuencia,
                Role_Numero = this.Role_Numero,
                Registro_Estado = this.Registro_Estado,
                Registro_Fecha = this.Registro_Fecha,
                Registro_Usuario = this.Registro_Usuario
	            };

	            var result  = _documentosObjetivosTransDb.Save();
             //TODO: Puede ser que solo sean los Identity y no todo los primary keys
             this.Documento_Secuencia = _documentosObjetivosTransDb.Documento_Secuencia;
             //TODO: Puede ser que solo sean los Identity y no todo los primary keys
             this.Zona_Secuencia = _documentosObjetivosTransDb.Zona_Secuencia;
             //TODO: Puede ser que solo sean los Identity y no todo los primary keys
             this.Ruta_Secuencia = _documentosObjetivosTransDb.Ruta_Secuencia;
             //TODO: Puede ser que solo sean los Identity y no todo los primary keys
             this.Role_Numero = _documentosObjetivosTransDb.Role_Numero;

             return result;

	        }

        public static bool Save(OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel documentosObjetivosTrans)
        {
            if ((documentosObjetivosTrans == null))
            {
                return false;
            }
            bool ret = documentosObjetivosTrans.Save();
            return ret;
        }

        public static bool Insert(OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel documentosObjetivosTrans)
        {
            bool ret = OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel.Save(documentosObjetivosTrans);
            return ret;
        }

        public static void SaveAll(List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> documentosObjetivosTrans)
        {
            int index;
            for (index = (documentosObjetivosTrans.Count - 1); (index >= 0); index = (index - 1))
            {
                OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel _documentosObjetivosTrans = documentosObjetivosTrans[index];
                _documentosObjetivosTrans.Save();
            }
        }

        public static bool Delete(OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel documentosObjetivosTrans)
        {
            if ((documentosObjetivosTrans == null))
            {
                return false;
            }
            bool ret = documentosObjetivosTrans.Delete();
            return ret;
        }

         public virtual bool Delete()
	        {
             var _documentosObjetivosTransDb = new OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans()
	            {
                Documento_Secuencia = this.Documento_Secuencia,
                Zona_Secuencia = this.Zona_Secuencia,
                Ruta_Secuencia = this.Ruta_Secuencia,
                Role_Numero = this.Role_Numero,

	            };

	            return _documentosObjetivosTransDb.Delete();

	        }

        public static bool Delete(int documento_Secuencia,int zona_Secuencia,int ruta_Secuencia,int role_Numero)
        {
            if ((documento_Secuencia == default(int)))
            {
                return false;
            }
            if ((zona_Secuencia == default(int)))
            {
                return false;
            }
            if ((ruta_Secuencia == default(int)))
            {
                return false;
            }
            if ((role_Numero == default(int)))
            {
                return false;
            }
             var _documentosObjetivosTransDb = OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel.Load(documento_Secuencia,zona_Secuencia,ruta_Secuencia,role_Numero);
            return _documentosObjetivosTransDb.Delete();
        }

        public string Trace()
	        {
             var _documentosObjetivosTransDb = new OSIS.PEPPAM.BOM.Documentos_Objetivos_Trans()
	            {
                Documento_Secuencia = this.Documento_Secuencia,
                Zona_Secuencia = this.Zona_Secuencia,
                Ruta_Secuencia = this.Ruta_Secuencia,
                Role_Numero = this.Role_Numero,
                Registro_Estado = this.Registro_Estado,
                Registro_Fecha = this.Registro_Fecha,
                Registro_Usuario = this.Registro_Usuario
	            };

	            return _documentosObjetivosTransDb.Trace();

	        }

        public static OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel LoadByEntityKey(string key)
        {
            if ((key == string.Empty))
            {
                return null;
            }
            OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel documentosObjetivosTrans;
            System.Type[] types = new System.Type[] {
                    typeof(int),                    typeof(int),                    typeof(int),                    typeof(int)                    };
            object[] defaultValues = new object[] {
                    -1,                    -1,                    -1,                    -1                    };
            object[] v = CodeFluentPersistence.ParseEntityKey(key, types, defaultValues);
                    int var0;            var0 = ((int)(v[0]));
                    int var1;            var1 = ((int)(v[1]));
                    int var2;            var2 = ((int)(v[2]));
                    int var3;            var3 = ((int)(v[3]));
            documentosObjetivosTrans = OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel.Load( var0, var1, var2, var3);
            return documentosObjetivosTrans;
        }


// Metodos Definidos en el Modelo y las propiedades CollectionKey
        public  OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel Clone(bool deep)
        {
             OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel  documentosObjetivosTrans = new  OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel();
            this.CopyTo(documentosObjetivosTrans , deep);
            return documentosObjetivosTrans ;
        }

        public OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel Clone()
        {
            OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel localClone = this.Clone(true);
            return localClone;
        }

        public virtual void CopyFrom(System.Collections.IDictionary dict, bool deep)
        {
            if ((dict == null))
            {
                throw new System.ArgumentNullException("dict");
            }
            if ((dict.Contains("Documento_Secuencia") == true))
            {
                this.Documento_Secuencia = ((int)(ConvertUtilities.ChangeType(dict["Documento_Secuencia"], typeof(int), -1)));
            }
            if ((dict.Contains("Registro_Estado") == true))
            {
                this.Registro_Estado = ((string)(ConvertUtilities.ChangeType(dict["Registro_Estado"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Registro_Fecha") == true))
            {
                this.Registro_Fecha = ((DateTime)(ConvertUtilities.ChangeType(dict["Registro_Fecha"], typeof(DateTime), System.DateTime.MinValue)));
            }
            if ((dict.Contains("Registro_Usuario") == true))
            {
                this.Registro_Usuario = ((string)(ConvertUtilities.ChangeType(dict["Registro_Usuario"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Role_Numero") == true))
            {
                this.Role_Numero = ((int)(ConvertUtilities.ChangeType(dict["Role_Numero"], typeof(int), -1)));
            }
            if ((dict.Contains("Ruta_Secuencia") == true))
            {
                this.Ruta_Secuencia = ((int)(ConvertUtilities.ChangeType(dict["Ruta_Secuencia"], typeof(int), -1)));
            }
            if ((dict.Contains("Zona_Secuencia") == true))
            {
                this.Zona_Secuencia = ((int)(ConvertUtilities.ChangeType(dict["Zona_Secuencia"], typeof(int), -1)));
            }
        }

        public virtual void CopyTo( OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel  documentosObjetivosTrans, bool deep)
        {
            if ((documentosObjetivosTrans == null))
            {
                throw new System.ArgumentNullException("documentosObjetivosTrans");
            }
            documentosObjetivosTrans.Documento_Secuencia = this.Documento_Secuencia;
            documentosObjetivosTrans.Registro_Estado = this.Registro_Estado;
            documentosObjetivosTrans.Registro_Fecha = this.Registro_Fecha;
            documentosObjetivosTrans.Registro_Usuario = this.Registro_Usuario;
            documentosObjetivosTrans.Role_Numero = this.Role_Numero;
            documentosObjetivosTrans.Ruta_Secuencia = this.Ruta_Secuencia;
            documentosObjetivosTrans.Zona_Secuencia = this.Zona_Secuencia;
        }

	public static List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> PageLoadAll(int pageIndex, int pageSize,
	        CodeFluent.Runtime.PageOptions pageOptions)
	    {
	        var pageLoadAll = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadAll(pageIndex, pageSize, pageOptions);

	        if (pageLoadAll == null)
	        {
                return new List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel>();
	        }

	        var result =  pageLoadAll.Select(
                _documentosObjetivosTrans => 
                    new OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel()
	        {
                Documento_Secuencia = _documentosObjetivosTrans.Documento_Secuencia,
                Zona_Secuencia = _documentosObjetivosTrans.Zona_Secuencia,
                Ruta_Secuencia = _documentosObjetivosTrans.Ruta_Secuencia,
                Role_Numero = _documentosObjetivosTrans.Role_Numero,
                Registro_Estado = _documentosObjetivosTrans.Registro_Estado,
                Registro_Fecha = _documentosObjetivosTrans.Registro_Fecha,
                Registro_Usuario = _documentosObjetivosTrans.Registro_Usuario,

	        }).ToList();

	        return result;
	    }

        public static List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> LoadAll()
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadAll(int.MinValue, int.MaxValue, null);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel>();
            }

            var result = ret.Select(
                _documentosObjetivosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel()
                    {
                Documento_Secuencia = _documentosObjetivosTrans.Documento_Secuencia,
                Zona_Secuencia = _documentosObjetivosTrans.Zona_Secuencia,
                Ruta_Secuencia = _documentosObjetivosTrans.Ruta_Secuencia,
                Role_Numero = _documentosObjetivosTrans.Role_Numero,
                Registro_Estado = _documentosObjetivosTrans.Registro_Estado,
                Registro_Fecha = _documentosObjetivosTrans.Registro_Fecha,
                Registro_Usuario = _documentosObjetivosTrans.Registro_Usuario,

                    }).ToList();

            return result;
        }

        public static List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> LoadByDocumentosMaster(OSIS.PEPPAM.Mvc.Models.Documentos_MasterModel documentos_Master)
        {

            var _Documentos_Master = new OSIS.PEPPAM.BOM.Documentos_Master()
            {
                Documento_Secuencia = documentos_Master.Documento_Secuencia,
                Documento_Nombre = documentos_Master.Documento_Nombre,
                Documento_Descripcion = documentos_Master.Documento_Descripcion,
                Documento_Archivo_Nombre = documentos_Master.Documento_Archivo_Nombre,
                Registro_Estado = documentos_Master.Registro_Estado,
                Registro_Fecha = documentos_Master.Registro_Fecha,
                Registro_Usuario = documentos_Master.Registro_Usuario,
            };


            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.LoadByDocumentosMaster(_Documentos_Master);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel>();
            }

            var result = ret.Select(
                _documentosObjetivosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel()
                    {
                        Documento_Secuencia = _documentosObjetivosTrans.Documento_Secuencia,
                        Zona_Secuencia = _documentosObjetivosTrans.Zona_Secuencia,
                        Ruta_Secuencia = _documentosObjetivosTrans.Ruta_Secuencia,
                        Role_Numero = _documentosObjetivosTrans.Role_Numero,
                        Registro_Estado = _documentosObjetivosTrans.Registro_Estado,
                        Registro_Fecha = _documentosObjetivosTrans.Registro_Fecha,
                        Registro_Usuario = _documentosObjetivosTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }


    [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> PageLoadByDocumentosMaster(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.Mvc.Models.Documentos_MasterModel documentos_Master)
        {
            var _documentos_Master = new OSIS.PEPPAM.BOM.Documentos_Master()
            {
                Documento_Secuencia = documentos_Master.Documento_Secuencia,
                Documento_Nombre = documentos_Master.Documento_Nombre,
                Documento_Descripcion = documentos_Master.Documento_Descripcion,
                Documento_Archivo_Nombre = documentos_Master.Documento_Archivo_Nombre,
                Registro_Estado = documentos_Master.Registro_Estado,
                Registro_Fecha = documentos_Master.Registro_Fecha,
                Registro_Usuario = documentos_Master.Registro_Usuario,
            };
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadByDocumentosMaster(int.MinValue, int.MaxValue, null, _documentos_Master);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel>();
            }

            var result = ret.Select(
                _documentosObjetivosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel()
                    {
                        Documento_Secuencia = _documentosObjetivosTrans.Documento_Secuencia,
                        Zona_Secuencia = _documentosObjetivosTrans.Zona_Secuencia,
                        Ruta_Secuencia = _documentosObjetivosTrans.Ruta_Secuencia,
                        Role_Numero = _documentosObjetivosTrans.Role_Numero,
                        Registro_Estado = _documentosObjetivosTrans.Registro_Estado,
                        Registro_Fecha = _documentosObjetivosTrans.Registro_Fecha,
                        Registro_Usuario = _documentosObjetivosTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> PageLoadByDocumentosMaster(int pageIndex, int pageSize,int documento_Secuencia)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadByDocumentosMaster(int.MinValue, int.MaxValue,
documento_Secuencia);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel>();
            }

            var result = ret.Select(
                _documentosObjetivosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel()
                    {
                        Documento_Secuencia = _documentosObjetivosTrans.Documento_Secuencia,
                        Zona_Secuencia = _documentosObjetivosTrans.Zona_Secuencia,
                        Ruta_Secuencia = _documentosObjetivosTrans.Ruta_Secuencia,
                        Role_Numero = _documentosObjetivosTrans.Role_Numero,
                        Registro_Estado = _documentosObjetivosTrans.Registro_Estado,
                        Registro_Fecha = _documentosObjetivosTrans.Registro_Fecha,
                        Registro_Usuario = _documentosObjetivosTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }
        public static List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> LoadByRolesCata(OSIS.PEPPAM.Mvc.Models.Roles_CataModel roles_Cata)
        {

            var _Roles_Cata = new OSIS.PEPPAM.BOM.Roles_Cata()
            {
                Role_Numero = roles_Cata.Role_Numero,
                Role_Nivel_Numero = roles_Cata.Role_Nivel_Numero,
                Role_Nombre = roles_Cata.Role_Nombre,
                Role_Descripcion = roles_Cata.Role_Descripcion,
                Registro_Estado = roles_Cata.Registro_Estado,
                Registro_Fecha = roles_Cata.Registro_Fecha,
                Registro_Usuario = roles_Cata.Registro_Usuario,
            };


            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.LoadByRolesCata(_Roles_Cata);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel>();
            }

            var result = ret.Select(
                _documentosObjetivosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel()
                    {
                        Documento_Secuencia = _documentosObjetivosTrans.Documento_Secuencia,
                        Zona_Secuencia = _documentosObjetivosTrans.Zona_Secuencia,
                        Ruta_Secuencia = _documentosObjetivosTrans.Ruta_Secuencia,
                        Role_Numero = _documentosObjetivosTrans.Role_Numero,
                        Registro_Estado = _documentosObjetivosTrans.Registro_Estado,
                        Registro_Fecha = _documentosObjetivosTrans.Registro_Fecha,
                        Registro_Usuario = _documentosObjetivosTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }


    [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> PageLoadByRolesCata(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.Mvc.Models.Roles_CataModel roles_Cata)
        {
            var _roles_Cata = new OSIS.PEPPAM.BOM.Roles_Cata()
            {
                Role_Numero = roles_Cata.Role_Numero,
                Role_Nivel_Numero = roles_Cata.Role_Nivel_Numero,
                Role_Nombre = roles_Cata.Role_Nombre,
                Role_Descripcion = roles_Cata.Role_Descripcion,
                Registro_Estado = roles_Cata.Registro_Estado,
                Registro_Fecha = roles_Cata.Registro_Fecha,
                Registro_Usuario = roles_Cata.Registro_Usuario,
            };
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadByRolesCata(int.MinValue, int.MaxValue, null, _roles_Cata);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel>();
            }

            var result = ret.Select(
                _documentosObjetivosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel()
                    {
                        Documento_Secuencia = _documentosObjetivosTrans.Documento_Secuencia,
                        Zona_Secuencia = _documentosObjetivosTrans.Zona_Secuencia,
                        Ruta_Secuencia = _documentosObjetivosTrans.Ruta_Secuencia,
                        Role_Numero = _documentosObjetivosTrans.Role_Numero,
                        Registro_Estado = _documentosObjetivosTrans.Registro_Estado,
                        Registro_Fecha = _documentosObjetivosTrans.Registro_Fecha,
                        Registro_Usuario = _documentosObjetivosTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> PageLoadByRolesCata(int pageIndex, int pageSize,int role_Numero)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadByRolesCata(int.MinValue, int.MaxValue,
role_Numero);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel>();
            }

            var result = ret.Select(
                _documentosObjetivosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel()
                    {
                        Documento_Secuencia = _documentosObjetivosTrans.Documento_Secuencia,
                        Zona_Secuencia = _documentosObjetivosTrans.Zona_Secuencia,
                        Ruta_Secuencia = _documentosObjetivosTrans.Ruta_Secuencia,
                        Role_Numero = _documentosObjetivosTrans.Role_Numero,
                        Registro_Estado = _documentosObjetivosTrans.Registro_Estado,
                        Registro_Fecha = _documentosObjetivosTrans.Registro_Fecha,
                        Registro_Usuario = _documentosObjetivosTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }
        public static List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> LoadByRutasMaster(OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel rutas_Master)
        {

            var _Rutas_Master = new OSIS.PEPPAM.BOM.Rutas_Master()
            {
                Ruta_Secuencia = rutas_Master.Ruta_Secuencia,
                Zona_Secuencia = rutas_Master.Zona_Secuencia,
                Ruta_Descripcion = rutas_Master.Ruta_Descripcion,
                Ruta_Persona_Encargado = rutas_Master.Ruta_Persona_Encargado,
                Ruta_Persona_Auxiliar = rutas_Master.Ruta_Persona_Auxiliar,
                Ruta_Mapa_Url = rutas_Master.Ruta_Mapa_Url,
                Ruta_Carros_Cantidad = rutas_Master.Ruta_Carros_Cantidad,
                Ruta_Publicadores_Cantidad = rutas_Master.Ruta_Publicadores_Cantidad,
                Registro_Estado = rutas_Master.Registro_Estado,
                Registro_Fecha = rutas_Master.Registro_Fecha,
                Registro_Usuario = rutas_Master.Registro_Usuario,
            };


            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.LoadByRutasMaster(_Rutas_Master);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel>();
            }

            var result = ret.Select(
                _documentosObjetivosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel()
                    {
                        Documento_Secuencia = _documentosObjetivosTrans.Documento_Secuencia,
                        Zona_Secuencia = _documentosObjetivosTrans.Zona_Secuencia,
                        Ruta_Secuencia = _documentosObjetivosTrans.Ruta_Secuencia,
                        Role_Numero = _documentosObjetivosTrans.Role_Numero,
                        Registro_Estado = _documentosObjetivosTrans.Registro_Estado,
                        Registro_Fecha = _documentosObjetivosTrans.Registro_Fecha,
                        Registro_Usuario = _documentosObjetivosTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }


    [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> PageLoadByRutasMaster(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel rutas_Master)
        {
            var _rutas_Master = new OSIS.PEPPAM.BOM.Rutas_Master()
            {
                Ruta_Secuencia = rutas_Master.Ruta_Secuencia,
                Zona_Secuencia = rutas_Master.Zona_Secuencia,
                Ruta_Descripcion = rutas_Master.Ruta_Descripcion,
                Ruta_Persona_Encargado = rutas_Master.Ruta_Persona_Encargado,
                Ruta_Persona_Auxiliar = rutas_Master.Ruta_Persona_Auxiliar,
                Ruta_Mapa_Url = rutas_Master.Ruta_Mapa_Url,
                Ruta_Carros_Cantidad = rutas_Master.Ruta_Carros_Cantidad,
                Ruta_Publicadores_Cantidad = rutas_Master.Ruta_Publicadores_Cantidad,
                Registro_Estado = rutas_Master.Registro_Estado,
                Registro_Fecha = rutas_Master.Registro_Fecha,
                Registro_Usuario = rutas_Master.Registro_Usuario,
            };
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadByRutasMaster(int.MinValue, int.MaxValue, null, _rutas_Master);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel>();
            }

            var result = ret.Select(
                _documentosObjetivosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel()
                    {
                        Documento_Secuencia = _documentosObjetivosTrans.Documento_Secuencia,
                        Zona_Secuencia = _documentosObjetivosTrans.Zona_Secuencia,
                        Ruta_Secuencia = _documentosObjetivosTrans.Ruta_Secuencia,
                        Role_Numero = _documentosObjetivosTrans.Role_Numero,
                        Registro_Estado = _documentosObjetivosTrans.Registro_Estado,
                        Registro_Fecha = _documentosObjetivosTrans.Registro_Fecha,
                        Registro_Usuario = _documentosObjetivosTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> PageLoadByRutasMaster(int pageIndex, int pageSize,int ruta_Secuencia)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadByRutasMaster(int.MinValue, int.MaxValue,
ruta_Secuencia);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel>();
            }

            var result = ret.Select(
                _documentosObjetivosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel()
                    {
                        Documento_Secuencia = _documentosObjetivosTrans.Documento_Secuencia,
                        Zona_Secuencia = _documentosObjetivosTrans.Zona_Secuencia,
                        Ruta_Secuencia = _documentosObjetivosTrans.Ruta_Secuencia,
                        Role_Numero = _documentosObjetivosTrans.Role_Numero,
                        Registro_Estado = _documentosObjetivosTrans.Registro_Estado,
                        Registro_Fecha = _documentosObjetivosTrans.Registro_Fecha,
                        Registro_Usuario = _documentosObjetivosTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }
        public static List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> LoadByZonasMaster(OSIS.PEPPAM.Mvc.Models.Zonas_MasterModel zonas_Master)
        {

            var _Zonas_Master = new OSIS.PEPPAM.BOM.Zonas_Master()
            {
                Zona_Secuencia = zonas_Master.Zona_Secuencia,
                Zona_Descripcion = zonas_Master.Zona_Descripcion,
                Zona_Nota = zonas_Master.Zona_Nota,
                Registro_Estado = zonas_Master.Registro_Estado,
                Registro_Fecha = zonas_Master.Registro_Fecha,
                Registro_Usuario = zonas_Master.Registro_Usuario,
            };


            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.LoadByZonasMaster(_Zonas_Master);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel>();
            }

            var result = ret.Select(
                _documentosObjetivosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel()
                    {
                        Documento_Secuencia = _documentosObjetivosTrans.Documento_Secuencia,
                        Zona_Secuencia = _documentosObjetivosTrans.Zona_Secuencia,
                        Ruta_Secuencia = _documentosObjetivosTrans.Ruta_Secuencia,
                        Role_Numero = _documentosObjetivosTrans.Role_Numero,
                        Registro_Estado = _documentosObjetivosTrans.Registro_Estado,
                        Registro_Fecha = _documentosObjetivosTrans.Registro_Fecha,
                        Registro_Usuario = _documentosObjetivosTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }


    [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> PageLoadByZonasMaster(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.Mvc.Models.Zonas_MasterModel zonas_Master)
        {
            var _zonas_Master = new OSIS.PEPPAM.BOM.Zonas_Master()
            {
                Zona_Secuencia = zonas_Master.Zona_Secuencia,
                Zona_Descripcion = zonas_Master.Zona_Descripcion,
                Zona_Nota = zonas_Master.Zona_Nota,
                Registro_Estado = zonas_Master.Registro_Estado,
                Registro_Fecha = zonas_Master.Registro_Fecha,
                Registro_Usuario = zonas_Master.Registro_Usuario,
            };
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadByZonasMaster(int.MinValue, int.MaxValue, null, _zonas_Master);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel>();
            }

            var result = ret.Select(
                _documentosObjetivosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel()
                    {
                        Documento_Secuencia = _documentosObjetivosTrans.Documento_Secuencia,
                        Zona_Secuencia = _documentosObjetivosTrans.Zona_Secuencia,
                        Ruta_Secuencia = _documentosObjetivosTrans.Ruta_Secuencia,
                        Role_Numero = _documentosObjetivosTrans.Role_Numero,
                        Registro_Estado = _documentosObjetivosTrans.Registro_Estado,
                        Registro_Fecha = _documentosObjetivosTrans.Registro_Fecha,
                        Registro_Usuario = _documentosObjetivosTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> PageLoadByZonasMaster(int pageIndex, int pageSize,int zona_Secuencia)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadByZonasMaster(int.MinValue, int.MaxValue,
zona_Secuencia);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel>();
            }

            var result = ret.Select(
                _documentosObjetivosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel()
                    {
                        Documento_Secuencia = _documentosObjetivosTrans.Documento_Secuencia,
                        Zona_Secuencia = _documentosObjetivosTrans.Zona_Secuencia,
                        Ruta_Secuencia = _documentosObjetivosTrans.Ruta_Secuencia,
                        Role_Numero = _documentosObjetivosTrans.Role_Numero,
                        Registro_Estado = _documentosObjetivosTrans.Registro_Estado,
                        Registro_Fecha = _documentosObjetivosTrans.Registro_Fecha,
                        Registro_Usuario = _documentosObjetivosTrans.Registro_Usuario,
                    }).ToList();

            return result;
        }
	public static List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> PageLoadAllPaging(int pageIndex, int pageSize, string searchString,
	        CodeFluent.Runtime.PageOptions pageOptions, out int totalCount)
	    {
	        var pageLoadAll = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadAllPaging(pageIndex, pageSize, searchString, pageOptions);

	        totalCount = pageLoadAll.TotalRowCount;
	        if (pageLoadAll == null)
	        {
                return new List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel>();
	        }

	        var result =  pageLoadAll.Select(
                _documentosObjetivosTrans => 
                    new OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel()
	        {
                Documento_Secuencia = _documentosObjetivosTrans.Documento_Secuencia,
                Zona_Secuencia = _documentosObjetivosTrans.Zona_Secuencia,
                Ruta_Secuencia = _documentosObjetivosTrans.Ruta_Secuencia,
                Role_Numero = _documentosObjetivosTrans.Role_Numero,
                Registro_Estado = _documentosObjetivosTrans.Registro_Estado,
                Registro_Fecha = _documentosObjetivosTrans.Registro_Fecha,
                Registro_Usuario = _documentosObjetivosTrans.Registro_Usuario,

	        }).ToList();

	        return result;
	    }

        public static List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> LoadAllPaging(string searchString, out int totalCount)
        {
            OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection ret = OSIS.PEPPAM.BOM.Documentos_Objetivos_TransCollection.PageLoadAllPaging(1, 1000000,searchString, null);

	            totalCount = ret.TotalRowCount;
            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel>();
            }

            var result = ret.Select(
                _documentosObjetivosTrans =>
                    new OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel()
                    {
                Documento_Secuencia = _documentosObjetivosTrans.Documento_Secuencia,
                Zona_Secuencia = _documentosObjetivosTrans.Zona_Secuencia,
                Ruta_Secuencia = _documentosObjetivosTrans.Ruta_Secuencia,
                Role_Numero = _documentosObjetivosTrans.Role_Numero,
                Registro_Estado = _documentosObjetivosTrans.Registro_Estado,
                Registro_Fecha = _documentosObjetivosTrans.Registro_Fecha,
                Registro_Usuario = _documentosObjetivosTrans.Registro_Usuario,

                    }).ToList();

            return result;
        }

	} 
} 


