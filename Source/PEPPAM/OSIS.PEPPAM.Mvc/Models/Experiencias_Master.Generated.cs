//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 6/19/2014 1:29:30 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System; 
using System.Web; 
using System.Linq; 
using System.Collections.Generic; 
using CodeFluent.Runtime; 
using CodeFluent.Runtime.Utilities; 
using System.ComponentModel.DataAnnotations; 
using FluentValidation; 
using FluentValidation.Attributes; 
using OSIS.PEPPAM.Mvc.Models; 

namespace OSIS.PEPPAM.Mvc.Models 
{ 
	public partial class Experiencias_MasterModel
	{

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Experiencias_Master","Experiencia_Secuencia")]
		public int Experiencia_Secuencia { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Experiencias_Master","Persona_Secuencia")]
		public int Persona_Secuencia { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Experiencias_Master","Horario_Turno_Secuencia")]
		public int Horario_Turno_Secuencia { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Experiencias_Master","Dia_Secuencia")]
		public int Dia_Secuencia { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Experiencias_Master","Experiencia_Contenido")]
		public String Experiencia_Contenido { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Experiencias_Master","Experiencia_Nota")]
		public String Experiencia_Nota { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Experiencias_Master","Registro_Estado")]
		public String Registro_Estado { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Experiencias_Master","Registro_Fecha")]
		public DateTime Registro_Fecha { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Experiencias_Master","Registro_Usuario")]
		public String Registro_Usuario { get; set; } 

		#region Navigation Properties

        public OSIS.PEPPAM.Mvc.Models.Personas_Turnos_TransModel _personas_Turnos_Trans;
		/// <summary>
		/// The navigation definition for walking [Experiencias_Master]->[Personas_Turnos_Trans]
		/// Relationship Links: 
		/// [Personas_Turnos_Trans.Persona_Secuencia = Experiencias_Master.Persona_Secuencia] (Required)
		/// [Personas_Turnos_Trans.Horario_Turno_Secuencia = Experiencias_Master.Horario_Turno_Secuencia] (Required)
		/// [Personas_Turnos_Trans.Dia_Secuencia = Experiencias_Master.Dia_Secuencia] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.Mvc.Models.Personas_Turnos_TransModel PersonasTurnosTrans
		{
			get
			{
                if ((this._personas_Turnos_Trans == null))
                {
                    this._personas_Turnos_Trans = OSIS.PEPPAM.Mvc.Models.Personas_Turnos_TransModel.Load(Dia_Secuencia,Horario_Turno_Secuencia,Persona_Secuencia);
                }
                return this._personas_Turnos_Trans;
			}
		}

     private List<OSIS.PEPPAM.Mvc.Models.Personas_Turnos_TransModel> _personas_Turnos_TransList;
		public virtual List<OSIS.PEPPAM.Mvc.Models.Personas_Turnos_TransModel> PersonasTurnosTransList
		{
			get
			{
                if ((this._personas_Turnos_TransList == null))
                {
                    this._personas_Turnos_TransList = OSIS.PEPPAM.Mvc.Models.Personas_Turnos_TransModel.LoadAll();
                }
                return this._personas_Turnos_TransList;
			}
		}

		#endregion

        public virtual string EntityKey
        {
            get
            {
                return this.Experiencia_Secuencia.ToString();
            }
            set
            {
               this.Experiencia_Secuencia = ((int)(ConvertUtilities.ChangeType(value, typeof(int), -1)));
            }
        }

        public virtual string EntityDisplayName
        {
            get
            {
                return this.Experiencia_Contenido.ToString();
            }
        }
        

        public Experiencias_MasterModel()
        {
            this.Experiencia_Secuencia = -1;
            this.Persona_Secuencia = -1;
            this.Horario_Turno_Secuencia = -1;
            this.Dia_Secuencia = -1;
            this.Experiencia_Contenido = string.Empty;
            this.Experiencia_Nota = string.Empty;
            this.Registro_Estado = "A";
            this.Registro_Fecha = DateTime.Now;
            this.Registro_Usuario = HttpContext.Current != null ? HttpContext.Current.User.Identity.Name : "";
            Experiencias_MasterPartial();
        }

            partial void Experiencias_MasterPartial();

        public virtual bool Equals(OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel experienciasMaster)
        {
            if ((experienciasMaster == null))
            {
                return false;
            }

            if (
                    (this.Experiencia_Secuencia == -1)
            )
            {
                return base.Equals(experienciasMaster);
            }

 return ((
                    (this.Experiencia_Secuencia.Equals(experienciasMaster.Experiencia_Secuencia))
                        )== true);
        }

        public override bool Equals(object obj)
        {
            OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel experienciasMaster = null;
			 experienciasMaster = obj as OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel;
            return this.Equals( experienciasMaster);
        }

        public override int GetHashCode()
        {
            if ((this.EntityKey == null))
            {
                return base.GetHashCode();
            }
            return this.EntityKey.GetHashCode();
        }
        
        public virtual int CompareTo(OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel experienciasMaster)
        {
            if ((experienciasMaster == null))
            {
                throw new System.ArgumentNullException("experienciasMaster");
            }
            int localCompareTo = this.Experiencia_Secuencia.CompareTo(experienciasMaster.Experiencia_Secuencia);
            return localCompareTo;
        }

        public static OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel Load(int experiencia_Secuencia)
        {
            var _experienciasMasterDb = OSIS.PEPPAM.BOM.Experiencias_Master.Load(experiencia_Secuencia);
	        if (_experienciasMasterDb == null)
	        {
                return null;
	        }

	        var _experienciasMaster = new OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel()
            {
                Experiencia_Secuencia = _experienciasMasterDb.Experiencia_Secuencia,
                Persona_Secuencia = _experienciasMasterDb.Persona_Secuencia,
                Horario_Turno_Secuencia = _experienciasMasterDb.Horario_Turno_Secuencia,
                Dia_Secuencia = _experienciasMasterDb.Dia_Secuencia,
                Experiencia_Contenido = _experienciasMasterDb.Experiencia_Contenido,
                Experiencia_Nota = _experienciasMasterDb.Experiencia_Nota,
                Registro_Estado = _experienciasMasterDb.Registro_Estado,
                Registro_Fecha = _experienciasMasterDb.Registro_Fecha,
                Registro_Usuario = _experienciasMasterDb.Registro_Usuario,

            };

	        return _experienciasMaster;
       }

     public virtual bool Save()
	        {
             var _experienciasMasterDb = new OSIS.PEPPAM.BOM.Experiencias_Master()
	            {
                Experiencia_Secuencia = this.Experiencia_Secuencia,
                Persona_Secuencia = this.Persona_Secuencia,
                Horario_Turno_Secuencia = this.Horario_Turno_Secuencia,
                Dia_Secuencia = this.Dia_Secuencia,
                Experiencia_Contenido = this.Experiencia_Contenido,
                Experiencia_Nota = this.Experiencia_Nota,
                Registro_Estado = this.Registro_Estado,
                Registro_Fecha = this.Registro_Fecha,
                Registro_Usuario = this.Registro_Usuario
	            };

	            var result  = _experienciasMasterDb.Save();
             //TODO: Puede ser que solo sean los Identity y no todo los primary keys
             this.Experiencia_Secuencia = _experienciasMasterDb.Experiencia_Secuencia;

             return result;

	        }

        public static bool Save(OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel experienciasMaster)
        {
            if ((experienciasMaster == null))
            {
                return false;
            }
            bool ret = experienciasMaster.Save();
            return ret;
        }

        public static bool Insert(OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel experienciasMaster)
        {
            bool ret = OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel.Save(experienciasMaster);
            return ret;
        }

        public static void SaveAll(List<OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel> experienciasMaster)
        {
            int index;
            for (index = (experienciasMaster.Count - 1); (index >= 0); index = (index - 1))
            {
                OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel _experienciasMaster = experienciasMaster[index];
                _experienciasMaster.Save();
            }
        }

        public static bool Delete(OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel experienciasMaster)
        {
            if ((experienciasMaster == null))
            {
                return false;
            }
            bool ret = experienciasMaster.Delete();
            return ret;
        }

         public virtual bool Delete()
	        {
             var _experienciasMasterDb = new OSIS.PEPPAM.BOM.Experiencias_Master()
	            {
                Experiencia_Secuencia = this.Experiencia_Secuencia,

	            };

	            return _experienciasMasterDb.Delete();

	        }

        public static bool Delete(int experiencia_Secuencia)
        {
            if ((experiencia_Secuencia == default(int)))
            {
                return false;
            }
             var _experienciasMasterDb = OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel.Load(experiencia_Secuencia);
            return _experienciasMasterDb.Delete();
        }

        public string Trace()
	        {
             var _experienciasMasterDb = new OSIS.PEPPAM.BOM.Experiencias_Master()
	            {
                Experiencia_Secuencia = this.Experiencia_Secuencia,
                Persona_Secuencia = this.Persona_Secuencia,
                Horario_Turno_Secuencia = this.Horario_Turno_Secuencia,
                Dia_Secuencia = this.Dia_Secuencia,
                Experiencia_Contenido = this.Experiencia_Contenido,
                Experiencia_Nota = this.Experiencia_Nota,
                Registro_Estado = this.Registro_Estado,
                Registro_Fecha = this.Registro_Fecha,
                Registro_Usuario = this.Registro_Usuario
	            };

	            return _experienciasMasterDb.Trace();

	        }

        public static OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel LoadByEntityKey(string key)
        {
            if ((key == string.Empty))
            {
                return null;
            }
            OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel experienciasMaster;
            System.Type[] types = new System.Type[] {
                    typeof(int)                    };
            object[] defaultValues = new object[] {
                    -1                    };
            object[] v = CodeFluentPersistence.ParseEntityKey(key, types, defaultValues);
                    int var0;            var0 = ((int)(v[0]));
            experienciasMaster = OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel.Load( var0);
            return experienciasMaster;
        }


// Metodos Definidos en el Modelo y las propiedades CollectionKey
        public  OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel Clone(bool deep)
        {
             OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel  experienciasMaster = new  OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel();
            this.CopyTo(experienciasMaster , deep);
            return experienciasMaster ;
        }

        public OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel Clone()
        {
            OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel localClone = this.Clone(true);
            return localClone;
        }

        public virtual void CopyFrom(System.Collections.IDictionary dict, bool deep)
        {
            if ((dict == null))
            {
                throw new System.ArgumentNullException("dict");
            }
            if ((dict.Contains("Dia_Secuencia") == true))
            {
                this.Dia_Secuencia = ((int)(ConvertUtilities.ChangeType(dict["Dia_Secuencia"], typeof(int), -1)));
            }
            if ((dict.Contains("Experiencia_Contenido") == true))
            {
                this.Experiencia_Contenido = ((string)(ConvertUtilities.ChangeType(dict["Experiencia_Contenido"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Experiencia_Nota") == true))
            {
                this.Experiencia_Nota = ((string)(ConvertUtilities.ChangeType(dict["Experiencia_Nota"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Experiencia_Secuencia") == true))
            {
                this.Experiencia_Secuencia = ((int)(ConvertUtilities.ChangeType(dict["Experiencia_Secuencia"], typeof(int), -1)));
            }
            if ((dict.Contains("Horario_Turno_Secuencia") == true))
            {
                this.Horario_Turno_Secuencia = ((int)(ConvertUtilities.ChangeType(dict["Horario_Turno_Secuencia"], typeof(int), -1)));
            }
            if ((dict.Contains("Persona_Secuencia") == true))
            {
                this.Persona_Secuencia = ((int)(ConvertUtilities.ChangeType(dict["Persona_Secuencia"], typeof(int), -1)));
            }
            if ((dict.Contains("Registro_Estado") == true))
            {
                this.Registro_Estado = ((string)(ConvertUtilities.ChangeType(dict["Registro_Estado"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Registro_Fecha") == true))
            {
                this.Registro_Fecha = ((DateTime)(ConvertUtilities.ChangeType(dict["Registro_Fecha"], typeof(DateTime), System.DateTime.MinValue)));
            }
            if ((dict.Contains("Registro_Usuario") == true))
            {
                this.Registro_Usuario = ((string)(ConvertUtilities.ChangeType(dict["Registro_Usuario"], typeof(string), string.Empty)));
            }
        }

        public virtual void CopyTo( OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel  experienciasMaster, bool deep)
        {
            if ((experienciasMaster == null))
            {
                throw new System.ArgumentNullException("experienciasMaster");
            }
            experienciasMaster.Dia_Secuencia = this.Dia_Secuencia;
            experienciasMaster.Experiencia_Contenido = this.Experiencia_Contenido;
            experienciasMaster.Experiencia_Nota = this.Experiencia_Nota;
            experienciasMaster.Experiencia_Secuencia = this.Experiencia_Secuencia;
            experienciasMaster.Horario_Turno_Secuencia = this.Horario_Turno_Secuencia;
            experienciasMaster.Persona_Secuencia = this.Persona_Secuencia;
            experienciasMaster.Registro_Estado = this.Registro_Estado;
            experienciasMaster.Registro_Fecha = this.Registro_Fecha;
            experienciasMaster.Registro_Usuario = this.Registro_Usuario;
        }

	public static List<OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel> PageLoadAll(int pageIndex, int pageSize,
	        CodeFluent.Runtime.PageOptions pageOptions)
	    {
	        var pageLoadAll = OSIS.PEPPAM.BOM.Experiencias_MasterCollection.PageLoadAll(pageIndex, pageSize, pageOptions);

	        if (pageLoadAll == null)
	        {
                return new List<OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel>();
	        }

	        var result =  pageLoadAll.Select(
                _experienciasMaster => 
                    new OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel()
	        {
                Experiencia_Secuencia = _experienciasMaster.Experiencia_Secuencia,
                Persona_Secuencia = _experienciasMaster.Persona_Secuencia,
                Horario_Turno_Secuencia = _experienciasMaster.Horario_Turno_Secuencia,
                Dia_Secuencia = _experienciasMaster.Dia_Secuencia,
                Experiencia_Contenido = _experienciasMaster.Experiencia_Contenido,
                Experiencia_Nota = _experienciasMaster.Experiencia_Nota,
                Registro_Estado = _experienciasMaster.Registro_Estado,
                Registro_Fecha = _experienciasMaster.Registro_Fecha,
                Registro_Usuario = _experienciasMaster.Registro_Usuario,

	        }).ToList();

	        return result;
	    }

        public static List<OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel> LoadAll()
        {
            OSIS.PEPPAM.BOM.Experiencias_MasterCollection ret = OSIS.PEPPAM.BOM.Experiencias_MasterCollection.PageLoadAll(int.MinValue, int.MaxValue, null);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel>();
            }

            var result = ret.Select(
                _experienciasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel()
                    {
                Experiencia_Secuencia = _experienciasMaster.Experiencia_Secuencia,
                Persona_Secuencia = _experienciasMaster.Persona_Secuencia,
                Horario_Turno_Secuencia = _experienciasMaster.Horario_Turno_Secuencia,
                Dia_Secuencia = _experienciasMaster.Dia_Secuencia,
                Experiencia_Contenido = _experienciasMaster.Experiencia_Contenido,
                Experiencia_Nota = _experienciasMaster.Experiencia_Nota,
                Registro_Estado = _experienciasMaster.Registro_Estado,
                Registro_Fecha = _experienciasMaster.Registro_Fecha,
                Registro_Usuario = _experienciasMaster.Registro_Usuario,

                    }).ToList();

            return result;
        }

        public static List<OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel> LoadByPersonasTurnosTrans(OSIS.PEPPAM.Mvc.Models.Personas_Turnos_TransModel personas_Turnos_Trans)
        {

            var _Personas_Turnos_Trans = new OSIS.PEPPAM.BOM.Personas_Turnos_Trans()
            {
                Persona_Secuencia = personas_Turnos_Trans.Persona_Secuencia,
                Horario_Turno_Secuencia = personas_Turnos_Trans.Horario_Turno_Secuencia,
                Dia_Secuencia = personas_Turnos_Trans.Dia_Secuencia,
                Persona_Turno_HC = personas_Turnos_Trans.Persona_Turno_HC,
                Registro_Estado = personas_Turnos_Trans.Registro_Estado,
                Registro_Fecha = personas_Turnos_Trans.Registro_Fecha,
                Registro_Usuario = personas_Turnos_Trans.Registro_Usuario,
            };


            OSIS.PEPPAM.BOM.Experiencias_MasterCollection ret = OSIS.PEPPAM.BOM.Experiencias_MasterCollection.LoadByPersonasTurnosTrans(_Personas_Turnos_Trans);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel>();
            }

            var result = ret.Select(
                _experienciasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel()
                    {
                        Experiencia_Secuencia = _experienciasMaster.Experiencia_Secuencia,
                        Persona_Secuencia = _experienciasMaster.Persona_Secuencia,
                        Horario_Turno_Secuencia = _experienciasMaster.Horario_Turno_Secuencia,
                        Dia_Secuencia = _experienciasMaster.Dia_Secuencia,
                        Experiencia_Contenido = _experienciasMaster.Experiencia_Contenido,
                        Experiencia_Nota = _experienciasMaster.Experiencia_Nota,
                        Registro_Estado = _experienciasMaster.Registro_Estado,
                        Registro_Fecha = _experienciasMaster.Registro_Fecha,
                        Registro_Usuario = _experienciasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }


    [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static List<OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel> PageLoadByPersonasTurnosTrans(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.Mvc.Models.Personas_Turnos_TransModel personas_Turnos_Trans)
        {
            var _personas_Turnos_Trans = new OSIS.PEPPAM.BOM.Personas_Turnos_Trans()
            {
                Persona_Secuencia = personas_Turnos_Trans.Persona_Secuencia,
                Horario_Turno_Secuencia = personas_Turnos_Trans.Horario_Turno_Secuencia,
                Dia_Secuencia = personas_Turnos_Trans.Dia_Secuencia,
                Persona_Turno_HC = personas_Turnos_Trans.Persona_Turno_HC,
                Registro_Estado = personas_Turnos_Trans.Registro_Estado,
                Registro_Fecha = personas_Turnos_Trans.Registro_Fecha,
                Registro_Usuario = personas_Turnos_Trans.Registro_Usuario,
            };
            OSIS.PEPPAM.BOM.Experiencias_MasterCollection ret = OSIS.PEPPAM.BOM.Experiencias_MasterCollection.PageLoadByPersonasTurnosTrans(int.MinValue, int.MaxValue, null, _personas_Turnos_Trans);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel>();
            }

            var result = ret.Select(
                _experienciasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel()
                    {
                        Experiencia_Secuencia = _experienciasMaster.Experiencia_Secuencia,
                        Persona_Secuencia = _experienciasMaster.Persona_Secuencia,
                        Horario_Turno_Secuencia = _experienciasMaster.Horario_Turno_Secuencia,
                        Dia_Secuencia = _experienciasMaster.Dia_Secuencia,
                        Experiencia_Contenido = _experienciasMaster.Experiencia_Contenido,
                        Experiencia_Nota = _experienciasMaster.Experiencia_Nota,
                        Registro_Estado = _experienciasMaster.Registro_Estado,
                        Registro_Fecha = _experienciasMaster.Registro_Fecha,
                        Registro_Usuario = _experienciasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel> PageLoadByPersonasTurnosTrans(int pageIndex, int pageSize,int persona_Secuencia,int horario_Turno_Secuencia,int dia_Secuencia)
        {
            OSIS.PEPPAM.BOM.Experiencias_MasterCollection ret = OSIS.PEPPAM.BOM.Experiencias_MasterCollection.PageLoadByPersonasTurnosTrans(int.MinValue, int.MaxValue,
persona_Secuencia,horario_Turno_Secuencia,dia_Secuencia);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel>();
            }

            var result = ret.Select(
                _experienciasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel()
                    {
                        Experiencia_Secuencia = _experienciasMaster.Experiencia_Secuencia,
                        Persona_Secuencia = _experienciasMaster.Persona_Secuencia,
                        Horario_Turno_Secuencia = _experienciasMaster.Horario_Turno_Secuencia,
                        Dia_Secuencia = _experienciasMaster.Dia_Secuencia,
                        Experiencia_Contenido = _experienciasMaster.Experiencia_Contenido,
                        Experiencia_Nota = _experienciasMaster.Experiencia_Nota,
                        Registro_Estado = _experienciasMaster.Registro_Estado,
                        Registro_Fecha = _experienciasMaster.Registro_Fecha,
                        Registro_Usuario = _experienciasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }
	public static List<OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel> PageLoadAllPaging(int pageIndex, int pageSize, string searchString,
	        CodeFluent.Runtime.PageOptions pageOptions, out int totalCount)
	    {
	        var pageLoadAll = OSIS.PEPPAM.BOM.Experiencias_MasterCollection.PageLoadAllPaging(pageIndex, pageSize, searchString, pageOptions);

	        totalCount = pageLoadAll.TotalRowCount;
	        if (pageLoadAll == null)
	        {
                return new List<OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel>();
	        }

	        var result =  pageLoadAll.Select(
                _experienciasMaster => 
                    new OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel()
	        {
                Experiencia_Secuencia = _experienciasMaster.Experiencia_Secuencia,
                Persona_Secuencia = _experienciasMaster.Persona_Secuencia,
                Horario_Turno_Secuencia = _experienciasMaster.Horario_Turno_Secuencia,
                Dia_Secuencia = _experienciasMaster.Dia_Secuencia,
                Experiencia_Contenido = _experienciasMaster.Experiencia_Contenido,
                Experiencia_Nota = _experienciasMaster.Experiencia_Nota,
                Registro_Estado = _experienciasMaster.Registro_Estado,
                Registro_Fecha = _experienciasMaster.Registro_Fecha,
                Registro_Usuario = _experienciasMaster.Registro_Usuario,

	        }).ToList();

	        return result;
	    }

        public static List<OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel> LoadAllPaging(string searchString, out int totalCount)
        {
            OSIS.PEPPAM.BOM.Experiencias_MasterCollection ret = OSIS.PEPPAM.BOM.Experiencias_MasterCollection.PageLoadAllPaging(1, 1000000,searchString, null);

	            totalCount = ret.TotalRowCount;
            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel>();
            }

            var result = ret.Select(
                _experienciasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel()
                    {
                Experiencia_Secuencia = _experienciasMaster.Experiencia_Secuencia,
                Persona_Secuencia = _experienciasMaster.Persona_Secuencia,
                Horario_Turno_Secuencia = _experienciasMaster.Horario_Turno_Secuencia,
                Dia_Secuencia = _experienciasMaster.Dia_Secuencia,
                Experiencia_Contenido = _experienciasMaster.Experiencia_Contenido,
                Experiencia_Nota = _experienciasMaster.Experiencia_Nota,
                Registro_Estado = _experienciasMaster.Registro_Estado,
                Registro_Fecha = _experienciasMaster.Registro_Fecha,
                Registro_Usuario = _experienciasMaster.Registro_Usuario,

                    }).ToList();

            return result;
        }


public static List<OSIS.PEPPAM.Mvc.Models.Proc_Experiencias_PagingModel> LoadAdministrador(int? experienciaSecuencia,string orderby0,bool? orderbydirection0,int? pageindex,int? pagesize,int? rutaSecuencia,string searchstring,int? zonaSecuencia)
        {
            var _load_Administrador = OSIS.PEPPAM.BOM.Experiencias_Master.LoadAdministrador(
experienciaSecuencia,orderby0,orderbydirection0,pageindex,pagesize,rutaSecuencia,searchstring,zonaSecuencia);



            if ((_load_Administrador == null))
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Proc_Experiencias_PagingModel>();
            }

            var result = _load_Administrador.Select(
                x =>
                    new OSIS.PEPPAM.Mvc.Models.Proc_Experiencias_PagingModel()
                    {
                Congregacion_Nombre = x.Congregacion_Nombre,
                Congregacion_Secuencia = x.Congregacion_Secuencia.Value,
                Dia_Descripcion = x.Dia_Descripcion,
                Dia_Orden = x.Dia_Orden.Value,
                Dia_Secuencia = x.Dia_Secuencia.Value,
                Experiencia_Contenido = x.Experiencia_Contenido,
                Experiencia_Nota = x.Experiencia_Nota,
                Experiencia_Secuencia = x.Experiencia_Secuencia.Value,
                Horario_Fecha_Desde = x.Horario_Fecha_Desde.Value,
                Horario_Fecha_Hasta = x.Horario_Fecha_Hasta.Value,
                Horario_Numero = x.Horario_Numero.Value,
                Horario_Publicar = x.Horario_Publicar,
                Horario_Secuencia = x.Horario_Secuencia.Value,
                Horario_Turno_Secuencia = x.Horario_Turno_Secuencia.Value,
                Persona_Apellidos = x.Persona_Apellidos,
                Persona_Conyuge_Apellido = x.Persona_Conyuge_Apellido,
                Persona_Correo = x.Persona_Correo,
                Persona_Nombres = x.Persona_Nombres,
                Persona_Secuencia = x.Persona_Secuencia.Value,
                Persona_Sexo = x.Persona_Sexo,
                Persona_Tipo_Secuencia = x.Persona_Tipo_Secuencia.Value,
                Persona_Turno_Hc = x.Persona_Turno_Hc,
                Registro_Estado = x.Registro_Estado,
                Registro_Fecha = x.Registro_Fecha.Value,
                Registro_Usuario = x.Registro_Usuario,
                RowNumber = x.RowNumber.Value,
                Ruta_Descripcion = x.Ruta_Descripcion,
                Ruta_Secuencia = x.Ruta_Secuencia.Value,
                Semana_Codigo = x.Semana_Codigo.Value,
                Turno_Cantidad_Publicadores = x.Turno_Cantidad_Publicadores.Value,
                Turno_Descripcion = x.Turno_Descripcion,
                Turno_Estado = x.Turno_Estado,
                Turno_Fecha = x.Turno_Fecha.Value,
                Turno_Hora_Desde = x.Turno_Hora_Desde,
                Turno_Hora_Hasta = x.Turno_Hora_Hasta,
                Turno_Minutos_Cantidad = x.Turno_Minutos_Cantidad.Value,
                Zona_Secuencia = x.Zona_Secuencia.Value                    }).ToList();

            return result;
        }
	} 
} 


