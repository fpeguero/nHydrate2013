//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 6/19/2014 1:29:30 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System; 
using System.Web; 
using System.Linq; 
using System.Collections.Generic; 
using CodeFluent.Runtime; 
using CodeFluent.Runtime.Utilities; 
using System.ComponentModel.DataAnnotations; 
using FluentValidation; 
using FluentValidation.Attributes; 
using OSIS.PEPPAM.Mvc.Models; 

namespace OSIS.PEPPAM.Mvc.Models 
{ 
	public partial class Rutas_MasterModel
	{

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Rutas_Master","Ruta_Secuencia")]
		public int Ruta_Secuencia { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Rutas_Master","Zona_Secuencia")]
		public int Zona_Secuencia { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Rutas_Master","Ruta_Descripcion")]
		public String Ruta_Descripcion { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Rutas_Master","Ruta_Persona_Encargado")]
		public int Ruta_Persona_Encargado { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Rutas_Master","Ruta_Persona_Auxiliar")]
		public int Ruta_Persona_Auxiliar { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Rutas_Master","Ruta_Mapa_Url")]
		public String Ruta_Mapa_Url { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Rutas_Master","Ruta_Carros_Cantidad")]
		public int Ruta_Carros_Cantidad { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Rutas_Master","Ruta_Publicadores_Cantidad")]
		public int Ruta_Publicadores_Cantidad { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Rutas_Master","Registro_Estado")]
		public String Registro_Estado { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Rutas_Master","Registro_Fecha")]
		public DateTime Registro_Fecha { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Rutas_Master","Registro_Usuario")]
		public String Registro_Usuario { get; set; } 

		#region Navigation Properties

        private List<OSIS.PEPPAM.Mvc.Models.Horarios_MasterModel> _horarios_Master;
		/// <summary>
		/// The back navigation definition for walking [Rutas_Master]->[Horarios_Master]
		/// Relationship Links: 
		/// [Rutas_Master.Ruta_Secuencia = Horarios_Master.Ruta_Secuencia] (Required)
		/// </summary>
		[System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual List<OSIS.PEPPAM.Mvc.Models.Horarios_MasterModel> HorariosMaster
        {
            get
            {
                if ((this._horarios_Master == null))
                {
                    this._horarios_Master = OSIS.PEPPAM.Mvc.Models.Horarios_MasterModel.LoadByRutasMaster(this);
                }
                return this._horarios_Master;
            }
        }

        private List<OSIS.PEPPAM.Mvc.Models.Horario_TransModel> _horario_Trans;
		/// <summary>
		/// The back navigation definition for walking [Rutas_Master]->[Horario_Trans]
		/// Relationship Links: 
		/// [Rutas_Master.Ruta_Secuencia = Horario_Trans.Ruta_Secuencia] (Required)
		/// </summary>
		[System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual List<OSIS.PEPPAM.Mvc.Models.Horario_TransModel> HorarioTrans
        {
            get
            {
                if ((this._horario_Trans == null))
                {
                    this._horario_Trans = OSIS.PEPPAM.Mvc.Models.Horario_TransModel.LoadByRutasMaster(this);
                }
                return this._horario_Trans;
            }
        }

        private List<OSIS.PEPPAM.Mvc.Models.Notificaciones_Objetivo_TransModel> _notificaciones_Objetivo_Trans;
		/// <summary>
		/// The back navigation definition for walking [Rutas_Master]->[Notificaciones_Objetivo_Trans]
		/// Relationship Links: 
		/// [Rutas_Master.Ruta_Secuencia = Notificaciones_Objetivo_Trans.Ruta_Secuencia] (Required)
		/// </summary>
		[System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual List<OSIS.PEPPAM.Mvc.Models.Notificaciones_Objetivo_TransModel> NotificacionesObjetivoTrans
        {
            get
            {
                if ((this._notificaciones_Objetivo_Trans == null))
                {
                    this._notificaciones_Objetivo_Trans = OSIS.PEPPAM.Mvc.Models.Notificaciones_Objetivo_TransModel.LoadByRutasMaster(this);
                }
                return this._notificaciones_Objetivo_Trans;
            }
        }

        private List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> _documentos_Objetivos_Trans;
		/// <summary>
		/// The back navigation definition for walking [Rutas_Master]->[Documentos_Objetivos_Trans]
		/// Relationship Links: 
		/// [Rutas_Master.Ruta_Secuencia = Documentos_Objetivos_Trans.Ruta_Secuencia] (Required)
		/// </summary>
		[System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> DocumentosObjetivosTrans
        {
            get
            {
                if ((this._documentos_Objetivos_Trans == null))
                {
                    this._documentos_Objetivos_Trans = OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel.LoadByRutasMaster(this);
                }
                return this._documentos_Objetivos_Trans;
            }
        }

        public OSIS.PEPPAM.Mvc.Models.Personas_MasterModel _personas_Master;
		/// <summary>
		/// The navigation definition for walking [Rutas_Master]->[Personas_Master]
		/// Relationship Links: 
		/// [Personas_Master.Persona_Secuencia = Rutas_Master.Ruta_Persona_Encargado] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.Mvc.Models.Personas_MasterModel PersonasMaster
		{
			get
			{
                if ((this._personas_Master == null))
                {
                    this._personas_Master = OSIS.PEPPAM.Mvc.Models.Personas_MasterModel.Load(Ruta_Persona_Encargado);
                }
                return this._personas_Master;
			}
		}

     private List<OSIS.PEPPAM.Mvc.Models.Personas_MasterModel> _personas_MasterList;
		public virtual List<OSIS.PEPPAM.Mvc.Models.Personas_MasterModel> PersonasMasterList
		{
			get
			{
                if ((this._personas_MasterList == null))
                {
                    this._personas_MasterList = OSIS.PEPPAM.Mvc.Models.Personas_MasterModel.LoadAll();
                }
                return this._personas_MasterList;
			}
		}

        public OSIS.PEPPAM.Mvc.Models.Personas_MasterModel _personas_Master_Ruta_Persona_Auxiliar;
		/// <summary>
		/// The navigation definition for walking [Rutas_Master]->[Personas_Master]
		/// Relationship Links: 
		/// [Personas_Master.Persona_Secuencia = Rutas_Master.Ruta_Persona_Auxiliar] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.Mvc.Models.Personas_MasterModel PersonasMasterRutaPersonaAuxiliar
		{
			get
			{
                if ((this._personas_Master_Ruta_Persona_Auxiliar == null))
                {
                    this._personas_Master_Ruta_Persona_Auxiliar = OSIS.PEPPAM.Mvc.Models.Personas_MasterModel.Load(Ruta_Persona_Auxiliar);
                }
                return this._personas_Master_Ruta_Persona_Auxiliar;
			}
		}

     private List<OSIS.PEPPAM.Mvc.Models.Personas_MasterModel> _personas_Master_Ruta_Persona_AuxiliarList;
		public virtual List<OSIS.PEPPAM.Mvc.Models.Personas_MasterModel> PersonasMasterRutaPersonaAuxiliarList
		{
			get
			{
                if ((this._personas_Master_Ruta_Persona_AuxiliarList == null))
                {
                    this._personas_Master_Ruta_Persona_AuxiliarList = OSIS.PEPPAM.Mvc.Models.Personas_MasterModel.LoadAll();
                }
                return this._personas_Master_Ruta_Persona_AuxiliarList;
			}
		}

        public OSIS.PEPPAM.Mvc.Models.Zonas_MasterModel _zonas_Master;
		/// <summary>
		/// The navigation definition for walking [Rutas_Master]->[Zonas_Master]
		/// Relationship Links: 
		/// [Zonas_Master.Zona_Secuencia = Rutas_Master.Zona_Secuencia] (Required)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.Mvc.Models.Zonas_MasterModel ZonasMaster
		{
			get
			{
                if ((this._zonas_Master == null))
                {
                    this._zonas_Master = OSIS.PEPPAM.Mvc.Models.Zonas_MasterModel.Load(Zona_Secuencia);
                }
                return this._zonas_Master;
			}
		}

     private List<OSIS.PEPPAM.Mvc.Models.Zonas_MasterModel> _zonas_MasterList;
		public virtual List<OSIS.PEPPAM.Mvc.Models.Zonas_MasterModel> ZonasMasterList
		{
			get
			{
                if ((this._zonas_MasterList == null))
                {
                    this._zonas_MasterList = OSIS.PEPPAM.Mvc.Models.Zonas_MasterModel.LoadAll();
                }
                return this._zonas_MasterList;
			}
		}

		#endregion

        public virtual string EntityKey
        {
            get
            {
                return this.Ruta_Secuencia.ToString();
            }
            set
            {
               this.Ruta_Secuencia = ((int)(ConvertUtilities.ChangeType(value, typeof(int), -1)));
            }
        }

        public virtual string EntityDisplayName
        {
            get
            {
                return this.Ruta_Descripcion.ToString();
            }
        }
        

        public Rutas_MasterModel()
        {
            this.Ruta_Secuencia = -1;
            this.Zona_Secuencia = -1;
            this.Ruta_Descripcion = string.Empty;
            this.Ruta_Persona_Encargado = -1;
            this.Ruta_Persona_Auxiliar = -1;
            this.Ruta_Mapa_Url = string.Empty;
            this.Ruta_Carros_Cantidad = -1;
            this.Ruta_Publicadores_Cantidad = -1;
            this.Registro_Estado = "A";
            this.Registro_Fecha = DateTime.Now;
            this.Registro_Usuario = HttpContext.Current != null ? HttpContext.Current.User.Identity.Name : "";
            Rutas_MasterPartial();
        }

            partial void Rutas_MasterPartial();

        public virtual bool Equals(OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel rutasMaster)
        {
            if ((rutasMaster == null))
            {
                return false;
            }

            if (
                    (this.Ruta_Secuencia == -1)
            )
            {
                return base.Equals(rutasMaster);
            }

 return ((
                    (this.Ruta_Secuencia.Equals(rutasMaster.Ruta_Secuencia))
                        )== true);
        }

        public override bool Equals(object obj)
        {
            OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel rutasMaster = null;
			 rutasMaster = obj as OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel;
            return this.Equals( rutasMaster);
        }

        public override int GetHashCode()
        {
            if ((this.EntityKey == null))
            {
                return base.GetHashCode();
            }
            return this.EntityKey.GetHashCode();
        }
        
        public virtual int CompareTo(OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel rutasMaster)
        {
            if ((rutasMaster == null))
            {
                throw new System.ArgumentNullException("rutasMaster");
            }
            int localCompareTo = this.Ruta_Secuencia.CompareTo(rutasMaster.Ruta_Secuencia);
            return localCompareTo;
        }

        public static OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel Load(int ruta_Secuencia)
        {
            var _rutasMasterDb = OSIS.PEPPAM.BOM.Rutas_Master.Load(ruta_Secuencia);
	        if (_rutasMasterDb == null)
	        {
                return null;
	        }

	        var _rutasMaster = new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
            {
                Ruta_Secuencia = _rutasMasterDb.Ruta_Secuencia,
                Zona_Secuencia = _rutasMasterDb.Zona_Secuencia,
                Ruta_Descripcion = _rutasMasterDb.Ruta_Descripcion,
                Ruta_Persona_Encargado = _rutasMasterDb.Ruta_Persona_Encargado,
                Ruta_Persona_Auxiliar = _rutasMasterDb.Ruta_Persona_Auxiliar,
                Ruta_Mapa_Url = _rutasMasterDb.Ruta_Mapa_Url,
                Ruta_Carros_Cantidad = _rutasMasterDb.Ruta_Carros_Cantidad,
                Ruta_Publicadores_Cantidad = _rutasMasterDb.Ruta_Publicadores_Cantidad,
                Registro_Estado = _rutasMasterDb.Registro_Estado,
                Registro_Fecha = _rutasMasterDb.Registro_Fecha,
                Registro_Usuario = _rutasMasterDb.Registro_Usuario,

            };

	        return _rutasMaster;
       }

     public virtual bool Save()
	        {
             var _rutasMasterDb = new OSIS.PEPPAM.BOM.Rutas_Master()
	            {
                Ruta_Secuencia = this.Ruta_Secuencia,
                Zona_Secuencia = this.Zona_Secuencia,
                Ruta_Descripcion = this.Ruta_Descripcion,
                Ruta_Persona_Encargado = this.Ruta_Persona_Encargado,
                Ruta_Persona_Auxiliar = this.Ruta_Persona_Auxiliar,
                Ruta_Mapa_Url = this.Ruta_Mapa_Url,
                Ruta_Carros_Cantidad = this.Ruta_Carros_Cantidad,
                Ruta_Publicadores_Cantidad = this.Ruta_Publicadores_Cantidad,
                Registro_Estado = this.Registro_Estado,
                Registro_Fecha = this.Registro_Fecha,
                Registro_Usuario = this.Registro_Usuario
	            };

	            var result  = _rutasMasterDb.Save();
             //TODO: Puede ser que solo sean los Identity y no todo los primary keys
             this.Ruta_Secuencia = _rutasMasterDb.Ruta_Secuencia;

             return result;

	        }

        public static bool Save(OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel rutasMaster)
        {
            if ((rutasMaster == null))
            {
                return false;
            }
            bool ret = rutasMaster.Save();
            return ret;
        }

        public static bool Insert(OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel rutasMaster)
        {
            bool ret = OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel.Save(rutasMaster);
            return ret;
        }

        public static void SaveAll(List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> rutasMaster)
        {
            int index;
            for (index = (rutasMaster.Count - 1); (index >= 0); index = (index - 1))
            {
                OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel _rutasMaster = rutasMaster[index];
                _rutasMaster.Save();
            }
        }

        public static bool Delete(OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel rutasMaster)
        {
            if ((rutasMaster == null))
            {
                return false;
            }
            bool ret = rutasMaster.Delete();
            return ret;
        }

         public virtual bool Delete()
	        {
             var _rutasMasterDb = new OSIS.PEPPAM.BOM.Rutas_Master()
	            {
                Ruta_Secuencia = this.Ruta_Secuencia,

	            };

	            return _rutasMasterDb.Delete();

	        }

        public static bool Delete(int ruta_Secuencia)
        {
            if ((ruta_Secuencia == default(int)))
            {
                return false;
            }
             var _rutasMasterDb = OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel.Load(ruta_Secuencia);
            return _rutasMasterDb.Delete();
        }

        public string Trace()
	        {
             var _rutasMasterDb = new OSIS.PEPPAM.BOM.Rutas_Master()
	            {
                Ruta_Secuencia = this.Ruta_Secuencia,
                Zona_Secuencia = this.Zona_Secuencia,
                Ruta_Descripcion = this.Ruta_Descripcion,
                Ruta_Persona_Encargado = this.Ruta_Persona_Encargado,
                Ruta_Persona_Auxiliar = this.Ruta_Persona_Auxiliar,
                Ruta_Mapa_Url = this.Ruta_Mapa_Url,
                Ruta_Carros_Cantidad = this.Ruta_Carros_Cantidad,
                Ruta_Publicadores_Cantidad = this.Ruta_Publicadores_Cantidad,
                Registro_Estado = this.Registro_Estado,
                Registro_Fecha = this.Registro_Fecha,
                Registro_Usuario = this.Registro_Usuario
	            };

	            return _rutasMasterDb.Trace();

	        }

        public static OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel LoadByEntityKey(string key)
        {
            if ((key == string.Empty))
            {
                return null;
            }
            OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel rutasMaster;
            System.Type[] types = new System.Type[] {
                    typeof(int)                    };
            object[] defaultValues = new object[] {
                    -1                    };
            object[] v = CodeFluentPersistence.ParseEntityKey(key, types, defaultValues);
                    int var0;            var0 = ((int)(v[0]));
            rutasMaster = OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel.Load( var0);
            return rutasMaster;
        }


// Metodos Definidos en el Modelo y las propiedades CollectionKey
        public  OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel Clone(bool deep)
        {
             OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel  rutasMaster = new  OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel();
            this.CopyTo(rutasMaster , deep);
            return rutasMaster ;
        }

        public OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel Clone()
        {
            OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel localClone = this.Clone(true);
            return localClone;
        }

        public virtual void CopyFrom(System.Collections.IDictionary dict, bool deep)
        {
            if ((dict == null))
            {
                throw new System.ArgumentNullException("dict");
            }
            if ((dict.Contains("Registro_Estado") == true))
            {
                this.Registro_Estado = ((string)(ConvertUtilities.ChangeType(dict["Registro_Estado"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Registro_Fecha") == true))
            {
                this.Registro_Fecha = ((DateTime)(ConvertUtilities.ChangeType(dict["Registro_Fecha"], typeof(DateTime), System.DateTime.MinValue)));
            }
            if ((dict.Contains("Registro_Usuario") == true))
            {
                this.Registro_Usuario = ((string)(ConvertUtilities.ChangeType(dict["Registro_Usuario"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Ruta_Carros_Cantidad") == true))
            {
                this.Ruta_Carros_Cantidad = ((int)(ConvertUtilities.ChangeType(dict["Ruta_Carros_Cantidad"], typeof(int), -1)));
            }
            if ((dict.Contains("Ruta_Descripcion") == true))
            {
                this.Ruta_Descripcion = ((string)(ConvertUtilities.ChangeType(dict["Ruta_Descripcion"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Ruta_Mapa_Url") == true))
            {
                this.Ruta_Mapa_Url = ((string)(ConvertUtilities.ChangeType(dict["Ruta_Mapa_Url"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Ruta_Persona_Auxiliar") == true))
            {
                this.Ruta_Persona_Auxiliar = ((int)(ConvertUtilities.ChangeType(dict["Ruta_Persona_Auxiliar"], typeof(int), -1)));
            }
            if ((dict.Contains("Ruta_Persona_Encargado") == true))
            {
                this.Ruta_Persona_Encargado = ((int)(ConvertUtilities.ChangeType(dict["Ruta_Persona_Encargado"], typeof(int), -1)));
            }
            if ((dict.Contains("Ruta_Publicadores_Cantidad") == true))
            {
                this.Ruta_Publicadores_Cantidad = ((int)(ConvertUtilities.ChangeType(dict["Ruta_Publicadores_Cantidad"], typeof(int), -1)));
            }
            if ((dict.Contains("Ruta_Secuencia") == true))
            {
                this.Ruta_Secuencia = ((int)(ConvertUtilities.ChangeType(dict["Ruta_Secuencia"], typeof(int), -1)));
            }
            if ((dict.Contains("Zona_Secuencia") == true))
            {
                this.Zona_Secuencia = ((int)(ConvertUtilities.ChangeType(dict["Zona_Secuencia"], typeof(int), -1)));
            }
        }

        public virtual void CopyTo( OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel  rutasMaster, bool deep)
        {
            if ((rutasMaster == null))
            {
                throw new System.ArgumentNullException("rutasMaster");
            }
            rutasMaster.Registro_Estado = this.Registro_Estado;
            rutasMaster.Registro_Fecha = this.Registro_Fecha;
            rutasMaster.Registro_Usuario = this.Registro_Usuario;
            rutasMaster.Ruta_Carros_Cantidad = this.Ruta_Carros_Cantidad;
            rutasMaster.Ruta_Descripcion = this.Ruta_Descripcion;
            rutasMaster.Ruta_Mapa_Url = this.Ruta_Mapa_Url;
            rutasMaster.Ruta_Persona_Auxiliar = this.Ruta_Persona_Auxiliar;
            rutasMaster.Ruta_Persona_Encargado = this.Ruta_Persona_Encargado;
            rutasMaster.Ruta_Publicadores_Cantidad = this.Ruta_Publicadores_Cantidad;
            rutasMaster.Ruta_Secuencia = this.Ruta_Secuencia;
            rutasMaster.Zona_Secuencia = this.Zona_Secuencia;
        }

	public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> PageLoadAll(int pageIndex, int pageSize,
	        CodeFluent.Runtime.PageOptions pageOptions)
	    {
	        var pageLoadAll = OSIS.PEPPAM.BOM.Rutas_MasterCollection.PageLoadAll(pageIndex, pageSize, pageOptions);

	        if (pageLoadAll == null)
	        {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
	        }

	        var result =  pageLoadAll.Select(
                _rutasMaster => 
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
	        {
                Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                Registro_Estado = _rutasMaster.Registro_Estado,
                Registro_Fecha = _rutasMaster.Registro_Fecha,
                Registro_Usuario = _rutasMaster.Registro_Usuario,

	        }).ToList();

	        return result;
	    }

        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> LoadAll()
        {
            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.PageLoadAll(int.MinValue, int.MaxValue, null);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                Registro_Estado = _rutasMaster.Registro_Estado,
                Registro_Fecha = _rutasMaster.Registro_Fecha,
                Registro_Usuario = _rutasMaster.Registro_Usuario,

                    }).ToList();

            return result;
        }

        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> LoadByPersonasMaster(OSIS.PEPPAM.Mvc.Models.Personas_MasterModel personas_Master)
        {

            var _Personas_Master = new OSIS.PEPPAM.BOM.Personas_Master()
            {
                Persona_Secuencia = personas_Master.Persona_Secuencia,
                Congregacion_Secuencia = personas_Master.Congregacion_Secuencia,
                Persona_Congregacion = personas_Master.Persona_Congregacion,
                Persona_Tipo_Secuencia = personas_Master.Persona_Tipo_Secuencia,
                Persona_Nombres = personas_Master.Persona_Nombres,
                Persona_Apellidos = personas_Master.Persona_Apellidos,
                Persona_Conyuge_Apellido = personas_Master.Persona_Conyuge_Apellido,
                Persona_Sexo = personas_Master.Persona_Sexo,
                Persona_Correo = personas_Master.Persona_Correo,
                Persona_Clave = personas_Master.Persona_Clave,
                Persona_Verificacion_Numero = personas_Master.Persona_Verificacion_Numero,
                Persona_Estado_Secuencia = personas_Master.Persona_Estado_Secuencia,
                Registro_Estado = personas_Master.Registro_Estado,
                Registro_Fecha = personas_Master.Registro_Fecha,
                Registro_Usuario = personas_Master.Registro_Usuario,
            };


            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.LoadByPersonasMaster(_Personas_Master);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                        Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                        Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                        Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                        Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                        Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                        Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                        Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                        Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                        Registro_Estado = _rutasMaster.Registro_Estado,
                        Registro_Fecha = _rutasMaster.Registro_Fecha,
                        Registro_Usuario = _rutasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }


    [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> PageLoadByPersonasMaster(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.Mvc.Models.Personas_MasterModel personas_Master)
        {
            var _personas_Master = new OSIS.PEPPAM.BOM.Personas_Master()
            {
                Persona_Secuencia = personas_Master.Persona_Secuencia,
                Congregacion_Secuencia = personas_Master.Congregacion_Secuencia,
                Persona_Congregacion = personas_Master.Persona_Congregacion,
                Persona_Tipo_Secuencia = personas_Master.Persona_Tipo_Secuencia,
                Persona_Nombres = personas_Master.Persona_Nombres,
                Persona_Apellidos = personas_Master.Persona_Apellidos,
                Persona_Conyuge_Apellido = personas_Master.Persona_Conyuge_Apellido,
                Persona_Sexo = personas_Master.Persona_Sexo,
                Persona_Correo = personas_Master.Persona_Correo,
                Persona_Clave = personas_Master.Persona_Clave,
                Persona_Verificacion_Numero = personas_Master.Persona_Verificacion_Numero,
                Persona_Estado_Secuencia = personas_Master.Persona_Estado_Secuencia,
                Registro_Estado = personas_Master.Registro_Estado,
                Registro_Fecha = personas_Master.Registro_Fecha,
                Registro_Usuario = personas_Master.Registro_Usuario,
            };
            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.PageLoadByPersonasMaster(int.MinValue, int.MaxValue, null, _personas_Master);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                        Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                        Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                        Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                        Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                        Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                        Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                        Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                        Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                        Registro_Estado = _rutasMaster.Registro_Estado,
                        Registro_Fecha = _rutasMaster.Registro_Fecha,
                        Registro_Usuario = _rutasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> PageLoadByPersonasMaster(int pageIndex, int pageSize,int ruta_Persona_Encargado)
        {
            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.PageLoadByPersonasMaster(int.MinValue, int.MaxValue,
ruta_Persona_Encargado);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                        Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                        Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                        Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                        Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                        Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                        Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                        Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                        Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                        Registro_Estado = _rutasMaster.Registro_Estado,
                        Registro_Fecha = _rutasMaster.Registro_Fecha,
                        Registro_Usuario = _rutasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }
        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> LoadByPersonasMasterRutaPersonaAuxiliar(OSIS.PEPPAM.Mvc.Models.Personas_MasterModel personas_Master_Ruta_Persona_Auxiliar)
        {

            var _Personas_Master = new OSIS.PEPPAM.BOM.Personas_Master()
            {
                Persona_Secuencia = personas_Master_Ruta_Persona_Auxiliar.Persona_Secuencia,
                Congregacion_Secuencia = personas_Master_Ruta_Persona_Auxiliar.Congregacion_Secuencia,
                Persona_Congregacion = personas_Master_Ruta_Persona_Auxiliar.Persona_Congregacion,
                Persona_Tipo_Secuencia = personas_Master_Ruta_Persona_Auxiliar.Persona_Tipo_Secuencia,
                Persona_Nombres = personas_Master_Ruta_Persona_Auxiliar.Persona_Nombres,
                Persona_Apellidos = personas_Master_Ruta_Persona_Auxiliar.Persona_Apellidos,
                Persona_Conyuge_Apellido = personas_Master_Ruta_Persona_Auxiliar.Persona_Conyuge_Apellido,
                Persona_Sexo = personas_Master_Ruta_Persona_Auxiliar.Persona_Sexo,
                Persona_Correo = personas_Master_Ruta_Persona_Auxiliar.Persona_Correo,
                Persona_Clave = personas_Master_Ruta_Persona_Auxiliar.Persona_Clave,
                Persona_Verificacion_Numero = personas_Master_Ruta_Persona_Auxiliar.Persona_Verificacion_Numero,
                Persona_Estado_Secuencia = personas_Master_Ruta_Persona_Auxiliar.Persona_Estado_Secuencia,
                Registro_Estado = personas_Master_Ruta_Persona_Auxiliar.Registro_Estado,
                Registro_Fecha = personas_Master_Ruta_Persona_Auxiliar.Registro_Fecha,
                Registro_Usuario = personas_Master_Ruta_Persona_Auxiliar.Registro_Usuario,
            };


            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.LoadByPersonasMasterRutaPersonaAuxiliar(_Personas_Master);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                        Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                        Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                        Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                        Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                        Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                        Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                        Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                        Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                        Registro_Estado = _rutasMaster.Registro_Estado,
                        Registro_Fecha = _rutasMaster.Registro_Fecha,
                        Registro_Usuario = _rutasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }


    [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> PageLoadByPersonasMasterRutaPersonaAuxiliar(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.Mvc.Models.Personas_MasterModel personas_Master_Ruta_Persona_Auxiliar)
        {
            var _personas_Master_Ruta_Persona_Auxiliar = new OSIS.PEPPAM.BOM.Personas_Master()
            {
                Persona_Secuencia = personas_Master_Ruta_Persona_Auxiliar.Persona_Secuencia,
                Congregacion_Secuencia = personas_Master_Ruta_Persona_Auxiliar.Congregacion_Secuencia,
                Persona_Congregacion = personas_Master_Ruta_Persona_Auxiliar.Persona_Congregacion,
                Persona_Tipo_Secuencia = personas_Master_Ruta_Persona_Auxiliar.Persona_Tipo_Secuencia,
                Persona_Nombres = personas_Master_Ruta_Persona_Auxiliar.Persona_Nombres,
                Persona_Apellidos = personas_Master_Ruta_Persona_Auxiliar.Persona_Apellidos,
                Persona_Conyuge_Apellido = personas_Master_Ruta_Persona_Auxiliar.Persona_Conyuge_Apellido,
                Persona_Sexo = personas_Master_Ruta_Persona_Auxiliar.Persona_Sexo,
                Persona_Correo = personas_Master_Ruta_Persona_Auxiliar.Persona_Correo,
                Persona_Clave = personas_Master_Ruta_Persona_Auxiliar.Persona_Clave,
                Persona_Verificacion_Numero = personas_Master_Ruta_Persona_Auxiliar.Persona_Verificacion_Numero,
                Persona_Estado_Secuencia = personas_Master_Ruta_Persona_Auxiliar.Persona_Estado_Secuencia,
                Registro_Estado = personas_Master_Ruta_Persona_Auxiliar.Registro_Estado,
                Registro_Fecha = personas_Master_Ruta_Persona_Auxiliar.Registro_Fecha,
                Registro_Usuario = personas_Master_Ruta_Persona_Auxiliar.Registro_Usuario,
            };
            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.PageLoadByPersonasMasterRutaPersonaAuxiliar(int.MinValue, int.MaxValue, null, _personas_Master_Ruta_Persona_Auxiliar);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                        Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                        Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                        Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                        Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                        Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                        Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                        Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                        Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                        Registro_Estado = _rutasMaster.Registro_Estado,
                        Registro_Fecha = _rutasMaster.Registro_Fecha,
                        Registro_Usuario = _rutasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> PageLoadByPersonasMasterRutaPersonaAuxiliar(int pageIndex, int pageSize,int ruta_Persona_Auxiliar)
        {
            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.PageLoadByPersonasMasterRutaPersonaAuxiliar(int.MinValue, int.MaxValue,
ruta_Persona_Auxiliar);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                        Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                        Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                        Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                        Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                        Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                        Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                        Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                        Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                        Registro_Estado = _rutasMaster.Registro_Estado,
                        Registro_Fecha = _rutasMaster.Registro_Fecha,
                        Registro_Usuario = _rutasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }
        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> LoadByZonasMaster(OSIS.PEPPAM.Mvc.Models.Zonas_MasterModel zonas_Master)
        {

            var _Zonas_Master = new OSIS.PEPPAM.BOM.Zonas_Master()
            {
                Zona_Secuencia = zonas_Master.Zona_Secuencia,
                Zona_Descripcion = zonas_Master.Zona_Descripcion,
                Zona_Nota = zonas_Master.Zona_Nota,
                Registro_Estado = zonas_Master.Registro_Estado,
                Registro_Fecha = zonas_Master.Registro_Fecha,
                Registro_Usuario = zonas_Master.Registro_Usuario,
            };


            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.LoadByZonasMaster(_Zonas_Master);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                        Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                        Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                        Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                        Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                        Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                        Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                        Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                        Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                        Registro_Estado = _rutasMaster.Registro_Estado,
                        Registro_Fecha = _rutasMaster.Registro_Fecha,
                        Registro_Usuario = _rutasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }


    [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> PageLoadByZonasMaster(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.Mvc.Models.Zonas_MasterModel zonas_Master)
        {
            var _zonas_Master = new OSIS.PEPPAM.BOM.Zonas_Master()
            {
                Zona_Secuencia = zonas_Master.Zona_Secuencia,
                Zona_Descripcion = zonas_Master.Zona_Descripcion,
                Zona_Nota = zonas_Master.Zona_Nota,
                Registro_Estado = zonas_Master.Registro_Estado,
                Registro_Fecha = zonas_Master.Registro_Fecha,
                Registro_Usuario = zonas_Master.Registro_Usuario,
            };
            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.PageLoadByZonasMaster(int.MinValue, int.MaxValue, null, _zonas_Master);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                        Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                        Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                        Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                        Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                        Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                        Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                        Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                        Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                        Registro_Estado = _rutasMaster.Registro_Estado,
                        Registro_Fecha = _rutasMaster.Registro_Fecha,
                        Registro_Usuario = _rutasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> PageLoadByZonasMaster(int pageIndex, int pageSize,int zona_Secuencia)
        {
            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.PageLoadByZonasMaster(int.MinValue, int.MaxValue,
zona_Secuencia);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                        Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                        Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                        Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                        Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                        Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                        Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                        Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                        Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                        Registro_Estado = _rutasMaster.Registro_Estado,
                        Registro_Fecha = _rutasMaster.Registro_Fecha,
                        Registro_Usuario = _rutasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }
        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> PageLoadpersona(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions ,int persona_Secuencia)
        {
            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.PageLoadpersona(int.MinValue, int.MaxValue,pageOptions
,persona_Secuencia);
            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                        Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                        Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                        Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                        Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                        Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                        Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                        Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                        Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                        Registro_Estado = _rutasMaster.Registro_Estado,
                        Registro_Fecha = _rutasMaster.Registro_Fecha,
                        Registro_Usuario = _rutasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> Loadpersona(int persona_Secuencia)
        {
            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.Loadpersona(
persona_Secuencia);
            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                        Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                        Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                        Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                        Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                        Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                        Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                        Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                        Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                        Registro_Estado = _rutasMaster.Registro_Estado,
                        Registro_Fecha = _rutasMaster.Registro_Fecha,
                        Registro_Usuario = _rutasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> PageLoadpersona(int pageIndex, int pageSize ,int persona_Secuencia)
        {
            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.PageLoadpersona(int.MinValue, int.MaxValue
,persona_Secuencia);
            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                        Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                        Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                        Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                        Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                        Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                        Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                        Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                        Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                        Registro_Estado = _rutasMaster.Registro_Estado,
                        Registro_Fecha = _rutasMaster.Registro_Fecha,
                        Registro_Usuario = _rutasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> PageLoadzona(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions ,int zona_Secuencia)
        {
            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.PageLoadzona(int.MinValue, int.MaxValue,pageOptions
,zona_Secuencia);
            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                        Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                        Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                        Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                        Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                        Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                        Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                        Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                        Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                        Registro_Estado = _rutasMaster.Registro_Estado,
                        Registro_Fecha = _rutasMaster.Registro_Fecha,
                        Registro_Usuario = _rutasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> Loadzona(int zona_Secuencia)
        {
            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.Loadzona(
zona_Secuencia);
            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                        Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                        Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                        Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                        Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                        Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                        Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                        Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                        Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                        Registro_Estado = _rutasMaster.Registro_Estado,
                        Registro_Fecha = _rutasMaster.Registro_Fecha,
                        Registro_Usuario = _rutasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> PageLoadzona(int pageIndex, int pageSize ,int zona_Secuencia)
        {
            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.PageLoadzona(int.MinValue, int.MaxValue
,zona_Secuencia);
            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                        Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                        Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                        Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                        Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                        Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                        Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                        Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                        Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                        Registro_Estado = _rutasMaster.Registro_Estado,
                        Registro_Fecha = _rutasMaster.Registro_Fecha,
                        Registro_Usuario = _rutasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> PageLoadencargadoauxiliar(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions ,int persona_Secuencia)
        {
            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.PageLoadencargadoauxiliar(int.MinValue, int.MaxValue,pageOptions
,persona_Secuencia);
            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                        Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                        Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                        Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                        Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                        Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                        Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                        Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                        Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                        Registro_Estado = _rutasMaster.Registro_Estado,
                        Registro_Fecha = _rutasMaster.Registro_Fecha,
                        Registro_Usuario = _rutasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> Loadencargadoauxiliar(int persona_Secuencia)
        {
            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.Loadencargadoauxiliar(
persona_Secuencia);
            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                        Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                        Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                        Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                        Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                        Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                        Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                        Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                        Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                        Registro_Estado = _rutasMaster.Registro_Estado,
                        Registro_Fecha = _rutasMaster.Registro_Fecha,
                        Registro_Usuario = _rutasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> PageLoadencargadoauxiliar(int pageIndex, int pageSize ,int persona_Secuencia)
        {
            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.PageLoadencargadoauxiliar(int.MinValue, int.MaxValue
,persona_Secuencia);
            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                        Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                        Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                        Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                        Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                        Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                        Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                        Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                        Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                        Registro_Estado = _rutasMaster.Registro_Estado,
                        Registro_Fecha = _rutasMaster.Registro_Fecha,
                        Registro_Usuario = _rutasMaster.Registro_Usuario,
                    }).ToList();

            return result;
        }


	public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> PageLoadAllPaging(int pageIndex, int pageSize, string searchString,
	        CodeFluent.Runtime.PageOptions pageOptions, out int totalCount)
	    {
	        var pageLoadAll = OSIS.PEPPAM.BOM.Rutas_MasterCollection.PageLoadAllPaging(pageIndex, pageSize, searchString, pageOptions);

	        totalCount = pageLoadAll.TotalRowCount;
	        if (pageLoadAll == null)
	        {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
	        }

	        var result =  pageLoadAll.Select(
                _rutasMaster => 
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
	        {
                Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                Registro_Estado = _rutasMaster.Registro_Estado,
                Registro_Fecha = _rutasMaster.Registro_Fecha,
                Registro_Usuario = _rutasMaster.Registro_Usuario,

	        }).ToList();

	        return result;
	    }

        public static List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel> LoadAllPaging(string searchString, out int totalCount)
        {
            OSIS.PEPPAM.BOM.Rutas_MasterCollection ret = OSIS.PEPPAM.BOM.Rutas_MasterCollection.PageLoadAllPaging(1, 1000000,searchString, null);

	            totalCount = ret.TotalRowCount;
            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel>();
            }

            var result = ret.Select(
                _rutasMaster =>
                    new OSIS.PEPPAM.Mvc.Models.Rutas_MasterModel()
                    {
                Ruta_Secuencia = _rutasMaster.Ruta_Secuencia,
                Zona_Secuencia = _rutasMaster.Zona_Secuencia,
                Ruta_Descripcion = _rutasMaster.Ruta_Descripcion,
                Ruta_Persona_Encargado = _rutasMaster.Ruta_Persona_Encargado,
                Ruta_Persona_Auxiliar = _rutasMaster.Ruta_Persona_Auxiliar,
                Ruta_Mapa_Url = _rutasMaster.Ruta_Mapa_Url,
                Ruta_Carros_Cantidad = _rutasMaster.Ruta_Carros_Cantidad,
                Ruta_Publicadores_Cantidad = _rutasMaster.Ruta_Publicadores_Cantidad,
                Registro_Estado = _rutasMaster.Registro_Estado,
                Registro_Fecha = _rutasMaster.Registro_Fecha,
                Registro_Usuario = _rutasMaster.Registro_Usuario,

                    }).ToList();

            return result;
        }

	public static List<OSIS.PEPPAM.Mvc.Models.Proc_Rutas_Relacionados_DescripcionModel> Ruta_RelacionadosPageLoadAll(int pageIndex, int pageSize, int rutaSecuencia,int zonaSecuencia,	        string searchString, CodeFluent.Runtime.PageOptions pageOptions)
	    {
	        var pageLoadAll = OSIS.PEPPAM.Mvc.Models.Proc_Rutas_Relacionados_DescripcionModel.PageLoadAllPaging(pageIndex, pageSize, rutaSecuencia,zonaSecuencia,searchString, pageOptions);

	        if (pageLoadAll == null)
	        {
                return new List<OSIS.PEPPAM.Mvc.Models.Proc_Rutas_Relacionados_DescripcionModel>();
	        }


	        return pageLoadAll;
	    }

        public static List<OSIS.PEPPAM.Mvc.Models.Proc_Rutas_Relacionados_DescripcionModel> Ruta_RelacionadosLoadAll(int rutaSecuencia,int zonaSecuencia,	        string searchString)
        {
            var ret = OSIS.PEPPAM.Mvc.Models.Proc_Rutas_Relacionados_DescripcionModel.PageLoadAllPaging(1, 1000000, rutaSecuencia,zonaSecuencia,searchString, null);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Proc_Rutas_Relacionados_DescripcionModel>();
            }


            return ret;
        }


public static List<OSIS.PEPPAM.Mvc.Models.Proc_Rutas_Relacionados_DescripcionModel> RutaRelacionados(int rutaSecuencia,int zonaSecuencia)
        {
            if ((rutaSecuencia == default(int)))
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Proc_Rutas_Relacionados_DescripcionModel>();
            }
            if ((zonaSecuencia == default(int)))
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Proc_Rutas_Relacionados_DescripcionModel>();
            }
            var _ruta_Relacionados = OSIS.PEPPAM.BOM.Rutas_Master.RutaRelacionados(
rutaSecuencia,zonaSecuencia);



            if ((_ruta_Relacionados == null))
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Proc_Rutas_Relacionados_DescripcionModel>();
            }

            var result = _ruta_Relacionados.Select(
                x =>
                    new OSIS.PEPPAM.Mvc.Models.Proc_Rutas_Relacionados_DescripcionModel()
                    {
                Auxiliar_Congregacion_Secuencia = x.Auxiliar_Congregacion_Secuencia,
                Auxiliar_Persona_Apellidos = x.Auxiliar_Persona_Apellidos,
                Auxiliar_Persona_Nombres = x.Auxiliar_Persona_Nombres,
                Auxiliar_Persona_Secuencia = x.Auxiliar_Persona_Secuencia,
                Encargado_Congregacion_Secuencia = x.Encargado_Congregacion_Secuencia,
                Encargado_Persona_Apellidos = x.Encargado_Persona_Apellidos,
                Encargado_Persona_Nombres = x.Encargado_Persona_Nombres,
                Encargado_Persona_Secuencia = x.Encargado_Persona_Secuencia,
                Registro_Estado = x.Registro_Estado,
                Registro_Fecha = x.Registro_Fecha,
                Registro_Usuario = x.Registro_Usuario,
                Ruta_Carros_Cantidad = x.Ruta_Carros_Cantidad,
                Ruta_Descripcion = x.Ruta_Descripcion,
                Ruta_Mapa_Url = x.Ruta_Mapa_Url,
                Ruta_Persona_Auxiliar = x.Ruta_Persona_Auxiliar,
                Ruta_Persona_Encargado = x.Ruta_Persona_Encargado,
                Ruta_Publicadores_Cantidad = x.Ruta_Publicadores_Cantidad,
                Ruta_Secuencia = x.Ruta_Secuencia,
                Zona_Descripcion = x.Zona_Descripcion,
                Zona_Nota = x.Zona_Nota,
                Zona_Secuencia = x.Zona_Secuencia                    }).ToList();

            return result;
        }
	} 
} 


