//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 6/19/2014 1:29:30 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System; 
using System.Web; 
using System.Linq; 
using System.Collections.Generic; 
using CodeFluent.Runtime; 
using CodeFluent.Runtime.Utilities; 
using System.ComponentModel.DataAnnotations; 
using FluentValidation; 
using FluentValidation.Attributes; 
using OSIS.PEPPAM.Mvc.Models; 

namespace OSIS.PEPPAM.Mvc.Models 
{ 
	public partial class Roles_CataModel
	{

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Roles_Cata","Role_Numero")]
		public int Role_Numero { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Roles_Cata","Role_Nivel_Numero")]
		public int? Role_Nivel_Numero { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Roles_Cata","Role_Nombre")]
		public String Role_Nombre { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Roles_Cata","Role_Descripcion")]
		public String Role_Descripcion { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Roles_Cata","Registro_Estado")]
		public String Registro_Estado { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Roles_Cata","Registro_Fecha")]
		public DateTime Registro_Fecha { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Roles_Cata","Registro_Usuario")]
		public String Registro_Usuario { get; set; } 

		#region Navigation Properties

        private List<OSIS.PEPPAM.Mvc.Models.Persona_Roles_TransModel> _persona_Roles_Trans;
		/// <summary>
		/// The back navigation definition for walking [Roles_Cata]->[Persona_Roles_Trans]
		/// Relationship Links: 
		/// [Roles_Cata.Role_Numero = Persona_Roles_Trans.Role_Numero] (Required)
		/// </summary>
		[System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual List<OSIS.PEPPAM.Mvc.Models.Persona_Roles_TransModel> PersonaRolesTrans
        {
            get
            {
                if ((this._persona_Roles_Trans == null))
                {
                    this._persona_Roles_Trans = OSIS.PEPPAM.Mvc.Models.Persona_Roles_TransModel.LoadByRolesCata(this);
                }
                return this._persona_Roles_Trans;
            }
        }

        private List<OSIS.PEPPAM.Mvc.Models.Roles_Funcionalidad_Acciones_TransModel> _roles_Funcionalidad_Acciones_Trans;
		/// <summary>
		/// The back navigation definition for walking [Roles_Cata]->[Roles_Funcionalidad_Acciones_Trans]
		/// Relationship Links: 
		/// [Roles_Cata.Role_Numero = Roles_Funcionalidad_Acciones_Trans.Role_Numero] (Required)
		/// </summary>
		[System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual List<OSIS.PEPPAM.Mvc.Models.Roles_Funcionalidad_Acciones_TransModel> RolesFuncionalidadAccionesTrans
        {
            get
            {
                if ((this._roles_Funcionalidad_Acciones_Trans == null))
                {
                    this._roles_Funcionalidad_Acciones_Trans = OSIS.PEPPAM.Mvc.Models.Roles_Funcionalidad_Acciones_TransModel.LoadByRolesCata(this);
                }
                return this._roles_Funcionalidad_Acciones_Trans;
            }
        }

        private List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> _documentos_Objetivos_Trans;
		/// <summary>
		/// The back navigation definition for walking [Roles_Cata]->[Documentos_Objetivos_Trans]
		/// Relationship Links: 
		/// [Roles_Cata.Role_Numero = Documentos_Objetivos_Trans.Role_Numero] (Required)
		/// </summary>
		[System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual List<OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel> DocumentosObjetivosTrans
        {
            get
            {
                if ((this._documentos_Objetivos_Trans == null))
                {
                    this._documentos_Objetivos_Trans = OSIS.PEPPAM.Mvc.Models.Documentos_Objetivos_TransModel.LoadByRolesCata(this);
                }
                return this._documentos_Objetivos_Trans;
            }
        }

        private List<OSIS.PEPPAM.Mvc.Models.Notificaciones_Objetivo_TransModel> _notificaciones_Objetivo_Trans;
		/// <summary>
		/// The back navigation definition for walking [Roles_Cata]->[Notificaciones_Objetivo_Trans]
		/// Relationship Links: 
		/// [Roles_Cata.Role_Numero = Notificaciones_Objetivo_Trans.Role_Numero] (Required)
		/// </summary>
		[System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual List<OSIS.PEPPAM.Mvc.Models.Notificaciones_Objetivo_TransModel> NotificacionesObjetivoTrans
        {
            get
            {
                if ((this._notificaciones_Objetivo_Trans == null))
                {
                    this._notificaciones_Objetivo_Trans = OSIS.PEPPAM.Mvc.Models.Notificaciones_Objetivo_TransModel.LoadByRolesCata(this);
                }
                return this._notificaciones_Objetivo_Trans;
            }
        }

        public OSIS.PEPPAM.Mvc.Models.Roles_Niveles_CataModel _roles_Niveles_Cata;
		/// <summary>
		/// The navigation definition for walking [Roles_Cata]->[Roles_Niveles_Cata]
		/// Relationship Links: 
		/// [Roles_Niveles_Cata.Role_Nivel_Numero = Roles_Cata.Role_Nivel_Numero] (Optional)
		/// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
		public virtual OSIS.PEPPAM.Mvc.Models.Roles_Niveles_CataModel RolesNivelesCata
		{
			get
			{
                if ((this._roles_Niveles_Cata == null))
                {
                     if ((Role_Nivel_Numero.HasValue)                     )
                     {
                         this._roles_Niveles_Cata = OSIS.PEPPAM.Mvc.Models.Roles_Niveles_CataModel.Load(Role_Nivel_Numero.Value);
                     }
                }
                return this._roles_Niveles_Cata;
			}
		}

     private List<OSIS.PEPPAM.Mvc.Models.Roles_Niveles_CataModel> _roles_Niveles_CataList;
		public virtual List<OSIS.PEPPAM.Mvc.Models.Roles_Niveles_CataModel> RolesNivelesCataList
		{
			get
			{
                if ((this._roles_Niveles_CataList == null))
                {
                    this._roles_Niveles_CataList = OSIS.PEPPAM.Mvc.Models.Roles_Niveles_CataModel.LoadAll();
                }
                return this._roles_Niveles_CataList;
			}
		}

		#endregion

        public virtual string EntityKey
        {
            get
            {
                return this.Role_Numero.ToString();
            }
            set
            {
               this.Role_Numero = ((int)(ConvertUtilities.ChangeType(value, typeof(int), -1)));
            }
        }

        public virtual string EntityDisplayName
        {
            get
            {
                return this.Role_Nombre.ToString();
            }
        }
        

        public Roles_CataModel()
        {
            this.Role_Numero = -1;
            this.Role_Nivel_Numero = -1;
            this.Role_Nombre = string.Empty;
            this.Role_Descripcion = string.Empty;
            this.Registro_Estado = "A";
            this.Registro_Fecha = DateTime.Now;
            this.Registro_Usuario = HttpContext.Current != null ? HttpContext.Current.User.Identity.Name : "";
            Roles_CataPartial();
        }

            partial void Roles_CataPartial();

        public virtual bool Equals(OSIS.PEPPAM.Mvc.Models.Roles_CataModel rolesCata)
        {
            if ((rolesCata == null))
            {
                return false;
            }

            if (
                    (this.Role_Numero == -1)
            )
            {
                return base.Equals(rolesCata);
            }

 return ((
                    (this.Role_Numero.Equals(rolesCata.Role_Numero))
                        )== true);
        }

        public override bool Equals(object obj)
        {
            OSIS.PEPPAM.Mvc.Models.Roles_CataModel rolesCata = null;
			 rolesCata = obj as OSIS.PEPPAM.Mvc.Models.Roles_CataModel;
            return this.Equals( rolesCata);
        }

        public override int GetHashCode()
        {
            if ((this.EntityKey == null))
            {
                return base.GetHashCode();
            }
            return this.EntityKey.GetHashCode();
        }
        
        public virtual int CompareTo(OSIS.PEPPAM.Mvc.Models.Roles_CataModel rolesCata)
        {
            if ((rolesCata == null))
            {
                throw new System.ArgumentNullException("rolesCata");
            }
            int localCompareTo = this.Role_Numero.CompareTo(rolesCata.Role_Numero);
            return localCompareTo;
        }

        public static OSIS.PEPPAM.Mvc.Models.Roles_CataModel Load(int role_Numero)
        {
            var _rolesCataDb = OSIS.PEPPAM.BOM.Roles_Cata.Load(role_Numero);
	        if (_rolesCataDb == null)
	        {
                return null;
	        }

	        var _rolesCata = new OSIS.PEPPAM.Mvc.Models.Roles_CataModel()
            {
                Role_Numero = _rolesCataDb.Role_Numero,
                Role_Nivel_Numero = _rolesCataDb.Role_Nivel_Numero,
                Role_Nombre = _rolesCataDb.Role_Nombre,
                Role_Descripcion = _rolesCataDb.Role_Descripcion,
                Registro_Estado = _rolesCataDb.Registro_Estado,
                Registro_Fecha = _rolesCataDb.Registro_Fecha,
                Registro_Usuario = _rolesCataDb.Registro_Usuario,

            };

	        return _rolesCata;
       }

     public virtual bool Save()
	        {
             var _rolesCataDb = new OSIS.PEPPAM.BOM.Roles_Cata()
	            {
                Role_Numero = this.Role_Numero,
                Role_Nivel_Numero = this.Role_Nivel_Numero,
                Role_Nombre = this.Role_Nombre,
                Role_Descripcion = this.Role_Descripcion,
                Registro_Estado = this.Registro_Estado,
                Registro_Fecha = this.Registro_Fecha,
                Registro_Usuario = this.Registro_Usuario
	            };

	            var result  = _rolesCataDb.Save();
             //TODO: Puede ser que solo sean los Identity y no todo los primary keys
             this.Role_Numero = _rolesCataDb.Role_Numero;

             return result;

	        }

        public static bool Save(OSIS.PEPPAM.Mvc.Models.Roles_CataModel rolesCata)
        {
            if ((rolesCata == null))
            {
                return false;
            }
            bool ret = rolesCata.Save();
            return ret;
        }

        public static bool Insert(OSIS.PEPPAM.Mvc.Models.Roles_CataModel rolesCata)
        {
            bool ret = OSIS.PEPPAM.Mvc.Models.Roles_CataModel.Save(rolesCata);
            return ret;
        }

        public static void SaveAll(List<OSIS.PEPPAM.Mvc.Models.Roles_CataModel> rolesCata)
        {
            int index;
            for (index = (rolesCata.Count - 1); (index >= 0); index = (index - 1))
            {
                OSIS.PEPPAM.Mvc.Models.Roles_CataModel _rolesCata = rolesCata[index];
                _rolesCata.Save();
            }
        }

        public static bool Delete(OSIS.PEPPAM.Mvc.Models.Roles_CataModel rolesCata)
        {
            if ((rolesCata == null))
            {
                return false;
            }
            bool ret = rolesCata.Delete();
            return ret;
        }

         public virtual bool Delete()
	        {
             var _rolesCataDb = new OSIS.PEPPAM.BOM.Roles_Cata()
	            {
                Role_Numero = this.Role_Numero,

	            };

	            return _rolesCataDb.Delete();

	        }

        public static bool Delete(int role_Numero)
        {
            if ((role_Numero == default(int)))
            {
                return false;
            }
             var _rolesCataDb = OSIS.PEPPAM.Mvc.Models.Roles_CataModel.Load(role_Numero);
            return _rolesCataDb.Delete();
        }

        public string Trace()
	        {
             var _rolesCataDb = new OSIS.PEPPAM.BOM.Roles_Cata()
	            {
                Role_Numero = this.Role_Numero,
                Role_Nivel_Numero = this.Role_Nivel_Numero,
                Role_Nombre = this.Role_Nombre,
                Role_Descripcion = this.Role_Descripcion,
                Registro_Estado = this.Registro_Estado,
                Registro_Fecha = this.Registro_Fecha,
                Registro_Usuario = this.Registro_Usuario
	            };

	            return _rolesCataDb.Trace();

	        }

        public static OSIS.PEPPAM.Mvc.Models.Roles_CataModel LoadByEntityKey(string key)
        {
            if ((key == string.Empty))
            {
                return null;
            }
            OSIS.PEPPAM.Mvc.Models.Roles_CataModel rolesCata;
            System.Type[] types = new System.Type[] {
                    typeof(int)                    };
            object[] defaultValues = new object[] {
                    -1                    };
            object[] v = CodeFluentPersistence.ParseEntityKey(key, types, defaultValues);
                    int var0;            var0 = ((int)(v[0]));
            rolesCata = OSIS.PEPPAM.Mvc.Models.Roles_CataModel.Load( var0);
            return rolesCata;
        }


// Metodos Definidos en el Modelo y las propiedades CollectionKey
        public  OSIS.PEPPAM.Mvc.Models.Roles_CataModel Clone(bool deep)
        {
             OSIS.PEPPAM.Mvc.Models.Roles_CataModel  rolesCata = new  OSIS.PEPPAM.Mvc.Models.Roles_CataModel();
            this.CopyTo(rolesCata , deep);
            return rolesCata ;
        }

        public OSIS.PEPPAM.Mvc.Models.Roles_CataModel Clone()
        {
            OSIS.PEPPAM.Mvc.Models.Roles_CataModel localClone = this.Clone(true);
            return localClone;
        }

        public virtual void CopyFrom(System.Collections.IDictionary dict, bool deep)
        {
            if ((dict == null))
            {
                throw new System.ArgumentNullException("dict");
            }
            if ((dict.Contains("Registro_Estado") == true))
            {
                this.Registro_Estado = ((string)(ConvertUtilities.ChangeType(dict["Registro_Estado"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Registro_Fecha") == true))
            {
                this.Registro_Fecha = ((DateTime)(ConvertUtilities.ChangeType(dict["Registro_Fecha"], typeof(DateTime), System.DateTime.MinValue)));
            }
            if ((dict.Contains("Registro_Usuario") == true))
            {
                this.Registro_Usuario = ((string)(ConvertUtilities.ChangeType(dict["Registro_Usuario"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Role_Descripcion") == true))
            {
                this.Role_Descripcion = ((string)(ConvertUtilities.ChangeType(dict["Role_Descripcion"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Role_Nivel_Numero") == true))
            {
                this.Role_Nivel_Numero = ((int?)(ConvertUtilities.ChangeType(dict["Role_Nivel_Numero"], typeof(int?), -1)));
            }
            if ((dict.Contains("Role_Nombre") == true))
            {
                this.Role_Nombre = ((string)(ConvertUtilities.ChangeType(dict["Role_Nombre"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Role_Numero") == true))
            {
                this.Role_Numero = ((int)(ConvertUtilities.ChangeType(dict["Role_Numero"], typeof(int), -1)));
            }
        }

        public virtual void CopyTo( OSIS.PEPPAM.Mvc.Models.Roles_CataModel  rolesCata, bool deep)
        {
            if ((rolesCata == null))
            {
                throw new System.ArgumentNullException("rolesCata");
            }
            rolesCata.Registro_Estado = this.Registro_Estado;
            rolesCata.Registro_Fecha = this.Registro_Fecha;
            rolesCata.Registro_Usuario = this.Registro_Usuario;
            rolesCata.Role_Descripcion = this.Role_Descripcion;
            rolesCata.Role_Nivel_Numero = this.Role_Nivel_Numero;
            rolesCata.Role_Nombre = this.Role_Nombre;
            rolesCata.Role_Numero = this.Role_Numero;
        }

	public static List<OSIS.PEPPAM.Mvc.Models.Roles_CataModel> PageLoadAll(int pageIndex, int pageSize,
	        CodeFluent.Runtime.PageOptions pageOptions)
	    {
	        var pageLoadAll = OSIS.PEPPAM.BOM.Roles_CataCollection.PageLoadAll(pageIndex, pageSize, pageOptions);

	        if (pageLoadAll == null)
	        {
                return new List<OSIS.PEPPAM.Mvc.Models.Roles_CataModel>();
	        }

	        var result =  pageLoadAll.Select(
                _rolesCata => 
                    new OSIS.PEPPAM.Mvc.Models.Roles_CataModel()
	        {
                Role_Numero = _rolesCata.Role_Numero,
                Role_Nivel_Numero = _rolesCata.Role_Nivel_Numero,
                Role_Nombre = _rolesCata.Role_Nombre,
                Role_Descripcion = _rolesCata.Role_Descripcion,
                Registro_Estado = _rolesCata.Registro_Estado,
                Registro_Fecha = _rolesCata.Registro_Fecha,
                Registro_Usuario = _rolesCata.Registro_Usuario,

	        }).ToList();

	        return result;
	    }

        public static List<OSIS.PEPPAM.Mvc.Models.Roles_CataModel> LoadAll()
        {
            OSIS.PEPPAM.BOM.Roles_CataCollection ret = OSIS.PEPPAM.BOM.Roles_CataCollection.PageLoadAll(int.MinValue, int.MaxValue, null);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Roles_CataModel>();
            }

            var result = ret.Select(
                _rolesCata =>
                    new OSIS.PEPPAM.Mvc.Models.Roles_CataModel()
                    {
                Role_Numero = _rolesCata.Role_Numero,
                Role_Nivel_Numero = _rolesCata.Role_Nivel_Numero,
                Role_Nombre = _rolesCata.Role_Nombre,
                Role_Descripcion = _rolesCata.Role_Descripcion,
                Registro_Estado = _rolesCata.Registro_Estado,
                Registro_Fecha = _rolesCata.Registro_Fecha,
                Registro_Usuario = _rolesCata.Registro_Usuario,

                    }).ToList();

            return result;
        }

        public static List<OSIS.PEPPAM.Mvc.Models.Roles_CataModel> LoadByRolesNivelesCata(OSIS.PEPPAM.Mvc.Models.Roles_Niveles_CataModel roles_Niveles_Cata)
        {

            var _Roles_Niveles_Cata = new OSIS.PEPPAM.BOM.Roles_Niveles_Cata()
            {
                Role_Nivel_Numero = roles_Niveles_Cata.Role_Nivel_Numero,
                Role_Nivel = roles_Niveles_Cata.Role_Nivel,
                Role_Nivel_Nombre = roles_Niveles_Cata.Role_Nivel_Nombre,
                Role_Nivel_Descripcion = roles_Niveles_Cata.Role_Nivel_Descripcion,
                Registro_Estado = roles_Niveles_Cata.Registro_Estado,
                Registro_Fecha = roles_Niveles_Cata.Registro_Fecha,
                Registro_Usuario = roles_Niveles_Cata.Registro_Usuario,
            };


            OSIS.PEPPAM.BOM.Roles_CataCollection ret = OSIS.PEPPAM.BOM.Roles_CataCollection.LoadByRolesNivelesCata(_Roles_Niveles_Cata);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Roles_CataModel>();
            }

            var result = ret.Select(
                _rolesCata =>
                    new OSIS.PEPPAM.Mvc.Models.Roles_CataModel()
                    {
                        Role_Numero = _rolesCata.Role_Numero,
                        Role_Nivel_Numero = _rolesCata.Role_Nivel_Numero,
                        Role_Nombre = _rolesCata.Role_Nombre,
                        Role_Descripcion = _rolesCata.Role_Descripcion,
                        Registro_Estado = _rolesCata.Registro_Estado,
                        Registro_Fecha = _rolesCata.Registro_Fecha,
                        Registro_Usuario = _rolesCata.Registro_Usuario,
                    }).ToList();

            return result;
        }


    [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static List<OSIS.PEPPAM.Mvc.Models.Roles_CataModel> PageLoadByRolesNivelesCata(int pageIndex, int pageSize, CodeFluent.Runtime.PageOptions pageOptions, OSIS.PEPPAM.Mvc.Models.Roles_Niveles_CataModel roles_Niveles_Cata)
        {
            var _roles_Niveles_Cata = new OSIS.PEPPAM.BOM.Roles_Niveles_Cata()
            {
                Role_Nivel_Numero = roles_Niveles_Cata.Role_Nivel_Numero,
                Role_Nivel = roles_Niveles_Cata.Role_Nivel,
                Role_Nivel_Nombre = roles_Niveles_Cata.Role_Nivel_Nombre,
                Role_Nivel_Descripcion = roles_Niveles_Cata.Role_Nivel_Descripcion,
                Registro_Estado = roles_Niveles_Cata.Registro_Estado,
                Registro_Fecha = roles_Niveles_Cata.Registro_Fecha,
                Registro_Usuario = roles_Niveles_Cata.Registro_Usuario,
            };
            OSIS.PEPPAM.BOM.Roles_CataCollection ret = OSIS.PEPPAM.BOM.Roles_CataCollection.PageLoadByRolesNivelesCata(int.MinValue, int.MaxValue, null, _roles_Niveles_Cata);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Roles_CataModel>();
            }

            var result = ret.Select(
                _rolesCata =>
                    new OSIS.PEPPAM.Mvc.Models.Roles_CataModel()
                    {
                        Role_Numero = _rolesCata.Role_Numero,
                        Role_Nivel_Numero = _rolesCata.Role_Nivel_Numero,
                        Role_Nombre = _rolesCata.Role_Nombre,
                        Role_Descripcion = _rolesCata.Role_Descripcion,
                        Registro_Estado = _rolesCata.Registro_Estado,
                        Registro_Fecha = _rolesCata.Registro_Fecha,
                        Registro_Usuario = _rolesCata.Registro_Usuario,
                    }).ToList();

            return result;
        }


        public static List<OSIS.PEPPAM.Mvc.Models.Roles_CataModel> PageLoadByRolesNivelesCata(int pageIndex, int pageSize,int? role_Nivel_Numero)
        {
            OSIS.PEPPAM.BOM.Roles_CataCollection ret = OSIS.PEPPAM.BOM.Roles_CataCollection.PageLoadByRolesNivelesCata(int.MinValue, int.MaxValue,
role_Nivel_Numero);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Roles_CataModel>();
            }

            var result = ret.Select(
                _rolesCata =>
                    new OSIS.PEPPAM.Mvc.Models.Roles_CataModel()
                    {
                        Role_Numero = _rolesCata.Role_Numero,
                        Role_Nivel_Numero = _rolesCata.Role_Nivel_Numero,
                        Role_Nombre = _rolesCata.Role_Nombre,
                        Role_Descripcion = _rolesCata.Role_Descripcion,
                        Registro_Estado = _rolesCata.Registro_Estado,
                        Registro_Fecha = _rolesCata.Registro_Fecha,
                        Registro_Usuario = _rolesCata.Registro_Usuario,
                    }).ToList();

            return result;
        }
	public static List<OSIS.PEPPAM.Mvc.Models.Roles_CataModel> PageLoadAllPaging(int pageIndex, int pageSize, string searchString,
	        CodeFluent.Runtime.PageOptions pageOptions, out int totalCount)
	    {
	        var pageLoadAll = OSIS.PEPPAM.BOM.Roles_CataCollection.PageLoadAllPaging(pageIndex, pageSize, searchString, pageOptions);

	        totalCount = pageLoadAll.TotalRowCount;
	        if (pageLoadAll == null)
	        {
                return new List<OSIS.PEPPAM.Mvc.Models.Roles_CataModel>();
	        }

	        var result =  pageLoadAll.Select(
                _rolesCata => 
                    new OSIS.PEPPAM.Mvc.Models.Roles_CataModel()
	        {
                Role_Numero = _rolesCata.Role_Numero,
                Role_Nivel_Numero = _rolesCata.Role_Nivel_Numero,
                Role_Nombre = _rolesCata.Role_Nombre,
                Role_Descripcion = _rolesCata.Role_Descripcion,
                Registro_Estado = _rolesCata.Registro_Estado,
                Registro_Fecha = _rolesCata.Registro_Fecha,
                Registro_Usuario = _rolesCata.Registro_Usuario,

	        }).ToList();

	        return result;
	    }

        public static List<OSIS.PEPPAM.Mvc.Models.Roles_CataModel> LoadAllPaging(string searchString, out int totalCount)
        {
            OSIS.PEPPAM.BOM.Roles_CataCollection ret = OSIS.PEPPAM.BOM.Roles_CataCollection.PageLoadAllPaging(1, 1000000,searchString, null);

	            totalCount = ret.TotalRowCount;
            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Roles_CataModel>();
            }

            var result = ret.Select(
                _rolesCata =>
                    new OSIS.PEPPAM.Mvc.Models.Roles_CataModel()
                    {
                Role_Numero = _rolesCata.Role_Numero,
                Role_Nivel_Numero = _rolesCata.Role_Nivel_Numero,
                Role_Nombre = _rolesCata.Role_Nombre,
                Role_Descripcion = _rolesCata.Role_Descripcion,
                Registro_Estado = _rolesCata.Registro_Estado,
                Registro_Fecha = _rolesCata.Registro_Fecha,
                Registro_Usuario = _rolesCata.Registro_Usuario,

                    }).ToList();

            return result;
        }


public static List<OSIS.PEPPAM.Mvc.Models.Proc_Permisos_Roles_FuncionalidadModel> FuncionalidadesModulo(int? moduloNumero,int? roleNumero)
        {
            var _funcionalidades_Modulo = OSIS.PEPPAM.BOM.Roles_Cata.FuncionalidadesModulo(
moduloNumero,roleNumero);



            if ((_funcionalidades_Modulo == null))
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Proc_Permisos_Roles_FuncionalidadModel>();
            }

            var result = _funcionalidades_Modulo.Select(
                x =>
                    new OSIS.PEPPAM.Mvc.Models.Proc_Permisos_Roles_FuncionalidadModel()
                    {
                Funcionalidad_Numero = x.Funcionalidad_Numero.Value                    }).ToList();

            return result;
        }
	} 
} 


