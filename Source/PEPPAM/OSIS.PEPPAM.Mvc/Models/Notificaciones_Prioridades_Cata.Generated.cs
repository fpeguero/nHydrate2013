//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 6/19/2014 1:29:30 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System; 
using System.Web; 
using System.Linq; 
using System.Collections.Generic; 
using CodeFluent.Runtime; 
using CodeFluent.Runtime.Utilities; 
using System.ComponentModel.DataAnnotations; 
using FluentValidation; 
using FluentValidation.Attributes; 
using OSIS.PEPPAM.Mvc.Models; 

namespace OSIS.PEPPAM.Mvc.Models 
{ 
	public partial class Notificaciones_Prioridades_CataModel
	{

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Notificaciones_Prioridades_Cata","Prioridad_Numero")]
		public int Prioridad_Numero { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Notificaciones_Prioridades_Cata","Prioridad_Descripcion")]
		public String Prioridad_Descripcion { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Notificaciones_Prioridades_Cata","Prioridad_Color")]
		public String Prioridad_Color { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Notificaciones_Prioridades_Cata","Registro_Estado")]
		public String Registro_Estado { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Notificaciones_Prioridades_Cata","Registro_Fecha")]
		public DateTime Registro_Fecha { get; set; } 

		[OSIS.PEPPAM.Mvc.Infrastructure.Mvc.DisplayName("Notificaciones_Prioridades_Cata","Registro_Usuario")]
		public String Registro_Usuario { get; set; } 

		#region Navigation Properties

        private List<OSIS.PEPPAM.Mvc.Models.Notificaciones_MasterModel> _notificaciones_Master;
		/// <summary>
		/// The back navigation definition for walking [Notificaciones_Prioridades_Cata]->[Notificaciones_Master]
		/// Relationship Links: 
		/// [Notificaciones_Prioridades_Cata.Prioridad_Numero = Notificaciones_Master.Prioridad_Numero] (Required)
		/// </summary>
		[System.Xml.Serialization.XmlIgnoreAttribute()]
        public virtual List<OSIS.PEPPAM.Mvc.Models.Notificaciones_MasterModel> NotificacionesMaster
        {
            get
            {
                if ((this._notificaciones_Master == null))
                {
                    this._notificaciones_Master = OSIS.PEPPAM.Mvc.Models.Notificaciones_MasterModel.LoadByNotificacionesPrioridadesCata(this);
                }
                return this._notificaciones_Master;
            }
        }

		#endregion

        public virtual string EntityKey
        {
            get
            {
                return this.Prioridad_Numero.ToString();
            }
            set
            {
               this.Prioridad_Numero = ((int)(ConvertUtilities.ChangeType(value, typeof(int), -1)));
            }
        }

        public virtual string EntityDisplayName
        {
            get
            {
                return this.Prioridad_Descripcion.ToString();
            }
        }
        

        public Notificaciones_Prioridades_CataModel()
        {
            this.Prioridad_Numero = -1;
            this.Prioridad_Descripcion = string.Empty;
            this.Prioridad_Color = string.Empty;
            this.Registro_Estado = "A";
            this.Registro_Fecha = DateTime.Now;
            this.Registro_Usuario = HttpContext.Current != null ? HttpContext.Current.User.Identity.Name : "";
            Notificaciones_Prioridades_CataPartial();
        }

            partial void Notificaciones_Prioridades_CataPartial();

        public virtual bool Equals(OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel notificacionesPrioridadesCata)
        {
            if ((notificacionesPrioridadesCata == null))
            {
                return false;
            }

            if (
                    (this.Prioridad_Numero == -1)
            )
            {
                return base.Equals(notificacionesPrioridadesCata);
            }

 return ((
                    (this.Prioridad_Numero.Equals(notificacionesPrioridadesCata.Prioridad_Numero))
                        )== true);
        }

        public override bool Equals(object obj)
        {
            OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel notificacionesPrioridadesCata = null;
			 notificacionesPrioridadesCata = obj as OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel;
            return this.Equals( notificacionesPrioridadesCata);
        }

        public override int GetHashCode()
        {
            if ((this.EntityKey == null))
            {
                return base.GetHashCode();
            }
            return this.EntityKey.GetHashCode();
        }
        
        public virtual int CompareTo(OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel notificacionesPrioridadesCata)
        {
            if ((notificacionesPrioridadesCata == null))
            {
                throw new System.ArgumentNullException("notificacionesPrioridadesCata");
            }
            int localCompareTo = this.Prioridad_Numero.CompareTo(notificacionesPrioridadesCata.Prioridad_Numero);
            return localCompareTo;
        }

        public static OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel Load(int prioridad_Numero)
        {
            var _notificacionesPrioridadesCataDb = OSIS.PEPPAM.BOM.Notificaciones_Prioridades_Cata.Load(prioridad_Numero);
	        if (_notificacionesPrioridadesCataDb == null)
	        {
                return null;
	        }

	        var _notificacionesPrioridadesCata = new OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel()
            {
                Prioridad_Numero = _notificacionesPrioridadesCataDb.Prioridad_Numero,
                Prioridad_Descripcion = _notificacionesPrioridadesCataDb.Prioridad_Descripcion,
                Prioridad_Color = _notificacionesPrioridadesCataDb.Prioridad_Color,
                Registro_Estado = _notificacionesPrioridadesCataDb.Registro_Estado,
                Registro_Fecha = _notificacionesPrioridadesCataDb.Registro_Fecha,
                Registro_Usuario = _notificacionesPrioridadesCataDb.Registro_Usuario,

            };

	        return _notificacionesPrioridadesCata;
       }

     public virtual bool Save()
	        {
             var _notificacionesPrioridadesCataDb = new OSIS.PEPPAM.BOM.Notificaciones_Prioridades_Cata()
	            {
                Prioridad_Numero = this.Prioridad_Numero,
                Prioridad_Descripcion = this.Prioridad_Descripcion,
                Prioridad_Color = this.Prioridad_Color,
                Registro_Estado = this.Registro_Estado,
                Registro_Fecha = this.Registro_Fecha,
                Registro_Usuario = this.Registro_Usuario
	            };

	            var result  = _notificacionesPrioridadesCataDb.Save();
             //TODO: Puede ser que solo sean los Identity y no todo los primary keys
             this.Prioridad_Numero = _notificacionesPrioridadesCataDb.Prioridad_Numero;

             return result;

	        }

        public static bool Save(OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel notificacionesPrioridadesCata)
        {
            if ((notificacionesPrioridadesCata == null))
            {
                return false;
            }
            bool ret = notificacionesPrioridadesCata.Save();
            return ret;
        }

        public static bool Insert(OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel notificacionesPrioridadesCata)
        {
            bool ret = OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel.Save(notificacionesPrioridadesCata);
            return ret;
        }

        public static void SaveAll(List<OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel> notificacionesPrioridadesCata)
        {
            int index;
            for (index = (notificacionesPrioridadesCata.Count - 1); (index >= 0); index = (index - 1))
            {
                OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel _notificacionesPrioridadesCata = notificacionesPrioridadesCata[index];
                _notificacionesPrioridadesCata.Save();
            }
        }

        public static bool Delete(OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel notificacionesPrioridadesCata)
        {
            if ((notificacionesPrioridadesCata == null))
            {
                return false;
            }
            bool ret = notificacionesPrioridadesCata.Delete();
            return ret;
        }

         public virtual bool Delete()
	        {
             var _notificacionesPrioridadesCataDb = new OSIS.PEPPAM.BOM.Notificaciones_Prioridades_Cata()
	            {
                Prioridad_Numero = this.Prioridad_Numero,

	            };

	            return _notificacionesPrioridadesCataDb.Delete();

	        }

        public static bool Delete(int prioridad_Numero)
        {
            if ((prioridad_Numero == default(int)))
            {
                return false;
            }
             var _notificacionesPrioridadesCataDb = OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel.Load(prioridad_Numero);
            return _notificacionesPrioridadesCataDb.Delete();
        }

        public string Trace()
	        {
             var _notificacionesPrioridadesCataDb = new OSIS.PEPPAM.BOM.Notificaciones_Prioridades_Cata()
	            {
                Prioridad_Numero = this.Prioridad_Numero,
                Prioridad_Descripcion = this.Prioridad_Descripcion,
                Prioridad_Color = this.Prioridad_Color,
                Registro_Estado = this.Registro_Estado,
                Registro_Fecha = this.Registro_Fecha,
                Registro_Usuario = this.Registro_Usuario
	            };

	            return _notificacionesPrioridadesCataDb.Trace();

	        }

        public static OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel LoadByEntityKey(string key)
        {
            if ((key == string.Empty))
            {
                return null;
            }
            OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel notificacionesPrioridadesCata;
            System.Type[] types = new System.Type[] {
                    typeof(int)                    };
            object[] defaultValues = new object[] {
                    -1                    };
            object[] v = CodeFluentPersistence.ParseEntityKey(key, types, defaultValues);
                    int var0;            var0 = ((int)(v[0]));
            notificacionesPrioridadesCata = OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel.Load( var0);
            return notificacionesPrioridadesCata;
        }


// Metodos Definidos en el Modelo y las propiedades CollectionKey
        public  OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel Clone(bool deep)
        {
             OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel  notificacionesPrioridadesCata = new  OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel();
            this.CopyTo(notificacionesPrioridadesCata , deep);
            return notificacionesPrioridadesCata ;
        }

        public OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel Clone()
        {
            OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel localClone = this.Clone(true);
            return localClone;
        }

        public virtual void CopyFrom(System.Collections.IDictionary dict, bool deep)
        {
            if ((dict == null))
            {
                throw new System.ArgumentNullException("dict");
            }
            if ((dict.Contains("Prioridad_Color") == true))
            {
                this.Prioridad_Color = ((string)(ConvertUtilities.ChangeType(dict["Prioridad_Color"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Prioridad_Descripcion") == true))
            {
                this.Prioridad_Descripcion = ((string)(ConvertUtilities.ChangeType(dict["Prioridad_Descripcion"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Prioridad_Numero") == true))
            {
                this.Prioridad_Numero = ((int)(ConvertUtilities.ChangeType(dict["Prioridad_Numero"], typeof(int), -1)));
            }
            if ((dict.Contains("Registro_Estado") == true))
            {
                this.Registro_Estado = ((string)(ConvertUtilities.ChangeType(dict["Registro_Estado"], typeof(string), string.Empty)));
            }
            if ((dict.Contains("Registro_Fecha") == true))
            {
                this.Registro_Fecha = ((DateTime)(ConvertUtilities.ChangeType(dict["Registro_Fecha"], typeof(DateTime), System.DateTime.MinValue)));
            }
            if ((dict.Contains("Registro_Usuario") == true))
            {
                this.Registro_Usuario = ((string)(ConvertUtilities.ChangeType(dict["Registro_Usuario"], typeof(string), string.Empty)));
            }
        }

        public virtual void CopyTo( OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel  notificacionesPrioridadesCata, bool deep)
        {
            if ((notificacionesPrioridadesCata == null))
            {
                throw new System.ArgumentNullException("notificacionesPrioridadesCata");
            }
            notificacionesPrioridadesCata.Prioridad_Color = this.Prioridad_Color;
            notificacionesPrioridadesCata.Prioridad_Descripcion = this.Prioridad_Descripcion;
            notificacionesPrioridadesCata.Prioridad_Numero = this.Prioridad_Numero;
            notificacionesPrioridadesCata.Registro_Estado = this.Registro_Estado;
            notificacionesPrioridadesCata.Registro_Fecha = this.Registro_Fecha;
            notificacionesPrioridadesCata.Registro_Usuario = this.Registro_Usuario;
        }

	public static List<OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel> PageLoadAll(int pageIndex, int pageSize,
	        CodeFluent.Runtime.PageOptions pageOptions)
	    {
	        var pageLoadAll = OSIS.PEPPAM.BOM.Notificaciones_Prioridades_CataCollection.PageLoadAll(pageIndex, pageSize, pageOptions);

	        if (pageLoadAll == null)
	        {
                return new List<OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel>();
	        }

	        var result =  pageLoadAll.Select(
                _notificacionesPrioridadesCata => 
                    new OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel()
	        {
                Prioridad_Numero = _notificacionesPrioridadesCata.Prioridad_Numero,
                Prioridad_Descripcion = _notificacionesPrioridadesCata.Prioridad_Descripcion,
                Prioridad_Color = _notificacionesPrioridadesCata.Prioridad_Color,
                Registro_Estado = _notificacionesPrioridadesCata.Registro_Estado,
                Registro_Fecha = _notificacionesPrioridadesCata.Registro_Fecha,
                Registro_Usuario = _notificacionesPrioridadesCata.Registro_Usuario,

	        }).ToList();

	        return result;
	    }

        public static List<OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel> LoadAll()
        {
            OSIS.PEPPAM.BOM.Notificaciones_Prioridades_CataCollection ret = OSIS.PEPPAM.BOM.Notificaciones_Prioridades_CataCollection.PageLoadAll(int.MinValue, int.MaxValue, null);

            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel>();
            }

            var result = ret.Select(
                _notificacionesPrioridadesCata =>
                    new OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel()
                    {
                Prioridad_Numero = _notificacionesPrioridadesCata.Prioridad_Numero,
                Prioridad_Descripcion = _notificacionesPrioridadesCata.Prioridad_Descripcion,
                Prioridad_Color = _notificacionesPrioridadesCata.Prioridad_Color,
                Registro_Estado = _notificacionesPrioridadesCata.Registro_Estado,
                Registro_Fecha = _notificacionesPrioridadesCata.Registro_Fecha,
                Registro_Usuario = _notificacionesPrioridadesCata.Registro_Usuario,

                    }).ToList();

            return result;
        }

	public static List<OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel> PageLoadAllPaging(int pageIndex, int pageSize, string searchString,
	        CodeFluent.Runtime.PageOptions pageOptions, out int totalCount)
	    {
	        var pageLoadAll = OSIS.PEPPAM.BOM.Notificaciones_Prioridades_CataCollection.PageLoadAllPaging(pageIndex, pageSize, searchString, pageOptions);

	        totalCount = pageLoadAll.TotalRowCount;
	        if (pageLoadAll == null)
	        {
                return new List<OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel>();
	        }

	        var result =  pageLoadAll.Select(
                _notificacionesPrioridadesCata => 
                    new OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel()
	        {
                Prioridad_Numero = _notificacionesPrioridadesCata.Prioridad_Numero,
                Prioridad_Descripcion = _notificacionesPrioridadesCata.Prioridad_Descripcion,
                Prioridad_Color = _notificacionesPrioridadesCata.Prioridad_Color,
                Registro_Estado = _notificacionesPrioridadesCata.Registro_Estado,
                Registro_Fecha = _notificacionesPrioridadesCata.Registro_Fecha,
                Registro_Usuario = _notificacionesPrioridadesCata.Registro_Usuario,

	        }).ToList();

	        return result;
	    }

        public static List<OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel> LoadAllPaging(string searchString, out int totalCount)
        {
            OSIS.PEPPAM.BOM.Notificaciones_Prioridades_CataCollection ret = OSIS.PEPPAM.BOM.Notificaciones_Prioridades_CataCollection.PageLoadAllPaging(1, 1000000,searchString, null);

	            totalCount = ret.TotalRowCount;
            if (ret == null)
            {
                return new List<OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel>();
            }

            var result = ret.Select(
                _notificacionesPrioridadesCata =>
                    new OSIS.PEPPAM.Mvc.Models.Notificaciones_Prioridades_CataModel()
                    {
                Prioridad_Numero = _notificacionesPrioridadesCata.Prioridad_Numero,
                Prioridad_Descripcion = _notificacionesPrioridadesCata.Prioridad_Descripcion,
                Prioridad_Color = _notificacionesPrioridadesCata.Prioridad_Color,
                Registro_Estado = _notificacionesPrioridadesCata.Registro_Estado,
                Registro_Fecha = _notificacionesPrioridadesCata.Registro_Fecha,
                Registro_Usuario = _notificacionesPrioridadesCata.Registro_Usuario,

                    }).ToList();

            return result;
        }

	} 
} 


