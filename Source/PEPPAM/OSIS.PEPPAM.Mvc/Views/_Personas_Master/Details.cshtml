@*
//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : f.peguero
//    Dominio : SSRL
//    Pc      : DTI_GTE_GIS
//    Fecha   : 02/05/2014 06:23:22 p.m.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

*@
@using Mvc.Core.UI
@using OSIS.PEPPAM.Mvc.UI
@model OSIS.PEPPAM.Mvc.Models.Personas_MasterModel 
@{ 
    IFuncionality uiObject = new Funcionality().GetFuncionality("Personas_Master");

    ViewBag.Title = Resources.Shared.AppName + " - " + uiObject.Name + " : " + Model.EntityDisplayName;
} 
<h2>@uiObject.Name</h2>
<h5>@uiObject.Description</h5>
<div class="row"> 
    <div class="col-xs-12 form-commands-container"> 
        <button class="btn btn-default btn-sm back-button" title="@uiObject.GetAction("Back").Help"><span class="glyphicon glyphicon-arrow-left"></span>@uiObject.GetAction("Back").Description</button> 
    </div> 
</div> 
 
<fieldset class="form-horizontal"> 

    <div class="row"> 

        <div class="form-field-group"> 
                    <label class="control-label col-sm-2">@uiObject.GetField("Persona_Nombres").Description</label> 
            <div class="editor col-sm-4"> 
                <p class="form-control-static">@Model.Persona_Nombres</p>	 
            </div> 
        </div> 

        <div class="form-field-group"> 
                    <label class="control-label col-sm-2">@uiObject.GetField("Persona_Apellidos").Description</label> 
            <div class="editor col-sm-4"> 
                <p class="form-control-static">@Model.Persona_Apellidos</p>	 
            </div> 
        </div> 

    </div> 
 
    <div class="row"> 

        <div class="form-field-group"> 
                    <label class="control-label col-sm-2">@uiObject.GetField("Persona_Conyuge_Apellido").Description</label> 
            <div class="editor col-sm-4"> 
                <p class="form-control-static">@Model.Persona_Conyuge_Apellido</p>	 
            </div> 
        </div> 

        <div class="form-field-group"> 
                    <label class="control-label col-sm-2">@uiObject.GetField("Persona_Sexo").Description</label> 
            <div class="editor col-sm-4"> 
                <p class="form-control-static">@Model.Persona_Sexo</p>	 
            </div> 
        </div> 

    </div> 
 
    <div class="row"> 

        <div class="form-field-group"> 
                    <label class="control-label col-sm-2">@uiObject.GetField("Persona_Correo").Description</label> 
            <div class="editor col-sm-4"> 
                <p class="form-control-static">@Model.Persona_Correo</p>	 
            </div> 
        </div> 

        <div class="form-field-group"> 
                    <label class="control-label col-sm-2">@uiObject.GetField("Persona_Clave").Description</label> 
            <div class="editor col-sm-4"> 
                <p class="form-control-static">@Model.Persona_Clave</p>	 
            </div> 
        </div> 

    </div> 
 
    <div class="row"> 

        <div class="form-field-group"> 
                    <label class="control-label col-sm-2">@uiObject.GetField("Persona_Verificacion_Numero").Description</label> 
            <div class="editor col-sm-4"> 
                <p class="form-control-static">@Model.Persona_Verificacion_Numero</p>	 
            </div> 
        </div> 

        <div class="form-field-group"> 
                    <label class="control-label col-sm-2">@uiObject.GetField("Registro_Estado").Description</label> 
            <div class="editor col-sm-4"> 
                <p class="form-control-static">@Model.Registro_Estado</p>	 
            </div> 
        </div> 

    </div> 
 
    <div class="row"> 

        <div class="form-field-group"> 
                    <label class="control-label col-sm-2">@uiObject.GetField("Congregacion_Secuencia").Description</label> 
            <div class=" col-sm-4"> 
                <p class="form-control-static"> 
				@if (Model.Congregacion != null) 
				{ 
					@Model.Congregacion.EntityDisplayName 
				} 
                </p> 
            </div> 
        </div> 

 
</fieldset> 

 
<hr /> 
<!-- Tab strip begin --> 
<div id="Personas_MasterTab-tabs"> 
    <ul class="nav nav-tabs"> 
        <li> 
            <a href="#zonasTab" data-toggle="tab">@Funcionality.GetDescription("Zonas_Encargados_Trans","Zonas_Encargados_Trans")</a> 
        </li> 

        <li> 
            <a href="#rutasAuxiliarTab" data-toggle="tab">@Funcionality.GetDescription("Rutas_Master","Rutas_Master")</a> 
        </li> 

        <li> 
            <a href="#rutasEncargadoTab" data-toggle="tab">@Funcionality.GetDescription("Rutas_Master","Rutas_Master")</a> 
        </li> 

        <li> 
            <a href="#turnosTab" data-toggle="tab">@Funcionality.GetDescription("Personas_Turnos_Trans","Personas_Turnos_Trans")</a> 
        </li> 

        <li> 
            <a href="#personas_TiposTab" data-toggle="tab">@Funcionality.GetDescription("Personas_Tipos_Trans","Personas_Tipos_Trans")</a> 
        </li> 

        <li> 
            <a href="#notificacionesTab" data-toggle="tab">@Funcionality.GetDescription("Personas_Notificaciones_Trans","Personas_Notificaciones_Trans")</a> 
        </li> 

        <li> 
            <a href="#contacto_InformacionesTab" data-toggle="tab">@Funcionality.GetDescription("Persona_Contactos_Trans","Persona_Contactos_Trans")</a> 
        </li> 

    </ul> 
</div> 
 
<div id="Personas_MasterTab-contents" class="tab-content"> 
 
    <!-- Zonas Tab begin --> 
    <div id="zonasTab" class="tab-pane fade"> 
        <!-- Grid begin --> 
        <div class="secondary-grid-commands"> 
            <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help"> 
                <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description 
            </button> 
        </div>           
        <table id="ZonasGrid" width="100%" class="table table-striped table-bordered"></table> 
        <!-- Grid end --> 

         
    </div> 
    <!-- Zonas Tab end --> 
 
    <!-- RutasAuxiliar Tab begin --> 
    <div id="rutasAuxiliarTab" class="tab-pane fade"> 
        <!-- Grid begin --> 
        <div class="secondary-grid-commands"> 
            <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help"> 
                <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description 
            </button> 
        </div>           
        <table id="RutasAuxiliarGrid" width="100%" class="table table-striped table-bordered"></table> 
        <!-- Grid end --> 

         
    </div> 
    <!-- RutasAuxiliar Tab end --> 
 
    <!-- RutasEncargado Tab begin --> 
    <div id="rutasEncargadoTab" class="tab-pane fade"> 
        <!-- Grid begin --> 
        <div class="secondary-grid-commands"> 
            <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help"> 
                <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description 
            </button> 
        </div>           
        <table id="RutasEncargadoGrid" width="100%" class="table table-striped table-bordered"></table> 
        <!-- Grid end --> 

         
    </div> 
    <!-- RutasEncargado Tab end --> 
 
    <!-- Turnos Tab begin --> 
    <div id="turnosTab" class="tab-pane fade"> 
        <!-- Grid begin --> 
        <div class="secondary-grid-commands"> 
            <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help"> 
                <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description 
            </button> 
        </div>           
        <table id="TurnosGrid" width="100%" class="table table-striped table-bordered"></table> 
        <!-- Grid end --> 

         
    </div> 
    <!-- Turnos Tab end --> 
 
    <!-- Personas_Tipos Tab begin --> 
    <div id="personas_TiposTab" class="tab-pane fade"> 
        <!-- Grid begin --> 
        <div class="secondary-grid-commands"> 
            <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help"> 
                <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description 
            </button> 
        </div>           
        <table id="Personas_TiposGrid" width="100%" class="table table-striped table-bordered"></table> 
        <!-- Grid end --> 

         
    </div> 
    <!-- Personas_Tipos Tab end --> 
 
    <!-- Notificaciones Tab begin --> 
    <div id="notificacionesTab" class="tab-pane fade"> 
        <!-- Grid begin --> 
        <div class="secondary-grid-commands"> 
            <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help"> 
                <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description 
            </button> 
        </div>           
        <table id="NotificacionesGrid" width="100%" class="table table-striped table-bordered"></table> 
        <!-- Grid end --> 

         
    </div> 
    <!-- Notificaciones Tab end --> 
 
    <!-- Contacto_Informaciones Tab begin --> 
    <div id="contacto_InformacionesTab" class="tab-pane fade"> 
        <!-- Grid begin --> 
        <div class="secondary-grid-commands"> 
            <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help"> 
                <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description 
            </button> 
        </div>           
        <table id="Contacto_InformacionesGrid" width="100%" class="table table-striped table-bordered"></table> 
        <!-- Grid end --> 

         
    </div> 
    <!-- Contacto_Informaciones Tab end --> 
</div> 
<!-- Tab strip end --> 

  

@section Scripts { 
	@Scripts.Render("~/bundles/jqueryval") 
    <script type="text/javascript"> 
        $(function () { 
            formUtils.setupFormActionButtons({ 
                formId: "Personas_MasterForm", 
                indexPageUrl: "@Url.Action("Index")", 
                buttonsContainerSelector: ".form-commands-container" 
            }); 
             
            $('#Personas_MasterTab-tabs a[data-toggle="tab"]').on('shown.bs.tab', function (e, s) { 
                var tabShown = e.target.attributes["href"].value; 

                if (tabShown == "#zonasTab") { 
                    setupZonasGrid(); 
                } 
                if (tabShown == "#rutasAuxiliarTab") { 
                    setupRutasAuxiliarGrid(); 
                } 
                if (tabShown == "#rutasEncargadoTab") { 
                    setupRutasEncargadoGrid(); 
                } 
                if (tabShown == "#turnosTab") { 
                    setupTurnosGrid(); 
                } 
                if (tabShown == "#personas_TiposTab") { 
                    setupPersonas_TiposGrid(); 
                } 
                if (tabShown == "#notificacionesTab") { 
                    setupNotificacionesGrid(); 
                } 
                if (tabShown == "#contacto_InformacionesTab") { 
                    setupContacto_InformacionesGrid(); 
                } 
            });             
            $("#Personas_MasterTab-tabs a[data-toggle='tab']:first").tab("show"); 
        }); 

        function setupZonasGrid() { 
            var gridId = "ZonasGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")) 
				return; 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#zonasTab", 
                reportUrl: "@Url.Action("ReportZonas", "Personas_Master", new {masterId = Model.Persona_Secuencia})" 
            }); 
 
            $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Zonas_Encargados_Trans"))
                ], 
                "aaSorting": [[1, "asc"]], 
                 
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
				 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadZonas")", 
                "sServerMethod": "POST", 
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "masterId", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        function setupRutasAuxiliarGrid() { 
            var gridId = "RutasAuxiliarGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")) 
				return; 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#rutasAuxiliarTab", 
                reportUrl: "@Url.Action("ReportRutasAuxiliar", "Personas_Master", new {masterId = Model.Persona_Secuencia})" 
            }); 
 
            $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Rutas_Master"))
                ], 
                "aaSorting": [[1, "asc"]], 
                 
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
				 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadRutasAuxiliar")", 
                "sServerMethod": "POST", 
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "masterId", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        function setupRutasEncargadoGrid() { 
            var gridId = "RutasEncargadoGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")) 
				return; 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#rutasEncargadoTab", 
                reportUrl: "@Url.Action("ReportRutasEncargado", "Personas_Master", new {masterId = Model.Persona_Secuencia})" 
            }); 
 
            $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Rutas_Master"))
                ], 
                "aaSorting": [[1, "asc"]], 
                 
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
				 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadRutasEncargado")", 
                "sServerMethod": "POST", 
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "masterId", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        function setupTurnosGrid() { 
            var gridId = "TurnosGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")) 
				return; 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#turnosTab", 
                reportUrl: "@Url.Action("ReportTurnos", "Personas_Master", new {masterId = Model.Persona_Secuencia})" 
            }); 
 
            $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Personas_Turnos_Trans"))
                ], 
                "aaSorting": [[1, "asc"]], 
                 
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
				 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadTurnos")", 
                "sServerMethod": "POST", 
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "masterId", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        function setupPersonas_TiposGrid() { 
            var gridId = "Personas_TiposGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")) 
				return; 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#personas_TiposTab", 
                reportUrl: "@Url.Action("ReportPersonas_Tipos", "Personas_Master", new {masterId = Model.Persona_Secuencia})" 
            }); 
 
            $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Personas_Tipos_Trans"))
                ], 
                "aaSorting": [[1, "asc"]], 
                 
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
				 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadPersonas_Tipos")", 
                "sServerMethod": "POST", 
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "masterId", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        function setupNotificacionesGrid() { 
            var gridId = "NotificacionesGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")) 
				return; 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#notificacionesTab", 
                reportUrl: "@Url.Action("ReportNotificaciones", "Personas_Master", new {masterId = Model.Persona_Secuencia})" 
            }); 
 
            $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Personas_Notificaciones_Trans"))
                ], 
                "aaSorting": [[1, "asc"]], 
                 
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
				 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadNotificaciones")", 
                "sServerMethod": "POST", 
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "masterId", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        function setupContacto_InformacionesGrid() { 
            var gridId = "Contacto_InformacionesGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")) 
				return; 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#contacto_InformacionesTab", 
                reportUrl: "@Url.Action("ReportContacto_Informaciones", "Personas_Master", new {masterId = Model.Persona_Secuencia})" 
            }); 
 
            $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Persona_Contactos_Trans"))
                ], 
                "aaSorting": [[1, "asc"]], 
                 
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
				 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadContacto_Informaciones")", 
                "sServerMethod": "POST", 
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "masterId", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

</script> 
} 


