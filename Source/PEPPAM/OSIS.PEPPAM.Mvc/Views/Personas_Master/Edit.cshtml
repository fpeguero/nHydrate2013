@*
//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 6/14/2014 9:46:02 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

*@
@using Mvc.Core.UI
@using OSIS.PEPPAM.Mvc.UI
@model OSIS.PEPPAM.Mvc.Models.Personas_MasterModel 
@{ 
    IFuncionality uiObject = new Funcionality().GetFuncionality("Personas_Master");

    ViewBag.Title = Resources.Shared.AppName + " - " + uiObject.Name + " : " + Model.EntityDisplayName;
	string twoLettersCulture = new System.Globalization.CultureInfo(Culture).TwoLetterISOLanguageName;	 
    string decimalSeparator = new System.Globalization.CultureInfo(Culture).NumberFormat.NumberDecimalSeparator; 
    string groupSeparator = new System.Globalization.CultureInfo(Culture).NumberFormat.NumberGroupSeparator;  
} 
<div class="entity-form-container"> 
    @using (Html.BeginForm("Edit", "Personas_Master", FormMethod.Post, new { id = "Personas_MasterForm", role="form", @class="form-horizontal form" }))  
    { 
<h2>@uiObject.Name</h2>
<h5>@uiObject.Description</h5>
<div class="form-commands-container"> 
    <button class="btn btn-default btn-sm back-button" title="@uiObject.GetAction("Back").Help"><span class="glyphicon glyphicon-arrow-left"></span>@uiObject.GetAction("Back").Description</button> 
    <button class="btn  btn-default btn-sm save-button" title="@uiObject.GetAction("Save")"><span class="glyphicon glyphicon-ok"></span>@uiObject.GetAction("Save").Description</button> 
</div> 
 <hr /> 
      @Html.ValidationSummary(true) 
      @Html.Partial("_CreateOrEdit", Model) 
    } 
</div> 

<div class="form">
    <div id="Personas_MasterTab-tabs">
        <ul class="nav nav-tabs">
            <li>
                <a href="#contacto_InformacionesTab" data-toggle="tab">@Funcionality.GetDescription("Persona_Contactos_Usuario", "Persona_Contactos_Usuario", true)</a>
            </li>
            

            <li>
                <a href="#personas_DiponibilidadTab" data-toggle="tab">@Funcionality.GetDescription("Personas_Diponibilidad", "Personas_Diponibilidad", true)</a>
            </li>

            <li>
                <a href="#notificaciones_Personas_TransTab" data-toggle="tab">@Funcionality.GetDescription("Notificaciones_Personas_Trans", "Notificaciones_Personas_Trans", true)</a>
            </li>

            <li>
                <a href="#persona_Roles_TransTab" data-toggle="tab">@Funcionality.GetDescription("Persona_Roles_Trans", "Persona_Roles_Trans", true)</a>
            </li>

            
            <li>
                <a href="#zonasTab" data-toggle="tab">@Funcionality.GetDescription("Zonas_Encargados_Usuario", "Zonas_Encargados_Usuario", true)</a>
            </li>

            <li>
                <a href="#rutasAuxiliarTab" data-toggle="tab">@Funcionality.GetDescription("Rutas_Master_Auxiliar", "Rutas_Master_Auxiliar", true)</a>
            </li>

            <li>
                <a href="#rutasEncargadoTab" data-toggle="tab">@Funcionality.GetDescription("Rutas_Master_Encargado", "Rutas_Master_Encargado", true)</a>
            </li>

            <li>
                <a href="#turnosTab" data-toggle="tab">@Funcionality.GetDescription("Personas_Turnos_Usuario", "Personas_Turnos_Usuario", true)</a>
            </li>

            <li>
                <a href="#notificacionesTab" data-toggle="tab">@Funcionality.GetDescription("Personas_Notificaciones_Usuario", "Personas_Notificaciones_Usuario", true)</a>
            </li>

           

        </ul>
    </div>

    <div id="Personas_MasterTab-contents" class="tab-content">


       <!-- Personas_Diponibilidad Tab begin -->
        <div id="personas_DiponibilidadTab" class="tab-pane fade">

            <!-- Grid begin -->
            <div class="secondary-grid-commands">
                <button class="btn btn-default btn-xs popup-create-button" title="@uiObject.GetAction("Create").Help" data-grid="Personas_DiponibilidadGrid" data-masterid="@Model.Persona_Secuencia" data-detailname="AddPersonas_Diponibilidad">
                    <span class="glyphicon glyphicon-plus"></span>@uiObject.GetAction("Create").Description
                </button>
                <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help">
                    <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description
                </button>
            </div>
            <table id="Personas_DiponibilidadGrid" width="100%" class="table table-striped table-bordered"></table>
            <!-- Grid end -->

        </div>
        <!-- Personas_Diponibilidad Tab end -->
        <!-- Notificaciones_Personas_Trans Tab begin -->
        <div id="notificaciones_Personas_TransTab" class="tab-pane fade">

            <!-- Grid begin -->
            @*<div class="secondary-grid-commands">
                <button class="btn btn-default btn-xs popup-create-button" title="@uiObject.GetAction("Create").Help" data-grid="Notificaciones_Personas_TransGrid" data-masterid="@Model.Persona_Secuencia" data-detailname="AddNotificaciones_Personas_Trans">
                    <span class="glyphicon glyphicon-plus"></span>@uiObject.GetAction("Create").Description
                </button>
                <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help">
                    <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description
                </button>
            </div>*@
            <table id="Notificaciones_Personas_TransGrid" width="100%" class="table table-striped table-bordered"></table>
            <!-- Grid end -->

        </div>
        <!-- Notificaciones_Personas_Trans Tab end -->
        <!-- Persona_Roles_Trans Tab begin -->
        <div id="persona_Roles_TransTab" class="tab-pane fade">

            <!-- Grid begin -->
            <div class="secondary-grid-commands">
                <button class="btn btn-default btn-xs popup-create-button" title="@uiObject.GetAction("Create").Help" data-grid="Persona_Roles_TransGrid" data-masterid="@Model.Persona_Secuencia" data-detailname="AddPersona_Roles_Trans">
                    <span class="glyphicon glyphicon-plus"></span>@uiObject.GetAction("Create").Description
                </button>
                <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help">
                    <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description
                </button>
            </div>
            <table id="Persona_Roles_TransGrid" width="100%" class="table table-striped table-bordered"></table>
            <!-- Grid end -->

        </div>
        <!-- Persona_Roles_Trans Tab end -->
       
        <!-- Zonas Tab begin -->
        <div id="zonasTab" class="tab-pane fade">

            <!-- Grid begin -->
            @*<div class="secondary-grid-commands">
                <button class="btn btn-default btn-xs popup-create-button" title="@uiObject.GetAction("Create").Help" data-grid="ZonasGrid" data-masterid="@Model.Persona_Secuencia" data-detailname="AddZonas">
                    <span class="glyphicon glyphicon-plus"></span>@uiObject.GetAction("Create").Description
                </button>
                <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help">
                    <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description
                </button>
            </div>*@
            <table id="ZonasGrid" width="100%" class="table table-striped table-bordered"></table>
            <!-- Grid end -->

        </div>
        <!-- Zonas Tab end -->
        <!-- RutasAuxiliar Tab begin -->
        <div id="rutasAuxiliarTab" class="tab-pane fade">

            <!-- Grid begin -->
            @*<div class="secondary-grid-commands">
                <button class="btn btn-default btn-xs popup-create-button" title="@uiObject.GetAction("Create").Help" data-grid="RutasAuxiliarGrid" data-masterid="@Model.Persona_Secuencia" data-detailname="AddRutasAuxiliar">
                    <span class="glyphicon glyphicon-plus"></span>@uiObject.GetAction("Create").Description
                </button>
                <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help">
                    <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description
                </button>
            </div>*@
            <table id="RutasAuxiliarGrid" width="100%" class="table table-striped table-bordered"></table>
            <!-- Grid end -->

        </div>
        <!-- RutasAuxiliar Tab end -->
        <!-- RutasEncargado Tab begin -->
        <div id="rutasEncargadoTab" class="tab-pane fade">

            <!-- Grid begin -->
            @*<div class="secondary-grid-commands">
                <button class="btn btn-default btn-xs popup-create-button" title="@uiObject.GetAction("Create").Help" data-grid="RutasEncargadoGrid" data-masterid="@Model.Persona_Secuencia" data-detailname="AddRutasEncargado">
                    <span class="glyphicon glyphicon-plus"></span>@uiObject.GetAction("Create").Description
                </button>
                <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help">
                    <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description
                </button>
            </div>*@
            <table id="RutasEncargadoGrid" width="100%" class="table table-striped table-bordered"></table>
            <!-- Grid end -->

        </div>
        <!-- RutasEncargado Tab end -->
        <!-- Turnos Tab begin -->
        <div id="turnosTab" class="tab-pane fade">

            <!-- Grid begin -->
            <div class="secondary-grid-commands">
                <button class="btn btn-default btn-xs popup-create-button" title="@uiObject.GetAction("Create").Help" data-grid="TurnosGrid" data-masterid="@Model.Persona_Secuencia" data-detailname="AddTurnos">
                    <span class="glyphicon glyphicon-plus"></span>@uiObject.GetAction("Create").Description
                </button>
                <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help">
                    <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description
                </button>
            </div>
            <table id="TurnosGrid" width="100%" class="table table-striped table-bordered"></table>
            <!-- Grid end -->

        </div>
        <!-- Turnos Tab end -->
        <!-- Notificaciones Tab begin -->
        <div id="notificacionesTab" class="tab-pane fade">

            <!-- Grid begin -->
            <div class="secondary-grid-commands">
                <button class="btn btn-default btn-xs popup-create-button" title="@uiObject.GetAction("Create").Help" data-grid="NotificacionesGrid" data-masterid="@Model.Persona_Secuencia" data-detailname="AddNotificaciones">
                    <span class="glyphicon glyphicon-plus"></span>@uiObject.GetAction("Create").Description
                </button>
                <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help">
                    <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description
                </button>
            </div>
            <table id="NotificacionesGrid" width="100%" class="table table-striped table-bordered"></table>
            <!-- Grid end -->

        </div>
        <!-- Notificaciones Tab end -->
        <!-- Contacto_Informaciones Tab begin -->
        <div id="contacto_InformacionesTab" class="tab-pane fade">

            <!-- Grid begin -->
            @*<div class="secondary-grid-commands">
                <button class="btn btn-default btn-xs popup-create-button" title="@uiObject.GetAction("Create").Help" data-grid="Contacto_InformacionesGrid" data-masterid="@Model.Persona_Secuencia" data-detailname="AddContacto_Informaciones">
                    <span class="glyphicon glyphicon-plus"></span>@uiObject.GetAction("Create").Description
                </button>
                <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help">
                    <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description
                </button>
            </div>*@
            <table id="Contacto_InformacionesGrid" width="100%" class="table table-striped table-bordered"></table>
            <!-- Grid end -->

        </div>
        <!-- Contacto_Informaciones Tab end -->

    </div>
</div> 
 

  

@section Scripts { 
	@Scripts.Render("~/bundles/jqueryval") 
    <script type="text/javascript"> 
        $(function () { 
            formUtils.setupFormControls("Personas_MasterForm"); 
            formUtils.setupFormActionButtons({ 
                formId: "Personas_MasterForm", 
                indexPageUrl: "@Url.Action("Index")", 
                buttonsContainerSelector: ".form-commands-container" 
            }); 
             
            $('#Personas_MasterTab-tabs a[data-toggle="tab"]').on('shown.bs.tab', function (e, s) { 
                var tabShown = e.target.attributes["href"].value; 
                if (tabShown == "#horario_Turno_Informe_TransTab") { 
                    setupHorario_Turno_Informe_TransGrid(); 
                } 
                if (tabShown == "#personas_DiponibilidadTab") { 
                    setupPersonas_DiponibilidadGrid(); 
                } 
                if (tabShown == "#notificaciones_Personas_TransTab") { 
                    setupNotificaciones_Personas_TransGrid(); 
                } 
                if (tabShown == "#persona_Roles_TransTab") { 
                    setupPersona_Roles_TransGrid(); 
                } 
                if (tabShown == "#personas_Tipos_TransTab") { 
                    setupPersonas_Tipos_TransGrid(); 
                } 
                if (tabShown == "#zonasTab") { 
                    setupZonasGrid(); 
                } 
                if (tabShown == "#rutasAuxiliarTab") { 
                    setupRutasAuxiliarGrid(); 
                } 
                if (tabShown == "#rutasEncargadoTab") { 
                    setupRutasEncargadoGrid(); 
                } 
                if (tabShown == "#turnosTab") { 
                    setupTurnosGrid(); 
                } 
                if (tabShown == "#notificacionesTab") { 
                    setupNotificacionesGrid(); 
                } 
                if (tabShown == "#contacto_InformacionesTab") { 
                    setupContacto_InformacionesGrid(); 
                } 
            });             
            $("#Personas_MasterTab-tabs a[data-toggle='tab']:first").tab("show"); 
        }); 
        var Horario_Turno_Informe_TransGrid; 
        function setupHorario_Turno_Informe_TransGrid() { 
            var gridId = "Horario_Turno_Informe_TransGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")){ 
                Horario_Turno_Informe_TransGrid.fnClearTable(); 
				return; 
            } 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#horario_Turno_Informe_TransTab", 
                addUrl: "@Url.Action("AddHorarioTurnoInformeTrans", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})", 
                reportUrl: "@Url.Action("ReportHorarioTurnoInformeTrans", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})" 
            }); 
 
            gridUtils.setupGridRowButtons({ 
                 gridId: gridId 
            }); 
 
            Horario_Turno_Informe_TransGrid = $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Horario_Turno_Informe_Trans")),
                     
                    { 
                        sClass: "row-options small", 
                        bSortable: false, 
                        mData: null, 
                        mRender: function(data, type, datasource) { 
                            var rowId = datasource.EntityKey; 
                            var editHtml = '<a href="@Url.Action("EditHorarioTurnoInformeTrans", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" data-detailname="EditHorario_Turno_Informe_Trans" class="row-popup-edit btn btn-md" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>'; 
                            var deleteHtml = '<a href="@Url.Action("DeleteHorarioTurnoInformeTrans", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" class="row-delete btn btn-md" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>'; 
                            return editHtml + deleteHtml; 
                        } 
                    } 
                ], 
                "aaSorting": [[1, "asc"]], 
                
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadHorarioTurnoInformeTrans")", 
                "sServerMethod": "POST", 
				
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "persona_Secuencia", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        var Personas_DiponibilidadGrid; 
        function setupPersonas_DiponibilidadGrid() { 
            var gridId = "Personas_DiponibilidadGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")){ 
                Personas_DiponibilidadGrid.fnClearTable(); 
				return; 
            } 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#personas_DiponibilidadTab", 
                addUrl: "@Url.Action("AddPersonasDiponibilidad", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})", 
                reportUrl: "@Url.Action("ReportPersonasDiponibilidad", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})" 
            }); 
 
            gridUtils.setupGridRowButtons({ 
                 gridId: gridId 
            }); 
 
            Personas_DiponibilidadGrid = $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Personas_Diponibilidad")),
                     
                    { 
                        sClass: "row-options small", 
                        bSortable: false, 
                        mData: null, 
                        mRender: function(data, type, datasource) { 
                            var rowId = datasource.EntityKey; 
                            var editHtml = '<a href="@Url.Action("EditPersonasDiponibilidad", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" data-detailname="EditPersonas_Diponibilidad" class="row-popup-edit btn btn-md" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>'; 
                            var deleteHtml = '<a href="@Url.Action("DeletePersonasDiponibilidad", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" class="row-delete btn btn-md" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>'; 
                            return editHtml + deleteHtml; 
                        } 
                    } 
                ], 
                "aaSorting": [[1, "asc"]], 
                
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadPersonasDiponibilidad")", 
                "sServerMethod": "POST", 
				
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "persona_Secuencia", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        var Notificaciones_Personas_TransGrid; 
        function setupNotificaciones_Personas_TransGrid() { 
            var gridId = "Notificaciones_Personas_TransGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")){ 
                Notificaciones_Personas_TransGrid.fnClearTable(); 
				return; 
            } 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#notificaciones_Personas_TransTab", 
                addUrl: "@Url.Action("AddNotificacionesPersonasTrans", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})", 
                reportUrl: "@Url.Action("ReportNotificacionesPersonasTrans", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})" 
            }); 
 
            gridUtils.setupGridRowButtons({ 
                 gridId: gridId 
            }); 
 
            Notificaciones_Personas_TransGrid = $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Notificaciones_Personas_Trans")),
                     
                    { 
                        sClass: "row-options small", 
                        bSortable: false, 
                        mData: null, 
                        mRender: function(data, type, datasource) { 
                            var rowId = datasource.EntityKey; 
                            var editHtml = '<a href="@Url.Action("EditNotificacionesPersonasTrans", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" data-detailname="EditNotificaciones_Personas_Trans" class="row-popup-edit btn btn-md" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>'; 
                            var deleteHtml = '<a href="@Url.Action("DeleteNotificacionesPersonasTrans", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" class="row-delete btn btn-md" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>'; 
                            return editHtml + deleteHtml; 
                        } 
                    } 
                ], 
                "aaSorting": [[1, "asc"]], 
                
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadNotificacionesPersonasTrans")", 
                "sServerMethod": "POST", 
				
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "persona_Secuencia", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        var Persona_Roles_TransGrid; 
        function setupPersona_Roles_TransGrid() { 
            var gridId = "Persona_Roles_TransGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")){ 
                Persona_Roles_TransGrid.fnClearTable(); 
				return; 
            } 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#persona_Roles_TransTab", 
                addUrl: "@Url.Action("AddPersonaRolesTrans", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})", 
                reportUrl: "@Url.Action("ReportPersonaRolesTrans", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})" 
            }); 
 
            gridUtils.setupGridRowButtons({ 
                 gridId: gridId 
            }); 
 
            Persona_Roles_TransGrid = $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Persona_Roles_Trans")),
                     
                    { 
                        sClass: "row-options small", 
                        bSortable: false, 
                        mData: null, 
                        mRender: function(data, type, datasource) { 
                            var rowId = datasource.EntityKey; 
                            var editHtml = '<a href="@Url.Action("EditPersonaRolesTrans", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" data-detailname="EditPersona_Roles_Trans" class="row-popup-edit btn btn-md" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>'; 
                            var deleteHtml = '<a href="@Url.Action("DeletePersonaRolesTrans", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" class="row-delete btn btn-md" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>'; 
                            return editHtml + deleteHtml; 
                        } 
                    } 
                ], 
                "aaSorting": [[1, "asc"]], 
                
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadPersonaRolesTrans")", 
                "sServerMethod": "POST", 
				
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "persona_Secuencia", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        var Personas_Tipos_TransGrid; 
        function setupPersonas_Tipos_TransGrid() { 
            var gridId = "Personas_Tipos_TransGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")){ 
                Personas_Tipos_TransGrid.fnClearTable(); 
				return; 
            } 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#personas_Tipos_TransTab", 
                addUrl: "@Url.Action("AddPersonasTiposTrans", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})", 
                reportUrl: "@Url.Action("ReportPersonasTiposTrans", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})" 
            }); 
 
            gridUtils.setupGridRowButtons({ 
                 gridId: gridId 
            }); 
 
            Personas_Tipos_TransGrid = $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Personas_Tipos_Trans")),
                     
                    { 
                        sClass: "row-options small", 
                        bSortable: false, 
                        mData: null, 
                        mRender: function(data, type, datasource) { 
                            var rowId = datasource.EntityKey; 
                            var editHtml = '<a href="@Url.Action("EditPersonasTiposTrans", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" data-detailname="EditPersonas_Tipos_Trans" class="row-popup-edit btn btn-md" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>'; 
                            var deleteHtml = '<a href="@Url.Action("DeletePersonasTiposTrans", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" class="row-delete btn btn-md" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>'; 
                            return editHtml + deleteHtml; 
                        } 
                    } 
                ], 
                "aaSorting": [[1, "asc"]], 
                
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadPersonasTiposTrans")", 
                "sServerMethod": "POST", 
				
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "persona_Secuencia", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        var ZonasGrid; 
        function setupZonasGrid() { 
            var gridId = "ZonasGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")){ 
                ZonasGrid.fnClearTable(); 
				return; 
            } 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#zonasTab", 
                addUrl: "@Url.Action("AddZonas", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})", 
                reportUrl: "@Url.Action("ReportZonas", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})" 
            }); 
 
            gridUtils.setupGridRowButtons({ 
                 gridId: gridId 
            }); 
 
            ZonasGrid = $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Zonas_Encargados_Trans")),
                     
                    { 
                        sClass: "row-options small", 
                        bSortable: false, 
                        mData: null, 
                        mRender: function(data, type, datasource) { 
                            var rowId = datasource.EntityKey; 
                            var editHtml = '<a href="@Url.Action("EditZonas", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" data-detailname="EditZonas" class="row-popup-edit btn btn-md" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>'; 
                            var deleteHtml = '<a href="@Url.Action("DeleteZonas", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" class="row-delete btn btn-md" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>'; 
                            return editHtml + deleteHtml; 
                        } 
                    } 
                ], 
                "aaSorting": [[1, "asc"]], 
                
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadZonas")", 
                "sServerMethod": "POST", 
				
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "persona_Secuencia", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        var RutasAuxiliarGrid; 
        function setupRutasAuxiliarGrid() { 
            var gridId = "RutasAuxiliarGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")){ 
                RutasAuxiliarGrid.fnClearTable(); 
				return; 
            } 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#rutasAuxiliarTab", 
                addUrl: "@Url.Action("AddRutasauxiliar", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})", 
                reportUrl: "@Url.Action("ReportRutasauxiliar", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})" 
            }); 
 
            gridUtils.setupGridRowButtons({ 
                 gridId: gridId 
            }); 
 
            RutasAuxiliarGrid = $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Rutas_Master")),
                     
                    { 
                        sClass: "row-options small", 
                        bSortable: false, 
                        mData: null, 
                        mRender: function(data, type, datasource) { 
                            var rowId = datasource.Ruta_Secuencia; 
                            var editHtml = '<a href="@Url.Action("EditRutasauxiliar", "Personas_Master")?ruta_Secuencia_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" data-detailname="EditRutasAuxiliar" class="row-popup-edit btn btn-md" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>'; 
                            var deleteHtml = '<a href="@Url.Action("DeleteRutasauxiliar", "Personas_Master")?ruta_Secuencia_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" class="row-delete btn btn-md" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>'; 
                            return editHtml + deleteHtml; 
                        } 
                    } 
                ], 
                "aaSorting": [[1, "asc"]], 
                
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadRutasauxiliar")", 
                "sServerMethod": "POST", 
				
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "persona_Secuencia", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        var RutasEncargadoGrid; 
        function setupRutasEncargadoGrid() { 
            var gridId = "RutasEncargadoGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")){ 
                RutasEncargadoGrid.fnClearTable(); 
				return; 
            } 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#rutasEncargadoTab", 
                addUrl: "@Url.Action("AddRutasencargado", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})", 
                reportUrl: "@Url.Action("ReportRutasencargado", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})" 
            }); 
 
            gridUtils.setupGridRowButtons({ 
                 gridId: gridId 
            }); 
 
            RutasEncargadoGrid = $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Rutas_Master")),
                     
                    { 
                        sClass: "row-options small", 
                        bSortable: false, 
                        mData: null, 
                        mRender: function(data, type, datasource) { 
                            var rowId = datasource.Ruta_Secuencia; 
                            var editHtml = '<a href="@Url.Action("EditRutasencargado", "Personas_Master")?ruta_Secuencia_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" data-detailname="EditRutasEncargado" class="row-popup-edit btn btn-md" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>'; 
                            var deleteHtml = '<a href="@Url.Action("DeleteRutasencargado", "Personas_Master")?ruta_Secuencia_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" class="row-delete btn btn-md" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>'; 
                            return editHtml + deleteHtml; 
                        } 
                    } 
                ], 
                "aaSorting": [[1, "asc"]], 
                
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadRutasencargado")", 
                "sServerMethod": "POST", 
				
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "persona_Secuencia", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        var TurnosGrid; 
        function setupTurnosGrid() { 
            var gridId = "TurnosGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")){ 
                TurnosGrid.fnClearTable(); 
				return; 
            } 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#turnosTab", 
                addUrl: "@Url.Action("AddTurnos", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})", 
                reportUrl: "@Url.Action("ReportTurnos", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})" 
            }); 
 
            gridUtils.setupGridRowButtons({ 
                 gridId: gridId 
            }); 
 
            TurnosGrid = $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Proc_Personas_Turnos")),
                     
                    { 
                        sClass: "row-options small", 
                        bSortable: false, 
                        mData: null, 
                        mRender: function(data, type, datasource) { 
                            var rowId = datasource.EntityKey; 
                            var editHtml = '<a href="@Url.Action("EditTurnos", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" data-detailname="EditTurnos" class="row-popup-edit btn btn-md" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>'; 
                            var deleteHtml = '<a href="@Url.Action("DeleteTurnos", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" class="row-delete btn btn-md" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>'; 
                            return editHtml + deleteHtml; 
                        } 
                    } 
                ], 
                "aaSorting": [[1, "asc"]], 
                
                "oLanguage": datatables_locale, 
                //"bFilter": false, /* Disable filtering */ 
                //"bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadTurnos")", 
                "sServerMethod": "POST", 
				
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "persona_Secuencia", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        var NotificacionesGrid; 
        function setupNotificacionesGrid() { 
            var gridId = "NotificacionesGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")){ 
                NotificacionesGrid.fnClearTable(); 
				return; 
            } 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#notificacionesTab", 
                addUrl: "@Url.Action("AddNotificaciones", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})", 
                reportUrl: "@Url.Action("ReportNotificaciones", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})" 
            }); 
 
            gridUtils.setupGridRowButtons({ 
                 gridId: gridId 
            }); 
 
            NotificacionesGrid = $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Personas_Notificaciones_Trans")),
                     
                    { 
                        sClass: "row-options small", 
                        bSortable: false, 
                        mData: null, 
                        mRender: function(data, type, datasource) { 
                            var rowId = datasource.EntityKey; 
                            var editHtml = '<a href="@Url.Action("EditNotificaciones", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" data-detailname="EditNotificaciones" class="row-popup-edit btn btn-md" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>'; 
                            var deleteHtml = '<a href="@Url.Action("DeleteNotificaciones", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" class="row-delete btn btn-md" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>'; 
                            return editHtml + deleteHtml; 
                        } 
                    } 
                ], 
                "aaSorting": [[1, "asc"]], 
                
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadNotificaciones")", 
                "sServerMethod": "POST", 
				
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "persona_Secuencia", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        var Contacto_InformacionesGrid; 
        function setupContacto_InformacionesGrid() { 
            var gridId = "Contacto_InformacionesGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")){ 
                Contacto_InformacionesGrid.fnClearTable(); 
				return; 
            } 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#contacto_InformacionesTab", 
                addUrl: "@Url.Action("AddContactoInformaciones", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})", 
                reportUrl: "@Url.Action("ReportContactoInformaciones", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})" 
            }); 
 
            gridUtils.setupGridRowButtons({ 
                 gridId: gridId 
            }); 
 
            Contacto_InformacionesGrid = $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Persona_Contactos_Trans")),
                     
                    { 
                        sClass: "row-options small", 
                        bSortable: false, 
                        mData: null, 
                        mRender: function(data, type, datasource) { 
                            var rowId = datasource.EntityKey; 
                            var editHtml = '<a href="@Url.Action("EditContactoInformaciones", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" data-detailname="EditContacto_Informaciones" class="row-popup-edit btn btn-md" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>'; 
                            var deleteHtml = '<a href="@Url.Action("DeleteContactoInformaciones", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" class="row-delete btn btn-md" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>'; 
                            return editHtml + deleteHtml; 
                        } 
                    } 
                ], 
                "aaSorting": [[1, "asc"]], 
                
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadContactoInformaciones")", 
                "sServerMethod": "POST", 
				
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "persona_Secuencia", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

    </script> 
} 


