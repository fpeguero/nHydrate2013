@*
//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 5/4/2014 2:13:23 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

*@
@using Mvc.Core.UI
@using OSIS.PEPPAM.Mvc.UI
@model OSIS.PEPPAM.Mvc.Models.Personas_MasterModel 
@{ 
    IFuncionality uiObject = new Funcionality().GetFuncionality("Personas_Master");

    ViewBag.Title = Resources.Shared.AppName + " - " + uiObject.Name + " : " + Model.EntityDisplayName;
	string twoLettersCulture = new System.Globalization.CultureInfo(Culture).TwoLetterISOLanguageName;	 
    string decimalSeparator = new System.Globalization.CultureInfo(Culture).NumberFormat.NumberDecimalSeparator; 
    string groupSeparator = new System.Globalization.CultureInfo(Culture).NumberFormat.NumberGroupSeparator;  
} 
<h2>@uiObject.Name</h2>
<h5>@uiObject.Description</h5>
<div class="form-commands-container"> 
    <button class="btn btn-default btn-sm back-button" title="@uiObject.GetAction("Back").Help"><span class="glyphicon glyphicon-arrow-left"></span>@uiObject.GetAction("Back").Description</button> 
    <button class="btn  btn-default btn-sm save-button" title="@uiObject.GetAction("Save")"><span class="glyphicon glyphicon-ok"></span>@uiObject.GetAction("Save").Description</button> 
</div> 
<div class="entity-form-container"> 
    @using (Html.BeginForm("Edit", "Personas_Master", FormMethod.Post, new { id = "Personas_MasterForm", role="form", @class="form-horizontal" }))  
    { 
      @Html.ValidationSummary(true) 
      @Html.Partial("_CreateOrEdit", Model) 
    } 
</div> 

<div id="Personas_MasterTab-tabs"> 
    <ul class="nav nav-tabs"> 

        <li> 
            <a href="#zonasTab" data-toggle="tab">@Funcionality.GetDescription("Zonas_Encargados_Trans","Zonas_Encargados_Trans")</a> 
        </li> 

        <li> 
            <a href="#rutasAuxiliarTab" data-toggle="tab">@Funcionality.GetDescription("Rutas_Master","Rutas_Master")</a> 
        </li> 

        <li> 
            <a href="#rutasEncargadoTab" data-toggle="tab">@Funcionality.GetDescription("Rutas_Master","Rutas_Master")</a> 
        </li> 

        <li> 
            <a href="#turnosTab" data-toggle="tab">@Funcionality.GetDescription("Personas_Turnos_Trans","Personas_Turnos_Trans")</a> 
        </li> 

        <li> 
            <a href="#personas_TiposTab" data-toggle="tab">@Funcionality.GetDescription("Personas_Tipos_Trans","Personas_Tipos_Trans")</a> 
        </li> 

        <li> 
            <a href="#notificacionesTab" data-toggle="tab">@Funcionality.GetDescription("Personas_Notificaciones_Trans","Personas_Notificaciones_Trans")</a> 
        </li> 

        <li> 
            <a href="#contacto_InformacionesTab" data-toggle="tab">@Funcionality.GetDescription("Persona_Contactos_Trans","Persona_Contactos_Trans")</a> 
        </li> 

    </ul> 
</div> 
 
<div id="Personas_MasterTab-contents" class="tab-content"> 

 
    <!-- Zonas Tab begin --> 
    <div id="zonasTab" class="tab-pane fade"> 

        <!-- Grid begin --> 
        <div class="secondary-grid-commands"> 
            <button class="btn btn-default btn-xs popup-create-button" title="@uiObject.GetAction("Create").Help" data-grid="ZonasGrid" data-masterid="@Model.Persona_Secuencia" data-detailname="AddZonas"> 
                <span class="glyphicon glyphicon-plus"></span>@uiObject.GetAction("Create").Description 
            </button> 
            <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help"> 
                <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description 
            </button> 
        </div>           
        <table id="ZonasGrid" width="100%" class="table table-striped table-bordered"></table> 
        <!-- Grid end --> 

    </div> 
    <!-- Zonas Tab end --> 

 
    <!-- RutasAuxiliar Tab begin --> 
    <div id="rutasAuxiliarTab" class="tab-pane fade"> 

        <!-- Grid begin --> 
        <div class="secondary-grid-commands"> 
            <button class="btn btn-default btn-xs popup-create-button" title="@uiObject.GetAction("Create").Help" data-grid="RutasAuxiliarGrid" data-masterid="@Model.Persona_Secuencia" data-detailname="AddRutasAuxiliar"> 
                <span class="glyphicon glyphicon-plus"></span>@uiObject.GetAction("Create").Description 
            </button> 
            <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help"> 
                <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description 
            </button> 
        </div>           
        <table id="RutasAuxiliarGrid" width="100%" class="table table-striped table-bordered"></table> 
        <!-- Grid end --> 

    </div> 
    <!-- RutasAuxiliar Tab end --> 

 
    <!-- RutasEncargado Tab begin --> 
    <div id="rutasEncargadoTab" class="tab-pane fade"> 

        <!-- Grid begin --> 
        <div class="secondary-grid-commands"> 
            <button class="btn btn-default btn-xs popup-create-button" title="@uiObject.GetAction("Create").Help" data-grid="RutasEncargadoGrid" data-masterid="@Model.Persona_Secuencia" data-detailname="AddRutasEncargado"> 
                <span class="glyphicon glyphicon-plus"></span>@uiObject.GetAction("Create").Description 
            </button> 
            <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help"> 
                <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description 
            </button> 
        </div>           
        <table id="RutasEncargadoGrid" width="100%" class="table table-striped table-bordered"></table> 
        <!-- Grid end --> 

    </div> 
    <!-- RutasEncargado Tab end --> 

 
    <!-- Turnos Tab begin --> 
    <div id="turnosTab" class="tab-pane fade"> 

        <!-- Grid begin --> 
        <div class="secondary-grid-commands"> 
            <button class="btn btn-default btn-xs popup-create-button" title="@uiObject.GetAction("Create").Help" data-grid="TurnosGrid" data-masterid="@Model.Persona_Secuencia" data-detailname="AddTurnos"> 
                <span class="glyphicon glyphicon-plus"></span>@uiObject.GetAction("Create").Description 
            </button> 
            <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help"> 
                <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description 
            </button> 
        </div>           
        <table id="TurnosGrid" width="100%" class="table table-striped table-bordered"></table> 
        <!-- Grid end --> 

    </div> 
    <!-- Turnos Tab end --> 

 
    <!-- Personas_Tipos Tab begin --> 
    <div id="personas_TiposTab" class="tab-pane fade"> 

        <!-- Grid begin --> 
        <div class="secondary-grid-commands"> 
            <button class="btn btn-default btn-xs popup-create-button" title="@uiObject.GetAction("Create").Help" data-grid="Personas_TiposGrid" data-masterid="@Model.Persona_Secuencia" data-detailname="AddPersonas_Tipos"> 
                <span class="glyphicon glyphicon-plus"></span>@uiObject.GetAction("Create").Description 
            </button> 
            <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help"> 
                <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description 
            </button> 
        </div>           
        <table id="Personas_TiposGrid" width="100%" class="table table-striped table-bordered"></table> 
        <!-- Grid end --> 

    </div> 
    <!-- Personas_Tipos Tab end --> 

 
    <!-- Notificaciones Tab begin --> 
    <div id="notificacionesTab" class="tab-pane fade"> 

        <!-- Grid begin --> 
        <div class="secondary-grid-commands"> 
            <button class="btn btn-default btn-xs popup-create-button" title="@uiObject.GetAction("Create").Help" data-grid="NotificacionesGrid" data-masterid="@Model.Persona_Secuencia" data-detailname="AddNotificaciones"> 
                <span class="glyphicon glyphicon-plus"></span>@uiObject.GetAction("Create").Description 
            </button> 
            <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help"> 
                <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description 
            </button> 
        </div>           
        <table id="NotificacionesGrid" width="100%" class="table table-striped table-bordered"></table> 
        <!-- Grid end --> 

    </div> 
    <!-- Notificaciones Tab end --> 

 
    <!-- Contacto_Informaciones Tab begin --> 
    <div id="contacto_InformacionesTab" class="tab-pane fade"> 

        <!-- Grid begin --> 
        <div class="secondary-grid-commands"> 
            <button class="btn btn-default btn-xs popup-create-button" title="@uiObject.GetAction("Create").Help" data-grid="Contacto_InformacionesGrid" data-masterid="@Model.Persona_Secuencia" data-detailname="AddContacto_Informaciones"> 
                <span class="glyphicon glyphicon-plus"></span>@uiObject.GetAction("Create").Description 
            </button> 
            <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help"> 
                <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description 
            </button> 
        </div>           
        <table id="Contacto_InformacionesGrid" width="100%" class="table table-striped table-bordered"></table> 
        <!-- Grid end --> 

    </div> 
    <!-- Contacto_Informaciones Tab end --> 

</div> 
 

  

@section Scripts { 
	@Scripts.Render("~/bundles/jqueryval") 
    <script type="text/javascript"> 
        $(function () { 
            formUtils.setupFormControls("Personas_MasterForm"); 
            formUtils.setupFormActionButtons({ 
                formId: "Personas_MasterForm", 
                indexPageUrl: "@Url.Action("Index")", 
                buttonsContainerSelector: ".form-commands-container" 
            }); 
             
            $('#Personas_MasterTab-tabs a[data-toggle="tab"]').on('shown.bs.tab', function (e, s) { 
                var tabShown = e.target.attributes["href"].value; 
                if (tabShown == "#zonasTab") { 
                    setupZonasGrid(); 
                } 
                if (tabShown == "#rutasAuxiliarTab") { 
                    setupRutasAuxiliarGrid(); 
                } 
                if (tabShown == "#rutasEncargadoTab") { 
                    setupRutasEncargadoGrid(); 
                } 
                if (tabShown == "#turnosTab") { 
                    setupTurnosGrid(); 
                } 
                if (tabShown == "#personas_TiposTab") { 
                    setupPersonas_TiposGrid(); 
                } 
                if (tabShown == "#notificacionesTab") { 
                    setupNotificacionesGrid(); 
                } 
                if (tabShown == "#contacto_InformacionesTab") { 
                    setupContacto_InformacionesGrid(); 
                } 
            });             
            $("#Personas_MasterTab-tabs a[data-toggle='tab']:first").tab("show"); 
        }); 
        var ZonasGrid; 
        function setupZonasGrid() { 
            var gridId = "ZonasGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")){ 
                ZonasGrid.fnClearTable(); 
				return; 
            } 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#zonasTab", 
                addUrl: "@Url.Action("AddZonas", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})", 
                reportUrl: "@Url.Action("ReportZonas", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})" 
            }); 
 
            gridUtils.setupGridRowButtons({ 
                 gridId: gridId 
            }); 
 
            ZonasGrid = $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Zonas_Encargados_Trans")),
                     
                    { 
                        sClass: "row-options small", 
                        bSortable: false, 
                        mData: null, 
                        mRender: function(data, type, datasource) { 
                            var rowId = datasource.EntityKey; 
                            var editHtml = '<a href="@Url.Action("EditZonas", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" data-detailname="EditZonas" class="row-popup-edit btn btn-sm btn-default" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>'; 
                            var deleteHtml = '<a href="@Url.Action("DeleteZonas", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" class="row-delete btn btn-sm btn-danger" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>'; 
                            return editHtml + deleteHtml; 
                        } 
                    } 
                ], 
                "aaSorting": [[1, "asc"]], 
                 
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadZonas")", 
                "sServerMethod": "POST", 
				 
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "persona_Secuencia", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        var RutasAuxiliarGrid; 
        function setupRutasAuxiliarGrid() { 
            var gridId = "RutasAuxiliarGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")){ 
                RutasAuxiliarGrid.fnClearTable(); 
				return; 
            } 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#rutasAuxiliarTab", 
                addUrl: "@Url.Action("AddRutasauxiliar", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})", 
                reportUrl: "@Url.Action("ReportRutasauxiliar", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})" 
            }); 
 
            gridUtils.setupGridRowButtons({ 
                 gridId: gridId 
            }); 
 
            RutasAuxiliarGrid = $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Rutas_Master")),
                     
                    { 
                        sClass: "row-options small", 
                        bSortable: false, 
                        mData: null, 
                        mRender: function(data, type, datasource) { 
                            var rowId = datasource.Ruta_Secuencia; 
                            var editHtml = '<a href="@Url.Action("EditRutasauxiliar", "Personas_Master")?ruta_Secuencia_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" data-detailname="EditRutasAuxiliar" class="row-popup-edit btn btn-sm btn-default" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>'; 
                            var deleteHtml = '<a href="@Url.Action("DeleteRutasauxiliar", "Personas_Master")?ruta_Secuencia_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" class="row-delete btn btn-sm btn-danger" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>'; 
                            return editHtml + deleteHtml; 
                        } 
                    } 
                ], 
                "aaSorting": [[1, "asc"]], 
                 
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadRutasauxiliar")", 
                "sServerMethod": "POST", 
				 
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "persona_Secuencia", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        var RutasEncargadoGrid; 
        function setupRutasEncargadoGrid() { 
            var gridId = "RutasEncargadoGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")){ 
                RutasEncargadoGrid.fnClearTable(); 
				return; 
            } 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#rutasEncargadoTab", 
                addUrl: "@Url.Action("AddRutasencargado", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})", 
                reportUrl: "@Url.Action("ReportRutasencargado", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})" 
            }); 
 
            gridUtils.setupGridRowButtons({ 
                 gridId: gridId 
            }); 
 
            RutasEncargadoGrid = $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Rutas_Master")),
                     
                    { 
                        sClass: "row-options small", 
                        bSortable: false, 
                        mData: null, 
                        mRender: function(data, type, datasource) { 
                            var rowId = datasource.Ruta_Secuencia; 
                            var editHtml = '<a href="@Url.Action("EditRutasencargado", "Personas_Master")?ruta_Secuencia_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" data-detailname="EditRutasEncargado" class="row-popup-edit btn btn-sm btn-default" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>'; 
                            var deleteHtml = '<a href="@Url.Action("DeleteRutasencargado", "Personas_Master")?ruta_Secuencia_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" class="row-delete btn btn-sm btn-danger" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>'; 
                            return editHtml + deleteHtml; 
                        } 
                    } 
                ], 
                "aaSorting": [[1, "asc"]], 
                 
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadRutasencargado")", 
                "sServerMethod": "POST", 
				 
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "persona_Secuencia", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        var TurnosGrid; 
        function setupTurnosGrid() { 
            var gridId = "TurnosGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")){ 
                TurnosGrid.fnClearTable(); 
				return; 
            } 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#turnosTab", 
                addUrl: "@Url.Action("AddTurnos", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})", 
                reportUrl: "@Url.Action("ReportTurnos", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})" 
            }); 
 
            gridUtils.setupGridRowButtons({ 
                 gridId: gridId 
            }); 
 
            TurnosGrid = $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Personas_Turnos_Trans")),
                     
                    { 
                        sClass: "row-options small", 
                        bSortable: false, 
                        mData: null, 
                        mRender: function(data, type, datasource) { 
                            var rowId = datasource.EntityKey; 
                            var editHtml = '<a href="@Url.Action("EditTurnos", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" data-detailname="EditTurnos" class="row-popup-edit btn btn-sm btn-default" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>'; 
                            var deleteHtml = '<a href="@Url.Action("DeleteTurnos", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" class="row-delete btn btn-sm btn-danger" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>'; 
                            return editHtml + deleteHtml; 
                        } 
                    } 
                ], 
                "aaSorting": [[1, "asc"]], 
                 
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadTurnos")", 
                "sServerMethod": "POST", 
				 
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "persona_Secuencia", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        var Personas_TiposGrid; 
        function setupPersonas_TiposGrid() { 
            var gridId = "Personas_TiposGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")){ 
                Personas_TiposGrid.fnClearTable(); 
				return; 
            } 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#personas_TiposTab", 
                addUrl: "@Url.Action("AddPersonasTipos", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})", 
                reportUrl: "@Url.Action("ReportPersonasTipos", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})" 
            }); 
 
            gridUtils.setupGridRowButtons({ 
                 gridId: gridId 
            }); 
 
            Personas_TiposGrid = $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Personas_Tipos_Trans")),
                     
                    { 
                        sClass: "row-options small", 
                        bSortable: false, 
                        mData: null, 
                        mRender: function(data, type, datasource) { 
                            var rowId = datasource.EntityKey; 
                            var editHtml = '<a href="@Url.Action("EditPersonasTipos", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" data-detailname="EditPersonas_Tipos" class="row-popup-edit btn btn-sm btn-default" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>'; 
                            var deleteHtml = '<a href="@Url.Action("DeletePersonasTipos", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" class="row-delete btn btn-sm btn-danger" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>'; 
                            return editHtml + deleteHtml; 
                        } 
                    } 
                ], 
                "aaSorting": [[1, "asc"]], 
                 
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadPersonasTipos")", 
                "sServerMethod": "POST", 
				 
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "persona_Secuencia", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        var NotificacionesGrid; 
        function setupNotificacionesGrid() { 
            var gridId = "NotificacionesGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")){ 
                NotificacionesGrid.fnClearTable(); 
				return; 
            } 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#notificacionesTab", 
                addUrl: "@Url.Action("AddNotificaciones", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})", 
                reportUrl: "@Url.Action("ReportNotificaciones", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})" 
            }); 
 
            gridUtils.setupGridRowButtons({ 
                 gridId: gridId 
            }); 
 
            NotificacionesGrid = $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Personas_Notificaciones_Trans")),
                     
                    { 
                        sClass: "row-options small", 
                        bSortable: false, 
                        mData: null, 
                        mRender: function(data, type, datasource) { 
                            var rowId = datasource.EntityKey; 
                            var editHtml = '<a href="@Url.Action("EditNotificaciones", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" data-detailname="EditNotificaciones" class="row-popup-edit btn btn-sm btn-default" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>'; 
                            var deleteHtml = '<a href="@Url.Action("DeleteNotificaciones", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" class="row-delete btn btn-sm btn-danger" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>'; 
                            return editHtml + deleteHtml; 
                        } 
                    } 
                ], 
                "aaSorting": [[1, "asc"]], 
                 
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadNotificaciones")", 
                "sServerMethod": "POST", 
				 
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "persona_Secuencia", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

        var Contacto_InformacionesGrid; 
        function setupContacto_InformacionesGrid() { 
            var gridId = "Contacto_InformacionesGrid"; 
 
			if ($("#" + gridId).data("grid-initialized")){ 
                Contacto_InformacionesGrid.fnClearTable(); 
				return; 
            } 
			else  
				$("#" + gridId).data("grid-initialized", "true"); 
 
 
            gridUtils.setupGridToolbarButtons({ 
                gridId: gridId, 
				toolbarContainerSelector: "#contacto_InformacionesTab", 
                addUrl: "@Url.Action("AddContactoInformaciones", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})", 
                reportUrl: "@Url.Action("ReportContactoInformaciones", "Personas_Master", new {persona_Secuencia = Model.Persona_Secuencia})" 
            }); 
 
            gridUtils.setupGridRowButtons({ 
                 gridId: gridId 
            }); 
 
            Contacto_InformacionesGrid = $("#" + gridId).dataTable({ 
                "aoColumns": [ 
                @Html.Raw(uiObject.GetGridColumnsArray("Persona_Contactos_Trans")),
                     
                    { 
                        sClass: "row-options small", 
                        bSortable: false, 
                        mData: null, 
                        mRender: function(data, type, datasource) { 
                            var rowId = datasource.EntityKey; 
                            var editHtml = '<a href="@Url.Action("EditContactoInformaciones", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" data-detailname="EditContacto_Informaciones" class="row-popup-edit btn btn-sm btn-default" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>'; 
                            var deleteHtml = '<a href="@Url.Action("DeleteContactoInformaciones", "Personas_Master")?entityKey_child=' + rowId + '&persona_Secuencia_parent=@Model.Persona_Secuencia" class="row-delete btn btn-sm btn-danger" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>'; 
                            return editHtml + deleteHtml; 
                        } 
                    } 
                ], 
                "aaSorting": [[1, "asc"]], 
                 
                "oLanguage": datatables_locale, 
                "bFilter": false, /* Disable filtering */ 
                "bSort": false, /* Disable sorting */ 
                "bProcessing": true, 
                "bServerSide": true, 
                "sAjaxSource": "@Url.Action("LoadContactoInformaciones")", 
                "sServerMethod": "POST", 
				 
                "fnServerParams": function(aoData) { 
                    aoData.push({ "name": "persona_Secuencia", "value": "@Model.Persona_Secuencia" }); 
                } 
            }); 
		} 

    </script> 
} 


