@*
    //------------------------------------------------------------------------------
    // <auto-generated>
    //    This code was generated from a template.
    //
    //    Creador : Administrator
    //    Dominio : OSISPC
    //    Pc      : OSISPC
    //    Fecha   : 6/14/2014 9:46:02 PM
    //
    //    Manual changes to this file may cause unexpected behavior in your application.
    //    Manual changes to this file will be overwritten if the code is regenerated.
    // </auto-generated>
    //------------------------------------------------------------------------------

*@
@using Mvc.Core.Security
@using Mvc.Core.UI
@using OSIS.PEPPAM.Mvc.UI
@model OSIS.PEPPAM.Mvc.Models.Personas_FiltroModel
@{
    IFuncionality uiObject = new Funcionality().GetFuncionality("Personas_Master");

    ViewBag.Title = Resources.Shared.AppName + " - " + uiObject.Name;
}
<div class="form">
    <h2>@uiObject.Name <small>@uiObject.Description</small></h2>



    <div class="row">
        <div class="grid-commands-container grid-top-buttons col-xs-5">
            @ToolbarButtons()
        </div>
        <div class="form-inline col-xs-7">
            @*<div class="form-group pull-right">
                    <input type="text" name="search" class="form-control search-box input-sm" value="" id="Personas_MasterSearch" placeholder="@uiObject.GetMessages("DoSearch").Description" />
                    <div class="btn-group">
                        <button type="button" class="btn btn-default btn-sm btn-default search-button" title="@uiObject.GetAction("DoSearch")"><span class="glyphicon glyphicon-search"></span></button>
                        <button type="button" class="btn btn-default btn-sm clean-button" title="@uiObject.GetAction("Clean")"><span class="glyphicon glyphicon-remove"></span></button> new { @class = "form-control search-Select input-xlarge" }
                    </div>
                </div>*@
        </div>
    </div>
    <div class="row">

        @if (((IPrincipal)User).IsInNivel(SeguridadNivel.EncargadoZona))
        {
            <div class="form-field-group">
                <label class="control-label col-sm-1 col-lg-1">Zonas</label>
                <div class="editor col-sm-4 col-lg-5">

                    @Html.DropDownListFor(model => model.Zona_Secuencia, new SelectList(ViewBag.Zonas, "Zona_Secuencia", "Zona_Descripcion", Model.Zona_Secuencia), new { @class = "form-control search-Select" })
                    @Html.ValidationMessageFor(model => model.Zona_Secuencia)

                </div>
            </div>


            <div class="form-field-group">
                <label class="control-label col-sm-2 col-lg-2"> Congregaciones </label>
                <div class="editor col-sm-3 col-lg-4">

                    @*@Html.DropDownListFor(model => model.Ruta_Secuencia, new SelectList(ViewBag.Congregaciones, "Congregacion_Secuencia", "Congregacion_Nombre", Model.Ruta_Secuencia), new { @class = "form-control search-Select" })*@
                    @Html.DropDownListFor(model => model.Ruta_Secuencia, new SelectList(ViewBag.Congregaciones, "Congregacion_Secuencia", "Congregacion_Nombre", Model.Ruta_Secuencia), new { @class = "form-control search-Select" })
                    @Html.ValidationMessageFor(model => model.Ruta_Secuencia)

                </div>
            </div>
        }

        <div class="form-field-group">
            <label class="control-label col-sm-1 col-lg-1">Estados</label>
            <div class="editor col-sm-4 col-lg-5">

                @Html.DropDownListFor(model => model.Persona_Estado_Secuencia, new SelectList(ViewBag.EstadosPersona, "Persona_Estado_Secuencia", "Persona_Estado_Descripcion", Model.Persona_Estado_Secuencia), new { @class = "form-control search-Select" })
                @Html.ValidationMessageFor(model => model.Persona_Estado_Secuencia)

            </div>
        </div>

        <div class="form-field-group">
            <label class="control-label col-sm-2 col-lg-2"></label>
            <div class="editor grid-view-search col-sm-3 col-lg-4">

                <input type="text" name="search" class="form-control search-box input-sm" value="" id="Personas_MasterSearch" placeholder="@uiObject.GetMessages("DoSearch").Description" />
                <div class="btn-group">
                    <button type="button" class="btn btn-default btn-sm btn-default search-button" title="@uiObject.GetAction("DoSearch")"><span class="glyphicon glyphicon-search"></span></button>
                    <button type="button" class="btn btn-default btn-sm clean-button" title="@uiObject.GetAction("Clean")"><span class="glyphicon glyphicon-remove"></span></button>
                </div>

            </div>
        </div>

    </div>
    <table id="Personas_MasterGrid" class="table table-striped table-bordered" width="100%"></table>
    <div class="grid-commands-container grid-bottom-buttons">
        @ToolbarButtons()
    </div>
</div>

@helper ToolbarButtons()
{
    IFuncionality uiObject = new Funcionality().GetFuncionality("Personas_Master");

    <button class="btn btn-default btn-sm create-button" title="@uiObject.GetAction("Create").Help"><span class="glyphicon glyphicon-plus-sign"></span>@uiObject.GetAction("Create").Description</button>
    <button class="btn btn-default btn-sm report-button" title="@uiObject.GetAction("Report").Help"><span class="glyphicon glyphicon-print"></span>@uiObject.GetAction("Report").Description</button>
}

@section scripts
{
    <script type="text/javascript">
        $(function () {
            var gridId = "Personas_MasterGrid";

            gridUtils.setupGridToolbarButtons({
                gridId: gridId,
                toolbarContainerSelector: ".grid-bottom-buttons, .grid-top-buttons",
                addUrl: "@Url.Action("Create")",
                reportUrl: "@Url.Action("Report")"
            });
            gridUtils.setupGridSearchBox({
                gridId: gridId,
                searchContainerSelector: ".grid-view-search"
            });
            gridUtils.setupGridRowButtons({ gridId: gridId });

            $("#" + gridId).dataTable({
                "aoColumns": [
                    @Html.Raw(uiObject.GetGridColumnsArray("Proc_Personas_Descripciones")),
                    {
                        sClass: "row-options",
                        bSortable: false,
                        mData: null,
                        mRender: function (data, type, datasource) {
                            var rowId = datasource.Persona_Secuencia;
                            var editHtml = '<a href="@Url.Action("Edit")?persona_Secuencia=' + rowId + '" class="row-edit btn btn-sm btn-default" title="@uiObject.GetAction("Edit").Description"><span class="glyphicon glyphicon-pencil" /></a>';
                            var deleteHtml = '<a href="@Url.Action("Delete")?persona_Secuencia=' + rowId + '" class="row-delete btn btn-sm btn-danger" title="@uiObject.GetAction("Delete").Description"><span class="glyphicon glyphicon-remove" /></a>';
                            return editHtml + deleteHtml;
                        }
                    }
                ],
                "aaSorting": [[1, "asc"]],
                "oLanguage": datatables_locale,
                "bProcessing": true,
                "bFilter": true,
                "bServerSide": true,
                "sAjaxSource": "@Url.Action("Load")",
                "sServerMethod": "POST",
                "bStateSave": true,
                "sCookiePrefix": "fapa_",
                "fnServerParams": function (aoData) {
                    aoData.push({ "name": "zona", "value": $("#Zona_Secuencia").val() },
                    { "name": "congregacion", "value": $("#Ruta_Secuencia").val() },
                    { "name": "personaTipo", "value": $("#Persona_Estado_Secuencia").val() });
                },
                "fnCookieCallback": function (sName, oData, sExpires, sPath) {
                    return sName + "=" + JSON.stringify(oData) + ";path=" + sPath;
                },
                "fnStateLoaded": function (oSettings) {
                    var search = oSettings.oPreviousSearch;
                    if (search) {
                        $("input.search-box").val(search.sSearch);
                    }
                }
            });
        });
    </script>



    <script type="text/javascript">
        $(document).ready(function () {

            LoadCongregaciones();
            $("#Zona_Secuencia").change(function () {
                LoadCongregaciones();
            });
        });

        function LoadCongregaciones() {
            $("#Ruta_Secuencia").empty();
            $("#Ruta_Secuencia").append('<option value="-999">' + 'Todas' + '</option>');
            $.ajax({
                url: '@Url.Action("LoadCongregaciones", "Personas_Master")',
                data: { zona: $("#Zona_Secuencia").val() },
                success:
                    function (datas, textStatus, XMLHttpRequest) {
                        console.log(datas);
                        $.each(datas, function (i, data) {
                            $("#Ruta_Secuencia").append('<option value="' + data.Value + '">' + data.Text + '</option>');
                        });
                    },
                error:
                    function (jqXHR, textStatus, errorThrown) {
                        formUtils.showMessage(jqXHR.responseText);
                    }
            });
        }


    </script>

}




