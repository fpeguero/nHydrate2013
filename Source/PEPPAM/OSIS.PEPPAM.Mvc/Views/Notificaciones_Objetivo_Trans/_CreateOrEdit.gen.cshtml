@*
    //------------------------------------------------------------------------------
    // <auto-generated>
    //    This code was generated from a template.
    //
    //    Creador : Administrator
    //    Dominio : OSISPC
    //    Pc      : OSISPC
    //    Fecha   : 5/17/2014 10:09:57 AM
    //
    //    Manual changes to this file may cause unexpected behavior in your application.
    //    Manual changes to this file will be overwritten if the code is regenerated.
    // </auto-generated>
    //------------------------------------------------------------------------------

*@
@using Mvc.Core.UI
@using OSIS.PEPPAM.Mvc.UI
@model OSIS.PEPPAM.Mvc.Models.Notificaciones_Objetivo_TransModel
@{
    IFuncionality uiObject = new Funcionality().GetFuncionality("Notificaciones_Objetivo_Trans");

    ViewBag.Title = Resources.Shared.AppName + " - " + uiObject.Name;
    string twoLettersCulture = new System.Globalization.CultureInfo(Culture).TwoLetterISOLanguageName;
    string decimalSeparator = new System.Globalization.CultureInfo(Culture).NumberFormat.NumberDecimalSeparator;
    string groupSeparator = new System.Globalization.CultureInfo(Culture).NumberFormat.NumberGroupSeparator;
}
<h2>@uiObject.Name</h2>
<h5>@uiObject.Description</h5>

<style>
    .With100 {
        width: 100%
    }


</style>
<div class="row formstyle">


    <div class="row">

        @if (ViewBag.MasterProperty != "Zonas_Master_Notificaciones_Objetivo_Trans" && (bool)ViewBag.IsNew == true)
        {
            <div class="form-field-group">
                <label class="control-label  col-sm-3 col-lg-4">@uiObject.GetField("Zona_Secuencia").Description</label>
                <div class="editor col-sm-7 col-lg-8">
                    @Html.DropDownListFor(model => model.Zona_Secuencia, new SelectList(Model.ZonasMasterList, "Zona_Secuencia", "EntityDisplayName", Model.Zona_Secuencia), new { @class = "With100" })
                    @Html.ValidationMessageFor(model => model.Zona_Secuencia)
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.Zona_Secuencia)
        }

    </div>

    <div class="row">
        @if (ViewBag.MasterProperty != "Rutas_Master_Notificaciones_Objetivo_Trans" && (bool)ViewBag.IsNew == true)
        {
            <div class="form-field-group">
                <label class="control-label  col-sm-3 col-lg-4">@uiObject.GetField("Ruta_Secuencia").Description</label>
                <div class="editor col-sm-7 col-lg-8">
                    @Html.DropDownListFor(model => model.Ruta_Secuencia, new SelectList(ViewBag.Puestos, "Ruta_Secuencia", "EntityDisplayName", Model.Ruta_Secuencia), new { @class = "form-control" })
                    @*@Html.TextBoxFor(model => model.Ruta_Secuencia, new { @class = "With100" })*@
                    @Html.ValidationMessageFor(model => model.Ruta_Secuencia)
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.Ruta_Secuencia)
        }

    </div>
    
    <div class="row">
        @if (ViewBag.MasterProperty != "Roles_Cata_Notificaciones_Objetivo_Trans" && (bool)ViewBag.IsNew == true)
        {
            <div class="form-field-group">
                <label class="control-label  col-sm-3 col-lg-4">@uiObject.GetField("Role_Numero").Description</label>
                <div class="editor col-sm-7 col-lg-8">
                    @Html.DropDownListFor(model => model.Role_Numero, new SelectList(Model.RolesCataList, "Role_Numero", "EntityDisplayName", Model.Role_Numero), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Role_Numero)
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.Role_Numero)
        }

    </div>

    <div class="row">
        @if (ViewBag.MasterProperty != "Notificaciones_Master_Notificaciones_Objetivo_Trans" && (bool)ViewBag.IsNew == true)
        {
            <div class="form-field-group">
                <label class="control-label  col-sm-3 col-lg-4">@uiObject.GetField("Notificacion_Numero").Description</label>
                <div class="editor col-sm-7 col-lg-8">
                    @Html.DropDownListFor(model => model.Notificacion_Numero, new SelectList(Model.NotificacionesMasterList, "Notificacion_Numero", "EntityDisplayName", Model.Notificacion_Numero), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Notificacion_Numero)
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.Notificacion_Numero)
        }

    </div>

    @if ((bool)ViewBag.IsNew == false)
    {
        <div class="form-field-group">
            <label class="control-label col-sm-3 col-lg-4">@uiObject.GetField("Registro_Estado").Description</label>
            <div class="editor col-sm-7 col-lg-8">
                <label>@Html.RadioButtonFor(model => model.Registro_Estado, "A", new { @class = " ", }) Activo</label>
                <label>@Html.RadioButtonFor(model => model.Registro_Estado, "I", new { @class = " ", }) Inactivo</label>
                @Html.ValidationMessageFor(model => model.Registro_Estado)
            </div>
        </div>

    }
    else
    {
        @Html.HiddenFor(model => model.Registro_Estado);
    }
</div>


<div class="row">
    </div>

@if ((bool) ViewBag.IsNew == true)
{
    <script type="text/javascript">

      

        @*$("#Zona_Secuencia").kendoDropDownList({
            dataTextField: "Zona_Descripcion",
            dataValueField: "Zona_Secuencia",
            autoBind: false,
        });

        var products = $("#Ruta_Secuencia").kendoDropDownList({
            autoBind: false,
            cascadeFrom: "Zona_Secuencia",
            optionLabel: "Seleccione un Puesto (Todos)",
            dataTextField: "Ruta_Descripcion",
            dataValueField: "Ruta_Secuencia",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "@Url.Action("LoadRutas", "Notificaciones_Master")",
                        data: function() {
                            return { value1: $("#Zona_Secuencia").val() };
                        }
                    }
                }
            },
        });*@


        $(document).on("change", "#Zona_Secuencia", function () {
            $("#Ruta_Secuencia").empty();
            $("#Ruta_Secuencia").append('<option value="">' + 'Seleccione Uno' + '</option>');

            $.ajax({
                url: '@Url.Action("LoadRutas", "Notificaciones_Master")',
                data : {value1: $("#Zona_Secuencia").val()},
                success:
                    function (datas, textStatus, XMLHttpRequest) {
                        $.each(datas, function (i, data) {
                            $("#Ruta_Secuencia").append('<option value="' + data.Ruta_Secuencia + '">' + data.Ruta_Descripcion + '</option>');
                        });
                    },
                error:
                    function (jqXHR, textStatus, errorThrown) {
                        formUtils.showMessage(jqXHR.responseText);
                    }
            });
        })




    </script>
}