@*
    //------------------------------------------------------------------------------
    // <auto-generated>
    //    This code was generated from a template.
    //
    //    Creador : Administrator
    //    Dominio : OSISPC
    //    Pc      : OSISPC
    //    Fecha   : 5/17/2014 9:17:02 AM
    //
    //    Manual changes to this file may cause unexpected behavior in your application.
    //    Manual changes to this file will be overwritten if the code is regenerated.
    // </auto-generated>
    //------------------------------------------------------------------------------

*@
@using Mvc.Core.UI
@using OSIS.PEPPAM.Mvc.UI
@model OSIS.PEPPAM.Mvc.Models.Notificaciones_MasterModel
@{
    IFuncionality uiObject = new Funcionality().GetFuncionality("Notificaciones_Master");

    ViewBag.Title = Resources.Shared.AppName + " - " + uiObject.Name + " : " + Model.EntityDisplayName;
    string twoLettersCulture = new System.Globalization.CultureInfo(Culture).TwoLetterISOLanguageName;
    string decimalSeparator = new System.Globalization.CultureInfo(Culture).NumberFormat.NumberDecimalSeparator;
    string groupSeparator = new System.Globalization.CultureInfo(Culture).NumberFormat.NumberGroupSeparator;
}

<link href="@Url.Content("~/Scripts/kendoui.2014.1.416/styles/web/kendo.common-bootstrap.core.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Scripts/kendoui.2014.1.416/styles/web/kendo.bootstrap.css")" rel="stylesheet" type="text/css" />
<h2>@uiObject.Name</h2>
<h5>@uiObject.Description</h5>



<div class="entity-form-container">
    @using (Html.BeginForm("Edit", "Notificaciones_Master", FormMethod.Post, new { id = "Notificaciones_MasterForm", role = "form", @class = "form-horizontal form" }))
    {

        <div class="form-commands-container">
            <button class="btn btn-default btn-sm back-button" title="@uiObject.GetAction("Back").Help"><span class="glyphicon glyphicon-arrow-left"></span>@uiObject.GetAction("Back").Description</button>
            <button class="btn  btn-default btn-sm save-button" title="@uiObject.GetAction("Save")"><span class="glyphicon glyphicon-ok"></span>@uiObject.GetAction("Save").Description</button>
        </div>
        <hr />

        @Html.ValidationSummary(true)
        @Html.Partial("_CreateOrEdit", Model)

    }
</div>

<div id="Notificaciones_MasterTab-tabs">
    <ul class="nav nav-tabs">

        <li>
            <a href="#notificaciones_Objetivo_TransTab" data-toggle="tab">@Funcionality.GetDescription("Notificaciones_Objetivo_Trans", "Notificaciones_Objetivo_Trans")</a>
        </li>

        <li>
            <a href="#personas_Notificaciones_TransTab" data-toggle="tab">@Funcionality.GetDescription("Personas_Notificaciones_Trans", "Personas_Notificaciones_Trans")</a>
        </li>

    </ul>
</div>

<div id="Notificaciones_MasterTab-contents" class="tab-content">


    <!-- Notificaciones_Objetivo_Trans Tab begin -->
    <div id="notificaciones_Objetivo_TransTab" class="tab-pane fade">

        <!-- Grid begin -->
        <div class="secondary-grid-commands">
            <button class="btn btn-default btn-xs popup-create-button" title="@uiObject.GetAction("Create").Help" data-grid="Notificaciones_Objetivo_TransGrid" data-masterid="@Model.Notificacion_Numero" data-detailname="AddNotificaciones_Objetivo_Trans">
                <span class="glyphicon glyphicon-plus"></span>@uiObject.GetAction("Create").Description
            </button>
            <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help">
                <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description
            </button>
        </div>
        <table id="Notificaciones_Objetivo_TransGrid" width="100%" class="table table-striped table-bordered"></table>
        <!-- Grid end -->

    </div>
    <!-- Notificaciones_Objetivo_Trans Tab end -->
    <!-- Personas_Notificaciones_Trans Tab begin -->
    <div id="personas_Notificaciones_TransTab" class="tab-pane fade">

        <!-- Grid begin -->
        <div class="secondary-grid-commands">
            <button class="btn btn-default btn-xs popup-create-button" title="@uiObject.GetAction("Create").Help" data-grid="Personas_Notificaciones_TransGrid" data-masterid="@Model.Notificacion_Numero" data-detailname="AddPersonas_Notificaciones_Trans">
                <span class="glyphicon glyphicon-plus"></span>@uiObject.GetAction("Create").Description
            </button>
            <button class="btn btn-default btn-xs report-button" title="@uiObject.GetAction("Report").Help">
                <span class="glyphicon glyphicon-download-alt"></span>@uiObject.GetAction("Report").Description
            </button>
        </div>
        <table id="Personas_Notificaciones_TransGrid" width="100%" class="table table-striped table-bordered"></table>
        <!-- Grid end -->

    </div>
    <!-- Personas_Notificaciones_Trans Tab end -->

</div>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script src="@Url.Content("~/Scripts/kendoui.2014.1.416/js/kendo.core.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/kendoui.2014.1.416/js/kendo.ui.core.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/kendoui.2014.1.416/js/kendo.dropdownlist.js")" type="text/javascript"></script>


    <script type="text/javascript">
        $(document).ready(function () {

            $(".popup-create-button").on("click", function () {
                $("#Zona_Secuencia").kendoDropDownList();
            });
        });



        $(function () {
            formUtils.setupFormControls("Notificaciones_MasterForm");
            formUtils.setupFormActionButtons({
                formId: "Notificaciones_MasterForm",
                indexPageUrl: "@Url.Action("Index")",
                buttonsContainerSelector: ".form-commands-container"
            });

            $('#Notificaciones_MasterTab-tabs a[data-toggle="tab"]').on('shown.bs.tab', function (e, s) {
                var tabShown = e.target.attributes["href"].value;
                if (tabShown == "#notificaciones_Objetivo_TransTab") {
                    setupNotificaciones_Objetivo_TransGrid();
                }
                if (tabShown == "#personas_Notificaciones_TransTab") {
                    setupPersonas_Notificaciones_TransGrid();
                }
            });
            $("#Notificaciones_MasterTab-tabs a[data-toggle='tab']:first").tab("show");
        });
        var Notificaciones_Objetivo_TransGrid;
        function setupNotificaciones_Objetivo_TransGrid() {
            var gridId = "Notificaciones_Objetivo_TransGrid";

            if ($("#" + gridId).data("grid-initialized")) {
                Notificaciones_Objetivo_TransGrid.fnClearTable();
                return;
            }
            else
                $("#" + gridId).data("grid-initialized", "true");


            gridUtils.setupGridToolbarButtons({
                gridId: gridId,
                toolbarContainerSelector: "#notificaciones_Objetivo_TransTab",
                addUrl: "@Url.Action("AddNotificacionesObjetivoTrans", "Notificaciones_Master", new {notificacion_Numero = Model.Notificacion_Numero})",
                reportUrl: "@Url.Action("ReportNotificacionesObjetivoTrans", "Notificaciones_Master", new {notificacion_Numero = Model.Notificacion_Numero})"
            });

            gridUtils.setupGridRowButtons({
                gridId: gridId
            });

            Notificaciones_Objetivo_TransGrid = $("#" + gridId).dataTable({
                "aoColumns": [
                @Html.Raw(uiObject.GetGridColumnsArray("Notificaciones_Objetivo_Trans")),

                    {
                        sClass: "row-options small",
                        bSortable: false,
                        mData: null,
                        mRender: function (data, type, datasource) {
                            var rowId = datasource.EntityKey;
                            var editHtml = '<a href="@Url.Action("EditNotificacionesObjetivoTrans", "Notificaciones_Master")?entityKey_child=' + rowId + '&notificacion_Numero_parent=@Model.Notificacion_Numero" data-detailname="EditNotificaciones_Objetivo_Trans" class="row-popup-edit btn btn-sm btn-default" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>';
                            var deleteHtml = '<a href="@Url.Action("DeleteNotificacionesObjetivoTrans", "Notificaciones_Master")?entityKey_child=' + rowId + '&notificacion_Numero_parent=@Model.Notificacion_Numero" class="row-delete btn btn-sm btn-danger" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>';
                            return editHtml + deleteHtml;
                        }
                    }
                ],
                "aaSorting": [[1, "asc"]],
                
                "oLanguage": datatables_locale,
                "bFilter": false, /* Disable filtering */
                "bSort": false, /* Disable sorting */
                "bProcessing": true,
                "bServerSide": true,
                "sAjaxSource": "@Url.Action("LoadNotificacionesObjetivoTrans")",
                "sServerMethod": "POST",
                
                "fnServerParams": function (aoData) {
                    aoData.push({ "name": "notificacion_Numero", "value": "@Model.Notificacion_Numero" });
                }
            });
        }

        var Personas_Notificaciones_TransGrid;
        function setupPersonas_Notificaciones_TransGrid() {
            var gridId = "Personas_Notificaciones_TransGrid";

            if ($("#" + gridId).data("grid-initialized")) {
                Personas_Notificaciones_TransGrid.fnClearTable();
                return;
            }
            else
                $("#" + gridId).data("grid-initialized", "true");


            gridUtils.setupGridToolbarButtons({
                gridId: gridId,
                toolbarContainerSelector: "#personas_Notificaciones_TransTab",
                addUrl: "@Url.Action("AddPersonasNotificacionesTrans", "Notificaciones_Master", new {notificacion_Numero = Model.Notificacion_Numero})",
                reportUrl: "@Url.Action("ReportPersonasNotificacionesTrans", "Notificaciones_Master", new {notificacion_Numero = Model.Notificacion_Numero})"
            });

            gridUtils.setupGridRowButtons({
                gridId: gridId
            });

            Personas_Notificaciones_TransGrid = $("#" + gridId).dataTable({
                "aoColumns": [
                @Html.Raw(uiObject.GetGridColumnsArray("Personas_Notificaciones_Trans")),

                    {
                        sClass: "row-options small",
                        bSortable: false,
                        mData: null,
                        mRender: function (data, type, datasource) {
                            var rowId = datasource.EntityKey;
                            var editHtml = '<a href="@Url.Action("EditPersonasNotificacionesTrans", "Notificaciones_Master")?entityKey_child=' + rowId + '&notificacion_Numero_parent=@Model.Notificacion_Numero" data-detailname="EditPersonas_Notificaciones_Trans" class="row-popup-edit btn btn-sm btn-default" title="@Resources.Shared.Edit"><span class="glyphicon glyphicon-pencil" /></a>';
                            var deleteHtml = '<a href="@Url.Action("DeletePersonasNotificacionesTrans", "Notificaciones_Master")?entityKey_child=' + rowId + '&notificacion_Numero_parent=@Model.Notificacion_Numero" class="row-delete btn btn-sm btn-danger" title="@Resources.Shared.Delete"><span class="glyphicon glyphicon-remove" /></a>';
                            return editHtml + deleteHtml;
                        }
                    }
                ],
                "aaSorting": [[1, "asc"]],
                
                "oLanguage": datatables_locale,
                "bFilter": false, /* Disable filtering */
                "bSort": false, /* Disable sorting */
                "bProcessing": true,
                "bServerSide": true,
                "sAjaxSource": "@Url.Action("LoadPersonasNotificacionesTrans")",
                "sServerMethod": "POST",
                
                "fnServerParams": function (aoData) {
                    aoData.push({ "name": "notificacion_Numero", "value": "@Model.Notificacion_Numero" });
                }
            });
        }



        $(document).ready(function () {
            // $('#myModal').modal('show');

            //Dropdownlist Selectedchange event
            $("#Ruta_Secuencia").change(function () {
                $("#Horario_Secuencia").empty();
                $.ajax({
                    // type: 'POST',
                    url: '@Url.Action("LoadHorarios")', // we are calling json method
                    dataType: 'json',
                    data: { rutaSecuencia: $("#Ruta_Secuencia").val() },
                    success: function (states) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $.each(states, function (i, state) {
                            $("#Horario_Secuencia").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                        }); // here we are adding option for States
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            })
        });
    </script>
}







