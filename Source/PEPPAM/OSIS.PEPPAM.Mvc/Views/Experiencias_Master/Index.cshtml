@*
    //------------------------------------------------------------------------------
    // <auto-generated>
    //    This code was generated from a template.
    //
    //    Creador : f.peguero
    //    Dominio : SSRL
    //    Pc      : DTI_GTE_GIS
    //    Fecha   : 03/06/2014 12:43:38 p.m.
    //
    //    Manual changes to this file may cause unexpected behavior in your application.
    //    Manual changes to this file will be overwritten if the code is regenerated.
    // </auto-generated>
    //------------------------------------------------------------------------------

*@
@using Mvc.Core.UI
@using OSIS.PEPPAM.Mvc.UI
@model OSIS.PEPPAM.Mvc.Models.Experiencias_MasterModel
@{
    IFuncionality uiObject = new Funcionality().GetFuncionality("Experiencias_Master");

    ViewBag.Title = Resources.Shared.AppName + " - " + uiObject.Name;
}
@*<style>
   #windows {
       background-color: #fff;
       -ms-border-radius: 10px 10px 10px 10px;
       border-radius: 10px 10px 10px 10px;
       -webkit-box-shadow: 0 0 25px 5px #999;
       -ms-box-shadow: 0 0 25px 5px #999;
       box-shadow: 0 0 25px 5px #999;
       color: #111;
       display: none;
       -moz-min-width: 450px;
       -ms-min-width: 450px;
       -o-min-width: 450px;
       -webkit-min-width: 450px;
       min-width: 450px;
       min-height: 300px;
       width: auto;
       height: auto;
       padding: 25px;
   }

   .b-close {
       border-radius: 7px;
       font: bold 131% sans-serif;
       padding: 0 6px 2px;
       background-color: #2b91af;
       color: #fff;
       cursor: pointer;
       text-align: center;
       text-decoration: none;
       position: absolute;
       right: -7px;
       top: -7px;
   }

       .b-close:hover {
           background-color: #1e1e1e;
       }
</style>*@


<style>
   textarea {
       min-height: 300px;
   }
</style>

<div class="form">

    <h2>@uiObject.Name</h2>
    <h5>@uiObject.Description</h5>
    <div class="row">
        <div class="grid-commands-container grid-top-buttons col-xs-5">
            @ToolbarButtons()
        </div>
        <div class="form-inline grid-view-search col-xs-7">
            <div class="form-group pull-right">
                <input type="text" name="search" class="form-control search-box input-sm" value="" id="Experiencias_MasterSearch" placeholder="@uiObject.GetMessages("DoSearch").Description" />
                <div class="btn-group">
                    <button type="button" class="btn btn-default btn-sm btn-default search-button" title="@uiObject.GetAction("DoSearch")"><span class="glyphicon glyphicon-search"></span></button>
                    <button type="button" class="btn btn-default btn-sm clean-button" title="@uiObject.GetAction("Clean")"><span class="glyphicon glyphicon-remove"></span></button>
                </div>
            </div>
        </div>
    </div>
    <table id="Experiencias_MasterGrid" class="table table-striped table-bordered" width="100%"></table>
    <div class="grid-commands-container grid-bottom-buttons">
        @ToolbarButtons()
    </div>
</div>
@helper ToolbarButtons()
{
    IFuncionality uiObject = new Funcionality().GetFuncionality("Experiencias_Master");

    @*<button class="btn btn-default btn-sm create-button" title="@uiObject.GetAction("Create").Help"><span class="glyphicon glyphicon-plus-sign"></span>@uiObject.GetAction("Create").Description</button>*@
    <button class="btn btn-default btn-sm report-button" title="@uiObject.GetAction("Report").Help"><span class="glyphicon glyphicon-print"></span>@uiObject.GetAction("Report").Description</button>
}

<div id="windows"></div>

@section scripts
{
    <script type="text/javascript">
        $(function() {


            var gridId = "Experiencias_MasterGrid";

            gridUtils.setupGridToolbarButtons({
                gridId: gridId,
                toolbarContainerSelector: ".grid-bottom-buttons, .grid-top-buttons",
                addUrl: "@Url.Action("Create")",
                reportUrl: "@Url.Action("Report")"
            });
            gridUtils.setupGridSearchBox({
                gridId: gridId,
                searchContainerSelector: ".grid-view-search"
            });
            gridUtils.setupGridRowButtons({ gridId: gridId });

            $("#" + gridId).dataTable({
                "aoColumns": [
                    @Html.Raw(uiObject.GetGridColumnsArray("Proc_Experiencias_Paging")),
                    {
                        sClass: "row-options",
                        bSortable: false,
                        mData: null,
                        mVisible: false,
                        mRender: function(data, type, datasource) {
                            var rowId = datasource.Experiencia_Secuencia;
                            var cancelarHtml = '<a href="@Url.Action("AddComentario")?experiencia=' + rowId + '" class="row-comentario btn btn-sm btn-default" title="@uiObject.GetAction("AddComentario").Description"><span class="glyphicon glyphicon-eye-open" /> @uiObject.GetAction("AddComentario").Description</a>';
                            return cancelarHtml;
                        }
                    }
                ],
                "columnDefs": [
                    {
                        // The `data` parameter refers to the data for the cell (defined by the
                        // `data` option, which defaults to the column being worked with, in
                        // this case `data: 0`.
                        "render": function(data, type, row) {


                            var rowId = row.Experiencia_Secuencia;

                            if (data.length > 150) {
                                data = data.substring(0, 150) + '...';
                            } 

                            var cancelarHtml = '<a href="@Url.Action("ViewExperiencia")?eID=' + rowId + '" class="view-Experiencia" > ' + data + ' </a>';

                            return cancelarHtml;

                        },
                        "targets": 3
                    },
                    {
                
                        "render": function(data, type, row) {
                            
                            if (data.length > 150) {
                                data = data.substring(0, 150) + '...';
                            } 
                            return data;

                        },
                        "targets": 4
                    }],
                "aaSorting": [[1, "asc"]],

                "oLanguage": datatables_locale,
                "bProcessing": true,
                "bFilter": true,
                "bServerSide": true,
                "sAjaxSource": "@Url.Action("Load")",
                "sServerMethod": "POST",

                "bStateSave": true,
                "sCookiePrefix": "fapa_",
                "fnCookieCallback": function(sName, oData, sExpires, sPath) {
                    return sName + "=" + JSON.stringify(oData) + ";path=" + sPath;
                },
                "fnStateLoaded": function(oSettings) {
                    var search = oSettings.oPreviousSearch;
                    if (search) {
                        $("input.search-box").val(search.sSearch);
                    }
                }
            });
        });


        $(document).on('click', '.view-Experiencia', function(evt) {
            evt.preventDefault();
            var url = $(this).prop("href");
            $(this).popupAddOrEdit({
                urlGet: url,
                urlPost: '',
                showTitle: false,
                rediretOrReload: "rediret",
                buttons: [
                    {
                        label: 'Cerrar',
                        action: function(dialog) {
                            $('.modal').removeClass('bounce');
                            $('.modal').addClass('rollOut');
                            setTimeout(function() {
                                dialog.close();
                            }, 1000);
                        }
                    }
                ]
            });
        });



        @*$(document).on("click", "#btnAddComentario", function (evt) {
        $.ajax({
            url: '@Url.Action("AddComentario")',
                data: $("#Experiencias_ComentarioForm").serialize(),
                type: 'post',
                success: function (data) {
                    if (data.data == "Ok") {
                        $("#windows").bPopup().close();
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    formUtils.showMessage(jqXHR.responseText);
                }

            });
        });*@


//$(document).on("click", ".row-comentario", function (evt) {
        //    evt.preventDefault();

        //    var url = $(this).prop("href");

        //    $("#windows").bPopup({
        //        content: 'ajax',
        //        loadUrl: url,
        //        modal: true,
        //        modalClose: false,
        //        escClose: true,
        //    });
        //});


        $(document).on("click", ".row-comentario", function(evt) {
            evt.preventDefault();
            var url = $(this).prop("href");
            $(this).popupAddOrEdit({
                urlGet: url,
                urlPost: '@Url.Action("AddComentario")',
                showTitle: false,
                rediretOrReload: "reload",
            });
        });
    </script>
}



