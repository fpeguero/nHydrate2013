@*
    //------------------------------------------------------------------------------
    // <auto-generated>
    //    This code was generated from a template.
    //
    //    Creador : Administrator
    //    Dominio : OSISPC
    //    Pc      : OSISPC
    //    Fecha   : 5/4/2014 5:17:23 PM
    //
    //    Manual changes to this file may cause unexpected behavior in your application.
    //    Manual changes to this file will be overwritten if the code is regenerated.
    // </auto-generated>
    //------------------------------------------------------------------------------

*@
@using Mvc.Core.Security
@using Mvc.Core.UI
@using OSIS.PEPPAM.Mvc.UI
@model OSIS.PEPPAM.Mvc.Models.Horario_TransModel
@{
    IFuncionality uiObject = new Funcionality().GetFuncionality("Horario_Trans");

    ViewBag.Title = Resources.Shared.AppName + " - " + uiObject.Name;

}
<style>
   hr {
       margin-top: 1px !important;
   }

   .form-inline > .form-control {
       display: inline-block;
       width: 250px !important;
       vertical-align: middle;
       margin-left: 15px;
       margin-right: 15px;
   }
</style>




<div class="form">
    <h2>@uiObject.Name</h2>
    <h5>@uiObject.Description</h5>

    <div class="row">
        <div class="grid-commands-container grid-top-buttons col-xs-5">
            @ToolbarButtons()
        </div>
    </div>
    <hr />

    <div class="row searchBox form-inline grid-view-search1">
        
        <div class="col-lg-4">
            @if (((IPrincipal)User).IsInNivel(SeguridadNivel.EncargadoZona))
            {
                <label class="control-label ">@Funcionality.GetDescription("Horario_Trans", "Zona_Secuencia", true)</label>

                @Html.DropDownListFor(model => model.Zona_Secuencia, new SelectList(Zonas_MasterModel.LoadAll(), "Zona_Secuencia", "Zona_Descripcion", Model.Zona_Secuencia), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Ruta_Secuencia)
            }
        </div>
        <div class="col-lg-4">
            <label class="control-label  ">@uiObject.GetField("Ruta_Secuencia").Description</label>

            @Html.DropDownListFor(model => model.Ruta_Secuencia, new SelectList(ViewBag.Puestos, "Ruta_Secuencia", "Ruta_Descripcion", Model.Ruta_Secuencia), new { @class = "form-control search-Select input-xlarge" })
            @Html.ValidationMessageFor(model => model.Ruta_Secuencia)

        </div>
        <div class="col-lg-4">
            
                <input type="text" name="search" class="form-control search-box " value="" id="Horario_TransSearch" placeholder="@uiObject.GetMessages("DoSearch").Description" />
                <div class="btn-group ">
                    <button type="button" class="btn btn-default btn-sm search-button" title="@uiObject.GetAction("DoSearch")"><span class="glyphicon glyphicon-search"></span></button>
                    <button type="button" class="btn btn-default btn-sm clean-button" title="@uiObject.GetAction("Clean")"><span class="glyphicon glyphicon-remove"></span></button>
                </div>
            
        </div>

        </div>

    <table id="Horario_TransGrid" class="table table-striped table-bordered" width="100%"></table>
    <div class="grid-commands-container grid-bottom-buttons">
        @ToolbarButtons()
    </div>
</div>
@helper ToolbarButtons()
{
    IFuncionality uiObject = new Funcionality().GetFuncionality("Horario_Trans");
    <button class="btn btn-default btn-sm create-button" title="@uiObject.GetAction("Create").Help"><span class="glyphicon glyphicon-plus-sign"></span>@uiObject.GetAction("Create").Description</button>
}

@section scripts
{
    <script type="text/javascript">

        $(document).ready(function() {
            $("#Zona_Secuencia").change(function() {
                $("#Ruta_Secuencia").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("LoadPuestos")', // we are calling json method
                    dataType: 'json',
                    data: { zona: $("#Zona_Secuencia").val() },
                    success: function(datas) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        //console.log(states);
                        $.each(datas, function(i, data) {
                            $("#Ruta_Secuencia").append('<option value="' + data.Ruta_Secuencia + '">' + data.Ruta_Descripcion + '</option>');
                        }); // here we are adding option for States
                    },
                    error: function(ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            })

            $("#Zona_Secuencia").on("change", function(evt) {
                evt.preventDefault();

                @*gridUtils.setupGridToolbarButtons({
                    gridId: gridId,
                    toolbarContainerSelector: ".grid-bottom-buttons, .grid-top-buttons",
                    addUrl: "@Url.Action("Create")",
                    reportUrl: "@Url.Action("Report")" + "?puesto=" + $("#Zona_Secuencia").val()
                });*@
            });


        })


        $(function() {
            var gridId = "Horario_TransGrid";

            @*gridUtils.setupGridToolbarButtons({
                gridId: gridId,
                toolbarContainerSelector: ".grid-bottom-buttons, .grid-top-buttons",
                addUrl: "@Url.Action("Create")",
                reportUrl: "@Url.Action("Report")"
            });*@
            gridUtils.setupGridSearchBox({
                gridId: gridId,
                searchContainerSelector: ".grid-view-search1"
            });
            gridUtils.setupGridRowButtons({ gridId: gridId });

            $("#" + gridId).dataTable({
                "aoColumns": [
                    @Html.Raw(uiObject.GetGridColumnsArray("Proc_Horario_Trans_Custom_Paging")),
                    {
                        sClass: "row-options",
                        bSortable: false,
                        mData: null,
                        mRender: function(data, type, datasource) {
                            var rowId = datasource.Horario_Secuencia;
                            //var editHtml = '<a href="@Url.Action("Edit")?horario_Secuencia=' + rowId + '" class="row-edit btn btn-md" title="@uiObject.GetAction("Edit").Description"><span class="glyphicon glyphicon-pencil" /></a>';
                            @*var detailsHtml = '<a href="@Url.Action("Details")?horario_Secuencia=' + rowId + '" class="row-details btn btn-md" title="@uiObject.GetAction("Detail").Description"><span class="glyphicon glyphicon-eye-open" /></a>';
                            var deleteHtml = '<a href="@Url.Action("Delete")?horario_Secuencia=' + rowId + '" class="row-delete btn btn-sm btn-danger" title="@uiObject.GetAction("Delete").Description"><span class="glyphicon glyphicon-remove" /></a>';*@

                            var editHtml = '<a href="@Url.Action("Edit")?horario_Secuencia=' + rowId + '" class="row-edit btn btn-sm btn-default" title="@uiObject.GetAction("Edit").Description"><span class="glyphicon glyphicon-pencil" /> </a>';

                            var cancelarHtml = '<a href="@Url.Action("Cancelar")?horario=' + rowId + '" class="row-cancelar btn btn-sm btn-danger" title="@uiObject.GetAction("Cancelar").Description"><span class="glyphicon glyphicon-remove" /> </a>';

                            return editHtml + cancelarHtml;
                        }
                    }
                ],
                "aaSorting": [[1, "asc"]],

                "oLanguage": datatables_locale,
                "bProcessing": true,
                "bFilter": true,
                "bServerSide": true,
                "sAjaxSource": "@Url.Action("Load")",
                "sServerMethod": "POST",

                "fnServerParams": function(aoData) {
                    aoData.push({ "name": "puesto", "value": $("#Ruta_Secuencia").val() });
                },

                "bStateSave": true,
                "sCookiePrefix": "fapa_",
                "fnCookieCallback": function(sName, oData, sExpires, sPath) {
                    return sName + "=" + JSON.stringify(oData) + ";path=" + sPath;
                },
                "fnStateLoaded": function(oSettings) {
                    var search = oSettings.oPreviousSearch;
                    if (search) {
                        $("input.search-box").val(search.sSearch);
                    }
                }
            });
        });
    </script>

    <script src="@Url.Content("~/Scripts/App/popupAddOrEdit.js")" type="text/javascript"></script>

    <script type="text/javascript">


        $(function() {
            $("body").on("click", '.btn-danger', function(evt) {
                evt.preventDefault();

                var url = $(this).attr('href');

                $("#window").kendoWindow({
                    actions: ["Close"],
                    draggable: false,
                    modal: true,
                    pinned: false,
                    title: "Cancelar BIDS",
                    //visible: false,
                    content: url,
                    height: "250px",
                    position: {
                        top: 100,
                        left: 100
                    },
                    width: "600px"
                });


            });


            $(document).on('click', '#btnCancelar', function(evt) {
                //Handle your event here.
                evt.preventDefault();
                $("#Horario_TransForm").submit();

            });

            dialogCustomActions.addEvent({
                gridId: "Horario_TransGrid",
                messages: '@Html.Raw(Messages.GetOrSetMensaje("MENSAJE_NOTIFICAR_CANCELAR_HORARIO").Trim())',
                titlewindow: 'Cancelar Horario',
                selector: '.row-cancelar'
            });


            $(document).on('click', '.create-button', function (evt) {
                window.location.href = '@Url.Action("AddHorarioTurnos")';
                @*$(this).popupAddOrEdit({
                    urlGet: '@Url.Action("Create")',
                    urlPost: '@Url.Action("Create")',
                    showTitle: false,
                    rediretOrReload: "rediret",
                });*@
            });

           

            @*$(document).on('click', '.create-button', function(evt) {
                evt.preventDefault();

                BootstrapDialog.show({
                    message: $('<div></div>').load('@Url.Action("Create")'),
                    showTitle: false,
                    buttons: [
                        {
                            label: 'Cerrar',
                            action: function (dialog) {
                                dialog.close();

                            }
                        },
                        {
                            id: 'btn-1',
                            label: 'Guardar',
                            cssClass: 'btn-success',
                            action: function(dialog) {
                                var $button = this; // 'this' here is a jQuery object that wrapping the <button> DOM element.
                                $button.disable();
                                $button.spin();
                                dialog.setClosable(false);

                                console.log(dialog.getModalContent());

                                var $content = dialog.getModalContent();

                                var $form = $content.find("form");

                                //Ajax Call

                                $.ajax({
                                    url: '@Url.Action("Create")',
                                    data: $form.serialize(),
                                    type: 'post',
                                    success: function(data, textStatus, XMLHttpRequest) {
                                        //gridAdapter.reload(gridId);
                                        if (data.Result == "Ok") {
                                            window.location.href = '@Url.Action("Edit")?horario_Secuencia=' + data.horario;
                                        } else {
                                            dialog.getModalBody().html(data);

                                            $button.enable();
                                            $button.stopSpin();
                                            dialog.setClosable(true);
                                        }
                                    },
                                    error: function(jqXHR, textStatus, errorThrown) {
                                        //console.log(jqXHR);
                                        //console.log(textStatus);
                                        //console.log(errorThrown);
                                        $("#" + dialogId).remove();
                                        alert($.uiLocale.errors.serverError);
                                    }
                                });


                            }
                        }
                        
                    ]
                });

            });*@

        });


    </script>

}



