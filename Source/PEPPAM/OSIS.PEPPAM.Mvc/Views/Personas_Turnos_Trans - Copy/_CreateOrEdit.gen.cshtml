@*
//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 5/4/2014 8:48:42 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

*@
@using Mvc.Core.UI
@using OSIS.PEPPAM.Mvc.UI
@model OSIS.PEPPAM.Mvc.Models.Personas_Turnos_TransModel 
@{ 
    IFuncionality uiObject = new Funcionality().GetFuncionality("Personas_Turnos_Trans");

    ViewBag.Title = Resources.Shared.AppName + " - " + uiObject.Name;
	string twoLettersCulture = new System.Globalization.CultureInfo(Culture).TwoLetterISOLanguageName;	 
    string decimalSeparator = new System.Globalization.CultureInfo(Culture).NumberFormat.NumberDecimalSeparator; 
    string groupSeparator = new System.Globalization.CultureInfo(Culture).NumberFormat.NumberGroupSeparator;  
} 
<h2>@uiObject.Name</h2>
<h5>@uiObject.Description</h5>
<fieldset> 
    
    
    
    <div class="form-field-group">
        <label class="control-label  col-sm-3 col-lg-4">@uiObject.GetField("Puesto").Description</label>
        <div class="editor col-sm-7 col-lg-8">
            @Html.DropDownListFor(model => model.Ruta_Secuencia, new SelectList(ViewBag.Rutas, "EntityKey", "EntityDisplayName", Model.Ruta_Secuencia), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Persona_Secuencia)
        </div>
    </div> 
    
    <div class="form-field-group">
        <label class="control-label  col-sm-3 col-lg-4">@uiObject.GetField("Horarios").Description</label>
        <div class="editor col-sm-7 col-lg-8">
            @Html.DropDownListFor(model => model.Horario_Secuencia, new SelectList(string.Empty, "EntityKey", "EntityDisplayName", Model.Horario_Secuencia), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Persona_Secuencia)
        </div>
    </div> 
    
    <div class="form-field-group">
        <label class="control-label  col-sm-3 col-lg-4">@uiObject.GetField("Horario_Turno_Secuencia").Description</label>
        <div class="editor col-sm-7 col-lg-8">
            @Html.DropDownListFor(model => model.Horario_Turno_Secuencia, new SelectList(string.Empty, "EntityKey", "EntityDisplayName", Model.Horario_Turno_Secuencia), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Persona_Secuencia)
        </div>
    </div> 
    

    <div class="row"> 
            <div class="form-field-group"> 
                    <label class="control-label col-sm-3 col-lg-4">@uiObject.GetField("Persona_Turno_HC").Description</label> 
                <div class="editor col-sm-7 col-lg-8"> 
                    <label>@Html.RadioButtonFor(model => model.Persona_Turno_HC, "S", new { @class = " ", }) Si</label>
                    <label>@Html.RadioButtonFor(model => model.Persona_Turno_HC, "N", new { @class = " ", }) No</label>

                    @Html.ValidationMessageFor(model => model.Persona_Turno_HC )
                </div>
            </div>

        </div> 
         
        <div class="row"> 

            <div class="form-field-group"> 
                    <label class="control-label col-sm-3 col-lg-4">@uiObject.GetField("Registro_Estado").Description</label> 
                <div class="editor col-sm-7 col-lg-8"> 
                    <label>@Html.RadioButtonFor(model => model.Registro_Estado , "A", new { @class = " ", }) Activo</label> 
                    <label>@Html.RadioButtonFor(model => model.Registro_Estado , "I", new { @class = " ", }) Inactivo</label> 
                    @Html.ValidationMessageFor(model => model.Registro_Estado )
                </div>
            </div>

        </div> 
         
        @*<div class="row"> 

            @if(ViewBag.MasterProperty != "Horario_Turno_Dias_Trans_Personas_Turnos_Trans" && (bool)ViewBag.IsNew == true) 
            { 
                <div class="form-field-group"> 
<label class="control-label  col-sm-3 col-lg-4">@uiObject.GetField("Persona_Secuencia").Description</label>
                    <div class="editor col-sm-7 col-lg-8"> 
                        @Html.DropDownListFor(model => model.EntityKey, new SelectList(Model.HorarioTurnoDiasTransList, "EntityKey", "EntityDisplayName", Model.EntityKey), new { @class = "form-control" }) 
                        @Html.ValidationMessageFor(model => model.EntityKey) 
                    </div> 
                </div> 
            } 
            else 
            { 
                @Html.HiddenFor(model => model.EntityKey) 
            } 

        </div>*@ 
 
        <div class="row">         
            @if (ViewBag.MasterProperty != "Horario_Turno_Dias_Trans_Personas_Turnos_Trans" && (bool)ViewBag.IsNew == true) 
            { 
                <div class="form-field-group"> 
                    <label class="control-label  col-sm-3 col-lg-4">@uiObject.GetField("Persona_Secuencia").Description</label>
                    <div class="editor col-sm-7 col-lg-8"> 
                        @Html.DropDownListFor(model => model.Persona_Secuencia, new SelectList(Model.PersonaList, "Persona_Secuencia", "Persona_Nombres", Model.Persona_Secuencia), new { @class="form-control" }) 
                        @Html.ValidationMessageFor(model => model.Persona_Secuencia ) 
                    </div> 
                </div> 
            } 
            else 
            { 
                @Html.HiddenFor(model => model.Persona_Secuencia) 
            } 

        </div> 
 
        <div class="row">         
        </div>     
         
</fieldset>     
     



@section Scripts {
 <script type="text/javascript">
        $(document).ready(function () {
            // $('#myModal').modal('show');

            //Dropdownlist Selectedchange event
            $("#Ruta_Secuencia").change(function () {
                alert('dfas');
                $("#Horario_Secuencia").empty();
                $.ajax({
                    // type: 'POST',
                    url: '@Url.Action("LoadHorarios")', // we are calling json method
                    dataType: 'json',
                    data: { rutaSecuencia: $("#Ruta_Secuencia").val() },
                    success: function (states) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $.each(states, function (i, state) {
                            $("#Horario_Secuencia").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                        }); // here we are adding option for States
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            })




            $("#Horario_Secuencia").change(function () {
                $("#Horario_Turno_Secuencia").empty();
                $.ajax({
                    // type: 'POST',
                    url: '@Url.Action("LoadHorarioTurnos")', // we are calling json method
                    dataType: 'json',
                    data: { rutaSecuencia: $("#Horario_Secuencia").val() },
                    success: function (states) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $.each(states, function (i, state) {
                            $("#Horario_Turno_Secuencia").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                        }); // here we are adding option for States
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            })


        });
    </script>


}
