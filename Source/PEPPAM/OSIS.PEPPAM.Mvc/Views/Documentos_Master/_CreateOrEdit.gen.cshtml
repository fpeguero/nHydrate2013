@*
//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Creador : Administrator
//    Dominio : OSISPC
//    Pc      : OSISPC
//    Fecha   : 5/17/2014 3:54:08 PM
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

*@
@using Mvc.Core.UI
@using OSIS.PEPPAM.Mvc.UI
@model OSIS.PEPPAM.Mvc.Models.Documentos_MasterModel 
@{ 
    IFuncionality uiObject = new Funcionality().GetFuncionality("Documentos_Master");

    ViewBag.Title = Resources.Shared.AppName + " - " + uiObject.Name;
	string twoLettersCulture = new System.Globalization.CultureInfo(Culture).TwoLetterISOLanguageName;	 
    string decimalSeparator = new System.Globalization.CultureInfo(Culture).NumberFormat.NumberDecimalSeparator; 
    string groupSeparator = new System.Globalization.CultureInfo(Culture).NumberFormat.NumberGroupSeparator;  
} 


        @Html.HiddenFor(model => model.Documento_Secuencia) 
        <div class="row"> 
            <div class="form-field-group"> 
                    <label class="control-label col-sm-3 col-lg-4">@uiObject.GetField("Documento_Nombre").Description</label> 
                <div class="editor col-sm-7 col-lg-8"> 
                    @Html.EditorFor(model => model.Documento_Nombre ) 
                    @Html.ValidationMessageFor(model => model.Documento_Nombre )
                </div>
            </div>

        </div> 
         
        <div class="row"> 

            <div class="form-field-group"> 
                    <label class="control-label col-sm-3 col-lg-4">@uiObject.GetField("Documento_Descripcion").Description</label> 
                <div class="editor col-sm-7 col-lg-8"> 
                    @Html.EditorFor(model => model.Documento_Descripcion ) 
                    @Html.ValidationMessageFor(model => model.Documento_Descripcion )
                </div>
            </div>

        </div> 
         
        <div class="row"> 

            <div class="form-field-group"> 
                    <label class="control-label col-sm-3 col-lg-4">@uiObject.GetField("Documento_Archivo_Nombre").Description</label> 
                <div class="editor col-sm-7 col-lg-8"> 
                    <input type="file" id="file" name="file"/>
                    
                    @Html.HiddenFor(model => model.Documento_Archivo_Nombre);
                    @Html.ValidationMessageFor(model => model.Documento_Archivo_Nombre )
                </div>
            </div>

        </div> 
         
        <div class="row"> 

            @if((bool)ViewBag.IsNew == false) 
			{ 
            <div class="form-field-group"> 
                    <label class="control-label col-sm-3 col-lg-4">@uiObject.GetField("Registro_Estado").Description</label> 
                <div class="editor col-sm-7 col-lg-8"> 
                    <label>@Html.RadioButtonFor(model => model.Registro_Estado , "A", new { @class = " ", }) Activo</label> 
                    <label>@Html.RadioButtonFor(model => model.Registro_Estado , "I", new { @class = " ", }) Inactivo</label> 
                    @Html.ValidationMessageFor(model => model.Registro_Estado )
                </div>
            </div>

            } 
            else
            {
                @Html.HiddenFor(model => model.Registro_Estado);
            }
        </div> 
         
        <div class="row"> 

        </div>     
         
@Html.HiddenFor(model => model.Documento_Archivo_Nombre);

     


