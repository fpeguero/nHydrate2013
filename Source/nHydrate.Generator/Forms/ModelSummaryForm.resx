<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>