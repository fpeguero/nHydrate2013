<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>