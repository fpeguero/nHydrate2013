<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PFutFQAAAABJRU5ErkJggg==
</value>
  </data>
</root>