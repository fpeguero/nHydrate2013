<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>