<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAK
        6wAACusBgosNWgAAACt0RVh0Q3JlYXRpb24gVGltZQBGciAxNiBNYWkgMjAwMyAxNDo1NToxOCArMDEw
        MLhp3EgAAAAHdElNRQfTBRAMNy6FTEhRAAAP1UlEQVRoQ+1Zd3hUdRZ9QEKRKh2UpqggKBYQ6RApUgPS
        VATFVRcLsmAAEQQUEEFd1F1URKSrqEgRkUBI6FEgJIAhk0zLkEzqJNMymTTm7LkvMzEE5uF+639rvu9+
        L44hOefc+7u/c+9TlL++/lLgz1UAXZV6xV2Ut4s6KglFHRSLl+Fpr1gKGO52isXRVrHY+cznM4/P3FsV
        S84tiiWbz0w+M1orFiufl/m0tFIsqXyaGUZ+b2DoWygWXUvFksTnpeYMPi/yKXGekdBMscQzzjVVLGf5
        32f5PN1MiT/dXFlsUpSbNNkK+CudlDOlU9riSvQaIHE3cHEnEP8dcO4r4PRWIHYzcGIDEPM5EPUJfAc+
        Bn7iz+5eDexcCexYBmxfCmxaCHwxD/h0DvCvWcCal4D3XgBWPAu8NRVY+CR88yehLGI8iv8RDu/MUfDM
        GAHX88OQP30w8p4aiJwn+yF9Qi8kD+qM+HahON1COZmkKHWCkhDlBTwyYwHzcUB/BDAcBVL4TIoCfosE
        zu8nmb0kQ2KxO0iGxI5sIZkvgQMktW8tyXwEfP8B8M0qYBsJbXoLWP8GsJaEPp4NvD8TvpUvwrfsOZQt
        mY6ihVPhnfckPHMmwfXqY7C/FI68F0YiZ/owZE0bjOQJYdCF98GZW0NwqrmyICiBotuUBF/0h0AqwRsZ
        8d8CGyZSvTDgg4HA6v7AO32BZb2BpT2BxT2pYndg3v3A7HuBmfcAL3YGXugEPHsnMO0OYEoHYHJ7YHwb
        IPwWYGQrYFhzYHBTlA1sgpL+jVHYtzHcvW+Go1cj5PVohOzuDZHxQAOk3Vcflm4NcPGepkjoeTvO97oD
        xxsrvwQl4GWdQ/cTlY8Gkqn4EmZjUTummyBe53MuQcxmzCKQWa2R2K0GousqBNoYmMp44mZgYkPgsfrA
        mLoEexPB1ibYmsDAEKBfDaBXNaAH/819CuwdFLg7KvB0UeBk5HdWkHuXgqw7FaTzc8ttCsyM+JYKfmmm
        ILZVdRxtoliCEijgwUTijyyZGOAw63pBa+DNjsAbtwPzSSKCSs4hqYg2SLqvOqIe7Iq4pYsQKySmkMCU
        JiTQiARIYgxJjCSJYSQxmCQGkkQ/kuhVAz4ScNzC2PgB3LMfg/d2P4G7FeR0UpApBO4gAX5uIslzrQm+
        uYKTJBHTWIOAuw0JXNjFej/Een6HoG/9Hfxcgn+N4Oe2RUr3EBy8sw2MGZkwO924sHQ+4hqSxGSCn8gs
        jGsAjK4HjBACdYBHalUQ8D1cDt659m24ARQwSp4fhGKCtjEDAQJpzEAqCUgGhABrHycZ0TdrEJAW6Uv4
        gYf1ADsLD18E61WUV8Ez5rVFsoC/qy30aekwXb4MU2oqLjtcuLR4DhKbkMR4gh9H9UeRwHCqP4QEwoRA
        KHy9q8PRhuA/XKiC93iLUFhcAi+/9708GEVUX8ongyEEBLyREddKwQmqf6KpgihNAsyAL44H9zzPwV62
        wjkkIGXjB6/vGaoqn2K5DGOqBSazGWaGJS0NVrcH+qWvwUCVMIbgR1H9R/3lE1YTvr414GxbDl5U93i9
        KCwshJfPotIyFPMzzB6Bwq4ET+Uv+wlICZ0lgeMEf5wkDjXUyEAeLyDfr1+zTe4Bdr3JrtKivOapvPFh
        gu/QEsmmVBjMqTAajTCZTEiVDDAT1owMZBQWwbx8Li7z0KnqS/kMrgVf/5BrwKvAi4pQXFyMkpISlPqA
        MiHxj+Hw8ICbCdxE9Q18nuHvO0YCR5jhyAYaBHJ5Y/pi2dPPssd/x779cjP1wBp71ST4VtAZTNATvMEP
        XlXfYkEaM5Ceno6MrCxksySsKyKQzTrHEB7eQaFwtqPy/1xQoXxl8KWlpSgrK8MVnw/koAbmhcP9QHXo
        mTE9CfzaQpHugyONFfysRYB/1IJjG3lBsYx2zCeBpjD3rY3Ids2RZDAixWSG3mCAgVFZfQFvtVqRmZmJ
        7Nxc2ChnzrJZsBOAS8C/O+f3mmfZBJSvAH/lCnwkcNXXG+Pg7FEbOgoRSwIxJCCxv75GBrLoVRCzHji5
        Hfg6AuaeIYi8rTWSjCaWjhnJycnQ6/Vq+QTUl/JR1WcJZTEDOTk5sOXbkUc89iV/h/OtGeXdhsCl5quC
        F+DXgA8wWTYVzgFNcZLlE0312YGwr54GAasQiPqM1oB+Z+tsOEbWweFG1XAxOgrJPLgpBB9Qv3L5VKif
        nY1cyYDNhnyHAw6Wk6u4jOC98Hg86oEN1LyUjSZ4ITF/FGy8nYXAYYKPIokf62oRoEtEJL1MNM3ahleB
        ZxrCNbo+TtRXcOloDPSX0yrqP3B4A+qr5eMnkJeXB7vdDqfTCbfbjYKCggr15cCqNX+9sqlcQ6+GIad7
        HSSyhNTu04hBEru1CIj9xT56och1wOcvA0+yHT7dDO7hdXGG9Zd8/ChM1gyY2XmqEqgoH1E/Px8OZsDl
        cqkEKqsfqPugZSMkZj2CXIK/RPBJvDekhR4kgYO8LHfdpJGBVHpz7Hmflxiz8Amt70QSeKLcIhQMrQN6
        dhhOx8KcmQULa1+6T6B8ghH4r9WfFQZbjzpIIvhLbAK/kYB0oEiCP9BAwc46GgTMJODbSQu8l3b447/x
        VmUvn0RrMIkWgeHhhZTCX2iOOwNLVg7SKnefIOUj6gcOb6B8gqofMRz2nvWQfKsCHbtXIv/WRYb0f7ZP
        /EwS32sRMHIC8n2znIMJvfwHz/BGZR8XYybeZmx5eHkpWdrzpkyIQ1qOTb3AtOq/avkErf3XhsPxcF0Y
        CDiZ4JNEfRK5yKCBw34SkPi2lkYGDBzfsI3Dx7fMwipOTaPoIMPFGjPEnIm7pEUopi3Iou21Jv4Ga27e
        /07AD94oFxfFCah/geATWErSgfaxkbCF4uuaGgR0nEWxaRFHwhUc/abQCoSWgxZXKdZAvA3Pgnj8kp50
        lfQrmSlJyGLvl/4vLTRwgKUDSf1fLwMVzUYur5f7wdG9NoxUXmyDqC+1L8qfJ/gEOtEoHuAfCf5Hktge
        qkVAMvDF68BmGrm3JtEKcAAR0OJpBPhQGU7oLHkWCunX8+dMRobdyQss+xoC0oGuR+Ca+l+3EN5HmkBP
        AilUX0pHav8CwccTfBxDOtBeEtjD0CRAO2zBp6/xDmAW3hxPH8PpSYaRRxhiiQexpAbUhJfg82aNR5q7
        iP4nu+IGrpyBYATkDFzztWUFCke0xiWCveSveykdsdFnGNKB2P+xmwS2hGhkIJHTjrpB+GwBp7GxnKBI
        QEDLNEU/j36h8LJsbK+Ew+IoQDovL7EQf8oh3vw2Cka1wwX6nvMkIkPMWbpQcaLSgdj/VRJbamgQuMAS
        8q3hBfZvZmHuKKA3HSVBoy9HwT4hqvK5M8fCnO/iDJB+1T0Q7Bb+w11I0rJ9Jdzjbsc53rwCnmsU/MKQ
        7rOTBCS+rK5BIIEl5FvFC2wNszBnOPAQCfQpH8S9nJLynh8Ko80BM31RwEZX9UFVbUQwD3RtHfk/2bEa
        7kmd8Qs7jwzyMkpKB2L/V0OTwDkpoRW8wFYzC68MAR4kAZIoovK2F4ZCn50PI+eBGxq5SlbiejdxUPCB
        //HDGjgnd8Vx1r6MkdKBvqtdTmB9NY0MxHHexJKngeXPwzeDu6B7CV6G7elcLGXaoOcEFrDSf8gL0Qe5
        g7RSTS8kRHasQv6krjhC9XezdHaQgMR6RYPAaWbAx5XflaXTUfbcAHg5ZNvDu+CizYlkzgQyC1xvmAnM
        AledA94DzqJSuNlOPbTVVe3EDd2oSuJd2Kc8gB9qKfhGggQ+0yTQSLGUvj4ZZYumoWR6XxRx2VQmN+6m
        NbiUlnHVPCAZCHoOaKXzS7ku+Zzt+MU+5duHkrKKeaCyIw2aCaeNi7VxONepIb4n+K/9oUngV078xRET
        UPL6FHin9YaHiyYPtwRgJjK++gTJ1ix1pKw8kVXMw4GJLNcGWxG3DBuXo2RIU9gf4i3OwcTDAV5WKNeb
        yK45E+483kOjcbZjPRwqd6D4qiaDJDQJnGIGvLPGoTBiMgqnPAwXgTtJwEUi6EbbsGMdUkjCyPHyujOx
        XGqFxfBuWYnSR5vDRFug54Vk60NH+/bjKOT6xFtSqpJQNxH+gb58MvPTcBH84jGIu6s+Inl4ZZD5jgS2
        hZbHOq0SOskMeF4ZDc/s8XA9/hDyeYDzCT6PYefWDN1JYtdG6EnCVLUb8VKzujj3bnoHpcNbqODF26j2
        gLdpzgBuOFZOvT4J3s7q/VzgUMHH+8GLhYhkfMva30rwW0NuQOA4VxZO7ujdM8fBPrEHckkgl1mQdV82
        w8bzgD41kblvOwwZ2ZzMLOWTmVxqdnqfbe+hjOANojyBizHT0duIOZMbNnsQF2XvP3sViWKWVQmxX3HZ
        6b/GIqFTAxyi8gL+ANvoz+xCcoBpIbDlRhk4xpVF/nPD4JjBYXrc/cgSt0nQsmyVdZ9EJu8EhNVH1v5v
        uBslCV5qqbzcXFtXU/mWFaZMLLEAV4cSv7M8y8EkM4z71o9mlB9qKSdKX+pg2Qj4uxviYCXwcgOrFpoE
        NpPA5ho3yEAMM5Anb0eeG47sMd1g5WZMtsQSsquUdZ+FIatvPNoUWVG7YHAWwrmVyo9oiRT/JBVwlDKQ
        BDy9eBsxZ3LDWoe048uOmSik8l5Rfkk4Ejo3xCF6nYDyAfB7+dl2HuBNBL/xRiUUwwzkPDWIb0aGImvk
        PerkJStu2RIHNsWy7jP6P8eE9ihYOx9lo29Rx0AZwEVxmWMFuPh51RITeGVvc4zKpg/h0ng9Pdeqp3C+
        SyP1wFYFv0ccKEPqfyMJ0EZoH+IoEkif0BtZT4XB+mgXmAjU7N/Ry5JVNsUGfibrvmSWh6ljdRSHt4fO
        DzxRrLAfvAwi8QQufl6Ws6flJQV9zSn6G9nzUCxYR3bCbw+2UMtGuo3YZpl7pWxEeQEvLTQAfsONCLDn
        xqf0vQ0pfCelH9oNF/mHVSUD05Ff0XOiqHh1HsxfCUp2lyo4/0sIWYMElrEyz6pLKYbaVQQkM/ATCeyl
        Rdjjt8lilwWs+B3pOnJwpfdL6YjyAt6fgVNB39BwdFssCqUMuw+JY/v/DorAAvv5o/4tsWwKDhOcAJOF
        k7Q76Rr7GT8RoIx/MkVJ7KKSPxDg9wzp6WLMxBbI4ZTLSYBKmUiXUQ8rQ635KuC/qKaW0NygBGL4HpYk
        Th4juPNdmuBs+1rl6jJiWQIBhU+QkKoyycrPisrRfMruUkrhoKjtV1otCZIJzLRSFqK2SkjI+BUPkJED
        u83fMqXrbKLyGxkCnkYu5gtFqaX5rng/38P+XE9ZsK+ucop7SB3TrONh0jG9Oiqoo3o6rjZ0dIa6HTUV
        HRXUbQ9hhCo6Tku6Tfyef1D3ZTVFx7TrNiiKjn9cR+XUoBXQjMDPVX7y35xkzL0h+D/3nf9fv+3/Q4H/
        ABgcw9VLpz/UAAAAAElFTkSuQmCC
</value>
  </data>
</root>