<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAQAAAAAAAoAQAAFgAAACgAAAAQAAAAIAAAAAEABAAAAAAAgAAAAAAAAAAAAAAAEAAAABAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAAAAAAAAAAAAAAAJERAAAAAAAAl3EAAAAAAACZmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADERAAAAAAAAMd0AAAAAAAAzMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKIiAAAA
        AAAAp3IAAAAAAACqqgD//wAA/8MAAP/DAAD/gwAA/38AAP7/AAD9/wAAC/8AAAf/AAAL/wAA/f8AAP7/
        AAD/fwAA/4MAAP/DAAD/wwAA
</value>
  </data>
</root>