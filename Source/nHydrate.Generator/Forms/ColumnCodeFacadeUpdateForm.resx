<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /JdG4J/46t4nidpk0wAAAABJRU5ErkJggg==
</value>
  </data>
</root>