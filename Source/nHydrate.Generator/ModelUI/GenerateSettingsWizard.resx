<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        y2D4e3WcAo4AAAAASUVORK5CYII=
</value>
  </data>
</root>