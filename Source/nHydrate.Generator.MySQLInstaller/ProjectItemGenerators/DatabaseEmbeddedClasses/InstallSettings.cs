//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using System.Xml;

namespace PROJECTNAMESPACE
{
	/// <summary>
	/// 
	/// </summary>
	internal class InstallSettings
	{
		/// <summary>
		/// 
		/// </summary>
		public string PrimaryServer { get; set; }

		/// <summary>
		/// 
		/// </summary>
		public string PrimaryDatabase { get; set; }

		/// <summary>
		/// 
		/// </summary>
		public string PrimaryUserName { get; set; }

		/// <summary>
		/// 
		/// </summary>
		public string PrimaryPassword { get; set; }

		/// <summary>
		/// 
		/// </summary>
		public string CloudServer { get; set; }

		/// <summary>
		/// 
		/// </summary>
		public string CloudDatabase { get; set; }

		/// <summary>
		/// 
		/// </summary>
		public string CloudUserName { get; set; }

		/// <summary>
		/// 
		/// </summary>
		public string CloudPassword { get; set; }

		/// <summary>
		/// 
		/// </summary>
		public InstallSettings()
		{
			this.IsLoaded = false;
		}

		/// <summary>
		/// 
		/// </summary>
		public bool IsLoaded { get; private set; }

		/// <summary>
		/// 
		/// </summary>
		public bool Load()
		{
			FileInfo fi = new FileInfo(System.Reflection.Assembly.GetExecutingAssembly().Location);
			fi = new FileInfo(Path.Combine(fi.DirectoryName, "installsettings.xml"));
			if (!fi.Exists) return false;

			XmlDocument document = new XmlDocument();
			document.Load(fi.FullName);

			var node = document.DocumentElement.SelectSingleNode("primary");
			this.PrimaryServer = XmlHelper.GetNodeValue(node, "server", string.Empty);
			this.PrimaryUserName = XmlHelper.GetNodeValue(node, "username", string.Empty);
			this.PrimaryPassword = XmlHelper.GetNodeValue(node, "password", string.Empty);
			this.PrimaryDatabase = XmlHelper.GetNodeValue(node, "database", string.Empty);

			this.IsLoaded = true;
			return true;
		}

		public void Kill()
		{
			var fi = new FileInfo(System.Reflection.Assembly.GetExecutingAssembly().Location);
			fi = new FileInfo(Path.Combine(fi.DirectoryName, "installsettings.xml"));
			if (fi.Exists) fi.Delete();
			System.Threading.Thread.Sleep(500);
		}

		/// <summary>
		/// 
		/// </summary>
		public bool Save()
		{
			var fi = new FileInfo(System.Reflection.Assembly.GetExecutingAssembly().Location);
			fi = new FileInfo(Path.Combine(fi.DirectoryName, "installsettings.xml"));
			if (fi.Exists) fi.Delete();
			System.Threading.Thread.Sleep(500);

			XmlDocument document = new XmlDocument();
			document.LoadXml("<settings></settings>");

			var node = XmlHelper.AddElement(document.DocumentElement, "primary", string.Empty) as XmlElement;
			XmlHelper.AddElement(node, "server", this.PrimaryServer);
			XmlHelper.AddElement(node, "username", this.PrimaryUserName);
			XmlHelper.AddElement(node, "password", this.PrimaryPassword);
			XmlHelper.AddElement(node, "database", this.PrimaryDatabase);
			document.Save(fi.FullName);
			return true;
		}

		/// <summary>
		/// 
		/// </summary>
		public string GetPrimaryConnectionString()
		{
			return "server=" + this.PrimaryServer + ";Initial Catalog=" + this.PrimaryDatabase + ";user id=" + this.PrimaryUserName + ";password=" + this.PrimaryPassword + ";";
		}

		/// <summary>
		/// 
		/// </summary>
		public string GetCloudConnectionString()
		{
			return "server=" + this.CloudServer + ";Initial Catalog=" + this.CloudDatabase + ";user id=" + this.CloudUserName + ";password=" + this.CloudPassword + ";";
		}

	}
}
